{"ast":null,"code":"import\"antd/es/input/style\";import _Input from\"antd/es/input\";import\"antd/es/row/style\";import _Row from\"antd/es/row\";import\"antd/es/col/style\";import _Col from\"antd/es/col\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import _toConsumableArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectWithoutProperties from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useSelector,useDispatch}from'react-redux';import FeatherIcon from'feather-icons-react';import{Link}from'react-router-dom';import{sortableContainer,sortableElement,sortableHandle}from'react-sortable-hoc';import arrayMove from'array-move';import{Span,TodoStyleWrapper}from'./style';import{Main,TableWrapper,BasicFormWrapper}from'../styled';import{Modal}from'../../components/modals/antd-modals';import{Button}from'../../components/buttons/buttons';import{Cards}from'../../components/cards/frame/cards-frame';import{PageHeader}from'../../components/page-headers/page-headers';import{ShareButtonPageHeader}from'../../components/buttons/share-button/share-button';import{ExportButtonPageHeader}from'../../components/buttons/export-button/export-button';import{CalendarButtonPageHeader}from'../../components/buttons/calendar-button/calendar-button';import{ToDoAddData,ToDoDeleteData,onStarUpdate}from'../../redux/todo/actionCreator';var DragHandle=sortableHandle(function(){return/*#__PURE__*/React.createElement(FeatherIcon,{size:16,style:{cursor:'pointer',color:'#999'},icon:\"move\"});});var ToDo=function ToDo(){var todoData=useSelector(function(state){return state.Todo.data;});var dispatch=useDispatch();var _useState=useState({inputData:'',selectedRowKeys:[]}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var selectedRowKeys=state.selectedRowKeys,inputData=state.inputData;var columns=[{title:'',dataIndex:'item'},{title:'',dataIndex:'action',width:120}];var onHandleDelete=function onHandleDelete(key){var data=todoData.filter(function(item){return item.key!==key;});dispatch(ToDoDeleteData(data));};var dataSource=[];if(todoData!==null){todoData.map(function(item,index){return dataSource.push({key:index+1,index:index,item:/*#__PURE__*/React.createElement(Span,{className:selectedRowKeys.includes(index)?'todo-title active':'todo-title inactive'},item.item),action:/*#__PURE__*/React.createElement(\"div\",{className:\"todos-action\"},/*#__PURE__*/React.createElement(DragHandle,null),/*#__PURE__*/React.createElement(Link,{className:item.favorite?'star active':'star',onClick:function onClick(){return dispatch(onStarUpdate(todoData,item.key));},to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{icon:\"star\",style:{color:item.favorite?'gold':'#888'},size:16})),/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return onHandleDelete(item.key);},to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{icon:\"trash-2\",size:16})))});});}var _Form$useForm=_Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var onSelectChange=function onSelectChange(selectedRowKey){setState(_objectSpread(_objectSpread({},state),{},{selectedRowKeys:selectedRowKey}));};var rowSelection={onChange:onSelectChange,getCheckboxProps:function getCheckboxProps(record){return{disabled:record.name==='Disabled User',// Column configuration not to be checked\nname:record.name};}};var SortableItem=sortableElement(function(props){return/*#__PURE__*/React.createElement(\"tr\",props);});var SortableContainer=sortableContainer(function(props){return/*#__PURE__*/React.createElement(\"tbody\",props);});var onSortEnd=function onSortEnd(_ref){var oldIndex=_ref.oldIndex,newIndex=_ref.newIndex;if(oldIndex!==newIndex){var newData=arrayMove([].concat(todoData),oldIndex,newIndex).filter(function(el){return!!el;});return dispatch(ToDoAddData(newData));}return true;};var DraggableBodyRow=function DraggableBodyRow(_ref2){var className=_ref2.className,style=_ref2.style,restProps=_objectWithoutProperties(_ref2,[\"className\",\"style\"]);// function findIndex base on Table rowKey props and should always be a right array index\nvar index=dataSource.findIndex(function(x){return x.index===restProps['data-row-key'];});return/*#__PURE__*/React.createElement(SortableItem,Object.assign({index:index},restProps));};var DraggableContainer=function DraggableContainer(props){return/*#__PURE__*/React.createElement(SortableContainer,Object.assign({useDragHandle:true,helperClass:\"row-dragging\",onSortEnd:onSortEnd},props));};var onInputChange=function onInputChange(e){setState(_objectSpread(_objectSpread({},state),{},{inputData:e.target.value}));};var onSubmitHandler=function onSubmitHandler(){var arrayData=[];todoData.map(function(data){return arrayData.push(data.key);});var max=Math.max.apply(Math,arrayData);if(inputData!==''){dispatch(ToDoAddData([].concat(_toConsumableArray(todoData),[{key:max+1,item:inputData,time:new Date().getTime(),favorite:false}])));setState(_objectSpread(_objectSpread({},state),{},{inputData:'',visible:false}));}else{alert('Please Give a Task Title...');}};var showModal=function showModal(){setState(_objectSpread(_objectSpread({},state),{},{visible:true}));};var onCancel=function onCancel(){setState(_objectSpread(_objectSpread({},state),{},{visible:false}));};var handleCancel=function handleCancel(){onCancel();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PageHeader,{ghost:true,title:\"To Do\",buttons:[/*#__PURE__*/React.createElement(\"div\",{key:\"1\",className:\"page-header-actions\"},/*#__PURE__*/React.createElement(CalendarButtonPageHeader,null),/*#__PURE__*/React.createElement(ExportButtonPageHeader,null),/*#__PURE__*/React.createElement(ShareButtonPageHeader,null),/*#__PURE__*/React.createElement(Button,{size:\"small\",type:\"primary\"},/*#__PURE__*/React.createElement(FeatherIcon,{icon:\"plus\",size:14}),\"Add New\"))]}),/*#__PURE__*/React.createElement(Main,null,/*#__PURE__*/React.createElement(_Row,{gutter:30},/*#__PURE__*/React.createElement(_Col,{md:24},/*#__PURE__*/React.createElement(TodoStyleWrapper,null,/*#__PURE__*/React.createElement(Cards,{title:\"Task Lists\"},/*#__PURE__*/React.createElement(TableWrapper,{className:\"table-responsive\"},/*#__PURE__*/React.createElement(_Table,{rowSelection:_objectSpread({type:'checkbox'},rowSelection),columns:columns,dataSource:dataSource,pagination:false,rowKey:\"index\",components:{body:{wrapper:DraggableContainer,row:DraggableBodyRow}}})),/*#__PURE__*/React.createElement(\"div\",{className:\"new-todo-wrap\"},/*#__PURE__*/React.createElement(Button,{onClick:showModal,className:\"btn-toDoAdd\",transparented:true,type:\"primary\",size:\"large\"},\"+ Add New Task\")))))),/*#__PURE__*/React.createElement(Modal,{type:state.modalType,title:\"Add New Todo\",visible:state.visible,footer:null,onCancel:handleCancel},/*#__PURE__*/React.createElement(\"div\",{className:\"todo-modal\"},/*#__PURE__*/React.createElement(BasicFormWrapper,null,/*#__PURE__*/React.createElement(_Form,{className:\"adTodo-form\",name:\"todoAdd\",form:form,onFinish:onSubmitHandler},/*#__PURE__*/React.createElement(_Input,{value:inputData,onChange:onInputChange,placeholder:\"Input Item Name.......\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{onClick:showModal,htmlType:\"submit\",className:\"btn-adTodo\",type:\"primary\",size:\"large\"},\"Add New\")))))));};export default ToDo;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/toDo/ToDo.js"],"names":["React","useState","useSelector","useDispatch","FeatherIcon","Link","sortableContainer","sortableElement","sortableHandle","arrayMove","Span","TodoStyleWrapper","Main","TableWrapper","BasicFormWrapper","Modal","Button","Cards","PageHeader","ShareButtonPageHeader","ExportButtonPageHeader","CalendarButtonPageHeader","ToDoAddData","ToDoDeleteData","onStarUpdate","DragHandle","cursor","color","ToDo","todoData","state","Todo","data","dispatch","inputData","selectedRowKeys","setState","columns","title","dataIndex","width","onHandleDelete","key","filter","item","dataSource","map","index","push","includes","action","favorite","useForm","form","onSelectChange","selectedRowKey","rowSelection","onChange","getCheckboxProps","record","disabled","name","SortableItem","props","SortableContainer","onSortEnd","oldIndex","newIndex","newData","concat","el","DraggableBodyRow","className","style","restProps","findIndex","x","DraggableContainer","onInputChange","e","target","value","onSubmitHandler","arrayData","max","Math","time","Date","getTime","visible","alert","showModal","onCancel","handleCancel","type","body","wrapper","row","modalType"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Table, Input, Form } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport PropTypes from 'prop-types';\r\nimport { Span, TodoStyleWrapper } from './style';\r\nimport { Main, TableWrapper, BasicFormWrapper } from '../styled';\r\nimport { Modal } from '../../components/modals/antd-modals';\r\nimport { Button } from '../../components/buttons/buttons';\r\nimport { Cards } from '../../components/cards/frame/cards-frame';\r\nimport { PageHeader } from '../../components/page-headers/page-headers';\r\n\r\nimport { ShareButtonPageHeader } from '../../components/buttons/share-button/share-button';\r\nimport { ExportButtonPageHeader } from '../../components/buttons/export-button/export-button';\r\nimport { CalendarButtonPageHeader } from '../../components/buttons/calendar-button/calendar-button';\r\nimport { ToDoAddData, ToDoDeleteData, onStarUpdate } from '../../redux/todo/actionCreator';\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <FeatherIcon size={16} style={{ cursor: 'pointer', color: '#999' }} icon=\"move\" />\r\n));\r\n\r\nconst ToDo = () => {\r\n  const todoData = useSelector(state => state.Todo.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    inputData: '',\r\n    selectedRowKeys: [],\r\n  });\r\n  const { selectedRowKeys, inputData } = state;\r\n\r\n  const columns = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'item',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      width: 120,\r\n    },\r\n  ];\r\n\r\n  const onHandleDelete = key => {\r\n    const data = todoData.filter(item => item.key !== key);\r\n    dispatch(ToDoDeleteData(data));\r\n  };\r\n\r\n  const dataSource = [];\r\n\r\n  if (todoData !== null) {\r\n    todoData.map((item, index) => {\r\n      return dataSource.push({\r\n        key: index + 1,\r\n        index,\r\n        item: (\r\n          <Span className={selectedRowKeys.includes(index) ? 'todo-title active' : 'todo-title inactive'}>\r\n            {item.item}\r\n          </Span>\r\n        ),\r\n        action: (\r\n          <div className=\"todos-action\">\r\n            <DragHandle />\r\n            <Link\r\n              className={item.favorite ? 'star active' : 'star'}\r\n              onClick={() => dispatch(onStarUpdate(todoData, item.key))}\r\n              to=\"#\"\r\n            >\r\n              <FeatherIcon icon=\"star\" style={{ color: item.favorite ? 'gold' : '#888' }} size={16} />\r\n            </Link>\r\n            <Link onClick={() => onHandleDelete(item.key)} to=\"#\">\r\n              <FeatherIcon icon=\"trash-2\" size={16} />\r\n            </Link>\r\n          </div>\r\n        ),\r\n      });\r\n    });\r\n  }\r\n  const [form] = Form.useForm();\r\n\r\n  const onSelectChange = selectedRowKey => {\r\n    setState({ ...state, selectedRowKeys: selectedRowKey });\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: onSelectChange,\r\n    getCheckboxProps: record => ({\r\n      disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const SortableItem = sortableElement(props => <tr {...props} />);\r\n  const SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    if (oldIndex !== newIndex) {\r\n      const newData = arrayMove([].concat(todoData), oldIndex, newIndex).filter(el => !!el);\r\n      return dispatch(ToDoAddData(newData));\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n    // function findIndex base on Table rowKey props and should always be a right array index\r\n    const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n    return <SortableItem index={index} {...restProps} />;\r\n  };\r\n\r\n  DraggableBodyRow.propTypes = {\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n  };\r\n\r\n  const DraggableContainer = props => (\r\n    <SortableContainer useDragHandle helperClass=\"row-dragging\" onSortEnd={onSortEnd} {...props} />\r\n  );\r\n\r\n  const onInputChange = e => {\r\n    setState({\r\n      ...state,\r\n      inputData: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n    const arrayData = [];\r\n    todoData.map(data => {\r\n      return arrayData.push(data.key);\r\n    });\r\n    const max = Math.max(...arrayData);\r\n    if (inputData !== '') {\r\n      dispatch(\r\n        ToDoAddData([\r\n          ...todoData,\r\n          {\r\n            key: max + 1,\r\n            item: inputData,\r\n            time: new Date().getTime(),\r\n            favorite: false,\r\n          },\r\n        ]),\r\n      );\r\n      setState({\r\n        ...state,\r\n        inputData: '',\r\n        visible: false,\r\n      });\r\n    } else {\r\n      alert('Please Give a Task Title...');\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setState({\r\n      ...state,\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setState({\r\n      ...state,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        ghost\r\n        title=\"To Do\"\r\n        buttons={[\r\n          <div key=\"1\" className=\"page-header-actions\">\r\n            <CalendarButtonPageHeader />\r\n            <ExportButtonPageHeader />\r\n            <ShareButtonPageHeader />\r\n            <Button size=\"small\" type=\"primary\">\r\n              <FeatherIcon icon=\"plus\" size={14} />\r\n              Add New\r\n            </Button>\r\n          </div>,\r\n        ]}\r\n      />\r\n\r\n      <Main>\r\n        <Row gutter={30}>\r\n          <Col md={24}>\r\n            <TodoStyleWrapper>\r\n              <Cards title=\"Task Lists\">\r\n                <TableWrapper className=\"table-responsive\">\r\n                  <Table\r\n                    rowSelection={{\r\n                      type: 'checkbox',\r\n                      ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={false}\r\n                    rowKey=\"index\"\r\n                    components={{\r\n                      body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                      },\r\n                    }}\r\n                  />\r\n                </TableWrapper>\r\n                <div className=\"new-todo-wrap\">\r\n                  <Button onClick={showModal} className=\"btn-toDoAdd\" transparented type=\"primary\" size=\"large\">\r\n                    + Add New Task\r\n                  </Button>\r\n                </div>\r\n              </Cards>\r\n            </TodoStyleWrapper>\r\n          </Col>\r\n          {/* <Col md={12}>\r\n            <Cards title=\"Task Lists\" />\r\n          </Col> */}\r\n        </Row>\r\n        <Modal\r\n          type={state.modalType}\r\n          title=\"Add New Todo\"\r\n          visible={state.visible}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <div className=\"todo-modal\">\r\n            <BasicFormWrapper>\r\n              <Form className=\"adTodo-form\" name=\"todoAdd\" form={form} onFinish={onSubmitHandler}>\r\n                <Input value={inputData} onChange={onInputChange} placeholder=\"Input Item Name.......\" />\r\n                <br />\r\n                <br />\r\n\r\n                <Button onClick={showModal} htmlType=\"submit\" className=\"btn-adTodo\" type=\"primary\" size=\"large\">\r\n                  Add New\r\n                </Button>\r\n              </Form>\r\n            </BasicFormWrapper>\r\n          </div>\r\n        </Modal>\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nToDo.propTypes = {\r\n  // match: PropTypes.shape(PropTypes.object),\r\n};\r\nexport default ToDo;\r\n"]},"metadata":{},"sourceType":"module"}