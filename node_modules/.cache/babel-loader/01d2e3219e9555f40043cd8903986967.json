{"ast":null,"code":"import\"antd/es/row/style\";import _Row from\"antd/es/row\";import\"antd/es/col/style\";import _Col from\"antd/es/col\";import\"antd/es/calendar/style\";import _Calendar from\"antd/es/calendar\";import\"antd/es/badge/style\";import _Badge from\"antd/es/badge\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import FeatherIcon from'feather-icons-react';import moment from'moment';import{PageHeader}from'../../components/page-headers/page-headers';import{Main,CalendarWrapper}from'../styled';import{Cards}from'../../components/cards/frame/cards-frame';import{Button}from'../../components/buttons/buttons';import{ShareButtonPageHeader}from'../../components/buttons/share-button/share-button';import{ExportButtonPageHeader}from'../../components/buttons/export-button/export-button';import{CalendarButtonPageHeader}from'../../components/buttons/calendar-button/calendar-button';var Calendars=function Calendars(){var _useState=useState({value:moment('2017-01-25'),selectedValue:moment('2017-01-25')}),_useState2=_slicedToArray(_useState,1),setState=_useState2[0];var onPanelChange=function onPanelChange(value){setState({value:value});};var getListData=function getListData(value){var listData;switch(value.date()){case 8:listData=[{type:'warning',content:'This is warning event.'},{type:'success',content:'This is usual event.'}];break;case 10:listData=[{type:'warning',content:'This is warning event.'},{type:'success',content:'This is usual event.'},{type:'error',content:'This is error event.'}];break;case 15:listData=[{type:'warning',content:'This is warning event'},{type:'success',content:'This is very long usual event。。....'},{type:'error',content:'This is error event 1.'},{type:'error',content:'This is error event 2.'},{type:'error',content:'This is error event 3.'},{type:'error',content:'This is error event 4.'}];break;default:}return listData||[];};var dateCellRender=function dateCellRender(value){var listData=getListData(value);return/*#__PURE__*/React.createElement(\"ul\",{className:\"events\"},listData.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{key:item.content},/*#__PURE__*/React.createElement(_Badge,{status:item.type,text:item.content}));}));};var getMonthData=function getMonthData(value){if(value.month()===8){return 1394;}return true;};var monthCellRender=function monthCellRender(value){var num=getMonthData(value);return num?/*#__PURE__*/React.createElement(\"div\",{className:\"notes-month\"},/*#__PURE__*/React.createElement(\"section\",null,num),/*#__PURE__*/React.createElement(\"span\",null,\"Backlog number\")):null;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PageHeader,{title:\"Calendar\",buttons:[/*#__PURE__*/React.createElement(\"div\",{key:\"1\",className:\"page-header-actions\"},/*#__PURE__*/React.createElement(CalendarButtonPageHeader,null),/*#__PURE__*/React.createElement(ExportButtonPageHeader,null),/*#__PURE__*/React.createElement(ShareButtonPageHeader,null),/*#__PURE__*/React.createElement(Button,{size:\"small\",type:\"primary\"},/*#__PURE__*/React.createElement(FeatherIcon,{icon:\"plus\",size:14}),\"Add New\"))]}),/*#__PURE__*/React.createElement(Main,null,/*#__PURE__*/React.createElement(_Row,{gutter:25},/*#__PURE__*/React.createElement(_Col,{md:24},/*#__PURE__*/React.createElement(Cards,{title:\"Basic\"},/*#__PURE__*/React.createElement(CalendarWrapper,null,/*#__PURE__*/React.createElement(_Calendar,{onPanelChange:onPanelChange})))),/*#__PURE__*/React.createElement(_Col,{md:24},/*#__PURE__*/React.createElement(Cards,{title:\"Notice Calendar\"},/*#__PURE__*/React.createElement(CalendarWrapper,null,/*#__PURE__*/React.createElement(_Calendar,{dateCellRender:dateCellRender,monthCellRender:monthCellRender})))))));};export default Calendars;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/ui-elements/Calender.js"],"names":["React","useState","FeatherIcon","moment","PageHeader","Main","CalendarWrapper","Cards","Button","ShareButtonPageHeader","ExportButtonPageHeader","CalendarButtonPageHeader","Calendars","value","selectedValue","setState","onPanelChange","getListData","listData","date","type","content","dateCellRender","map","item","getMonthData","month","monthCellRender","num"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Calendar, Badge } from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport moment from 'moment';\r\nimport { PageHeader } from '../../components/page-headers/page-headers';\r\nimport { Main, CalendarWrapper } from '../styled';\r\nimport { Cards } from '../../components/cards/frame/cards-frame';\r\nimport { Button } from '../../components/buttons/buttons';\r\nimport { ShareButtonPageHeader } from '../../components/buttons/share-button/share-button';\r\nimport { ExportButtonPageHeader } from '../../components/buttons/export-button/export-button';\r\nimport { CalendarButtonPageHeader } from '../../components/buttons/calendar-button/calendar-button';\r\n\r\nconst Calendars = () => {\r\n  const [setState] = useState({\r\n    value: moment('2017-01-25'),\r\n    selectedValue: moment('2017-01-25'),\r\n  });\r\n\r\n  const onPanelChange = value => {\r\n    setState({ value });\r\n  };\r\n\r\n  const getListData = value => {\r\n    let listData;\r\n    switch (value.date()) {\r\n      case 8:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event.' },\r\n          { type: 'success', content: 'This is usual event.' },\r\n        ];\r\n        break;\r\n      case 10:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event.' },\r\n          { type: 'success', content: 'This is usual event.' },\r\n          { type: 'error', content: 'This is error event.' },\r\n        ];\r\n        break;\r\n      case 15:\r\n        listData = [\r\n          { type: 'warning', content: 'This is warning event' },\r\n          { type: 'success', content: 'This is very long usual event。。....' },\r\n          { type: 'error', content: 'This is error event 1.' },\r\n          { type: 'error', content: 'This is error event 2.' },\r\n          { type: 'error', content: 'This is error event 3.' },\r\n          { type: 'error', content: 'This is error event 4.' },\r\n        ];\r\n        break;\r\n      default:\r\n    }\r\n    return listData || [];\r\n  };\r\n\r\n  const dateCellRender = value => {\r\n    const listData = getListData(value);\r\n    return (\r\n      <ul className=\"events\">\r\n        {listData.map(item => (\r\n          <li key={item.content}>\r\n            <Badge status={item.type} text={item.content} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const getMonthData = value => {\r\n    if (value.month() === 8) {\r\n      return 1394;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const monthCellRender = value => {\r\n    const num = getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Backlog number</span>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title=\"Calendar\"\r\n        buttons={[\r\n          <div key=\"1\" className=\"page-header-actions\">\r\n            <CalendarButtonPageHeader />\r\n            <ExportButtonPageHeader />\r\n            <ShareButtonPageHeader />\r\n            <Button size=\"small\" type=\"primary\">\r\n              <FeatherIcon icon=\"plus\" size={14} />\r\n              Add New\r\n            </Button>\r\n          </div>,\r\n        ]}\r\n      />\r\n      <Main>\r\n        <Row gutter={25}>\r\n          <Col md={24}>\r\n            <Cards title=\"Basic\">\r\n              <CalendarWrapper>\r\n                <Calendar onPanelChange={onPanelChange} />\r\n              </CalendarWrapper>\r\n            </Cards>\r\n          </Col>\r\n          <Col md={24}>\r\n            <Cards title=\"Notice Calendar\">\r\n              <CalendarWrapper>\r\n                <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n              </CalendarWrapper>\r\n            </Cards>\r\n          </Col>\r\n        </Row>\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendars;\r\n"]},"metadata":{},"sourceType":"module"}