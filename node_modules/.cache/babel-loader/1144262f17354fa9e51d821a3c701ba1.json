{"ast":null,"code":"import \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nvar _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/chat/overview/GroupChat.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\nimport FeatherIcon from 'feather-icons-react';\nimport PropTypes from 'prop-types';\nimport { BlockSpan, ChatWrapper } from '../style';\nimport { textRefactor } from '../../../components/utilities/utilities';\nimport { filterSinglepageGroup } from '../../../redux/chat/actionCreator';\nimport { Button } from '../../../components/buttons/buttons';\n\nconst GroupChat = ({\n  match\n}) => {\n  const chatData = useSelector(state => state.groupChat.data);\n  const dispatch = useDispatch();\n\n  const dataFiltering = id => {\n    dispatch(filterSinglepageGroup(id));\n  };\n\n  return /*#__PURE__*/React.createElement(ChatWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-add\",\n    size: \"default\",\n    type: \"default\",\n    shape: \"circle\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"edit\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), \"Create New Group\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, chatData && chatData.sort((a, b) => {\n    return b.time - a.time;\n  }).map((user, key) => {\n    const {\n      groupName,\n      content,\n      id,\n      img\n    } = user;\n    const {\n      time\n    } = content[content.length - 1];\n    const same = moment(time).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: \"chat-link-signle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: () => dataFiltering(id),\n      to: `${match.path}/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-figure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../../../static/img/chat-author/${img}`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BlockSpan, {\n      className: \"author-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, groupName), /*#__PURE__*/React.createElement(BlockSpan, {\n      className: \"author-chatText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }\n    }, textRefactor(content[content.length - 1].content, 5))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"author-chatMeta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BlockSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, same ? moment(id).format('hh:mm A') : moment(id).format('dddd')), key <= 1 && /*#__PURE__*/React.createElement(_Badge, {\n      className: \"badge-success\",\n      count: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 36\n      }\n    }))));\n  })));\n};\n\n__signature__(GroupChat, \"useSelector{chatData}\\nuseDispatch{dispatch}\", () => [useSelector, useDispatch]);\n\nGroupChat.propTypes = {\n  match: PropTypes.object\n};\nconst _default = GroupChat;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(GroupChat, \"GroupChat\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/chat/overview/GroupChat.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/chat/overview/GroupChat.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/chat/overview/GroupChat.js"],"names":["React","useSelector","useDispatch","NavLink","moment","FeatherIcon","PropTypes","BlockSpan","ChatWrapper","textRefactor","filterSinglepageGroup","Button","GroupChat","match","chatData","state","groupChat","data","dispatch","dataFiltering","id","sort","a","b","time","map","user","key","groupName","content","img","length","same","format","path","require","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'antd';\r\nimport { BlockSpan, ChatWrapper } from '../style';\r\nimport { textRefactor } from '../../../components/utilities/utilities';\r\nimport { filterSinglepageGroup } from '../../../redux/chat/actionCreator';\r\nimport { Button } from '../../../components/buttons/buttons';\r\n\r\nconst GroupChat = ({ match }) => {\r\n  const chatData = useSelector(state => state.groupChat.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const dataFiltering = id => {\r\n    dispatch(filterSinglepageGroup(id));\r\n  };\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <div className=\"create-action\">\r\n        <Button className=\"btn-add\" size=\"default\" type=\"default\" shape=\"circle\" block>\r\n          <FeatherIcon icon=\"edit\" size={14} />\r\n          Create New Group\r\n        </Button>\r\n      </div>\r\n\r\n      <ul>\r\n        {chatData &&\r\n          chatData\r\n            .sort((a, b) => {\r\n              return b.time - a.time;\r\n            })\r\n            .map((user, key) => {\r\n              const { groupName, content, id, img } = user;\r\n              const { time } = content[content.length - 1];\r\n              const same = moment(time).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\r\n              return (\r\n                <li key={id} className=\"chat-link-signle\">\r\n                  <NavLink onClick={() => dataFiltering(id)} to={`${match.path}/${id}`}>\r\n                    <div className=\"author-figure\">\r\n                      <img src={require(`../../../static/img/chat-author/${img}`)} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"author-info\">\r\n                      <BlockSpan className=\"author-name\">{groupName}</BlockSpan>\r\n                      <BlockSpan className=\"author-chatText\">\r\n                        {textRefactor(content[content.length - 1].content, 5)}\r\n                      </BlockSpan>\r\n                    </div>\r\n                    <div className=\"author-chatMeta\">\r\n                      <BlockSpan>{same ? moment(id).format('hh:mm A') : moment(id).format('dddd')}</BlockSpan>\r\n                      {key <= 1 && <Badge className=\"badge-success\" count={3} />}\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n      </ul>\r\n    </ChatWrapper>\r\n  );\r\n};\r\nGroupChat.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\nexport default GroupChat;\r\n"]},"metadata":{},"sourceType":"module"}