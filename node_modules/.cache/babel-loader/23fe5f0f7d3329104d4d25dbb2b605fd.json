{"ast":null,"code":"import\"antd/es/row/style\";import _Row from\"antd/es/row\";import\"antd/es/input-number/style\";import _InputNumber from\"antd/es/input-number\";import\"antd/es/col/style\";import _Col from\"antd/es/col\";import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/forbid-prop-types */import React,{useState}from'react';import{FrownOutlined}from'@ant-design/icons';import{IconWrapper,SliderStyle}from'./style';var Slider=function Slider(props){var defaultValue=props.defaultValue,range=props.range,min=props.min,max=props.max,step=props.step,input=props.input,icon=props.icon,marks=props.marks,vertical=props.vertical,defaultValues=props.defaultValues,onAfterChange=props.onAfterChange,onChange=props.onChange;var _useState=useState({inputValue:1,mini:min,maxi:max}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var onChanges=function onChanges(value){// eslint-disable-next-line no-restricted-globals\nif(isNaN(value)){return;}setState(_objectSpread(_objectSpread({},state),{},{inputValue:value}));if(onChange)onChange(value);};var handleChange=function handleChange(value){setState(_objectSpread(_objectSpread({},state),{},{value:value}));if(onChange)onChange(value);};var inputValue=state.inputValue,value=state.value,mini=state.mini,maxi=state.maxi;var mid=((maxi-mini)/2).toFixed(5);var preColor=value>=mid?'':'rgba(0, 0, 0, .45)';var nextColor=value>=mid?'rgba(0, 0, 0, .45)':'';var onAfterChanges=function onAfterChanges(values){if(onAfterChange)onAfterChange(values);};return input?/*#__PURE__*/React.createElement(_Row,null,/*#__PURE__*/React.createElement(_Col,{xl:20,xs:24},/*#__PURE__*/React.createElement(SliderStyle,{min:min,max:max,onChange:onChanges,value:typeof inputValue==='number'?inputValue:0,step:step})),/*#__PURE__*/React.createElement(_Col,{xl:4,xs:24},/*#__PURE__*/React.createElement(_InputNumber,{min:min,max:max,value:inputValue,onChange:onChanges,step:step}))):icon?/*#__PURE__*/React.createElement(IconWrapper,null,/*#__PURE__*/React.createElement(FrownOutlined,{style:{color:preColor}}),/*#__PURE__*/React.createElement(SliderStyle,{min:mini,max:maxi,onChange:handleChange,value:value}),/*#__PURE__*/React.createElement(FrownOutlined,{style:{color:nextColor}})):/*#__PURE__*/React.createElement(SliderStyle,{marks:marks,defaultValue:defaultValue||defaultValues,range:range,step:step,vertical:vertical,onAfterChange:onAfterChanges,onChange:onChange,max:max,min:min});};export{Slider};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/slider/slider.js"],"names":["React","useState","FrownOutlined","IconWrapper","SliderStyle","Slider","props","defaultValue","range","min","max","step","input","icon","marks","vertical","defaultValues","onAfterChange","onChange","inputValue","mini","maxi","state","setState","onChanges","value","isNaN","handleChange","mid","toFixed","preColor","nextColor","onAfterChanges","values","color"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\nimport React, { useState } from 'react';\r\nimport { InputNumber, Row, Col } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { FrownOutlined } from '@ant-design/icons';\r\nimport { IconWrapper, SliderStyle } from './style';\r\n\r\nconst Slider = props => {\r\n  const {\r\n    defaultValue,\r\n    range,\r\n    min,\r\n    max,\r\n    step,\r\n    input,\r\n    icon,\r\n    marks,\r\n    vertical,\r\n    defaultValues,\r\n    onAfterChange,\r\n    onChange,\r\n  } = props;\r\n\r\n  const [state, setState] = useState({\r\n    inputValue: 1,\r\n    mini: min,\r\n    maxi: max,\r\n  });\r\n\r\n  const onChanges = value => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      inputValue: value,\r\n    });\r\n    if (onChange) onChange(value);\r\n  };\r\n\r\n  const handleChange = value => {\r\n    setState({ ...state, value });\r\n    if (onChange) onChange(value);\r\n  };\r\n\r\n  const { inputValue, value, mini, maxi } = state;\r\n  const mid = ((maxi - mini) / 2).toFixed(5);\r\n  const preColor = value >= mid ? '' : 'rgba(0, 0, 0, .45)';\r\n  const nextColor = value >= mid ? 'rgba(0, 0, 0, .45)' : '';\r\n\r\n  const onAfterChanges = values => {\r\n    if (onAfterChange) onAfterChange(values);\r\n  };\r\n\r\n  return input ? (\r\n    <Row>\r\n      <Col xl={20} xs={24}>\r\n        <SliderStyle\r\n          min={min}\r\n          max={max}\r\n          onChange={onChanges}\r\n          value={typeof inputValue === 'number' ? inputValue : 0}\r\n          step={step}\r\n        />\r\n      </Col>\r\n      <Col xl={4} xs={24}>\r\n        <InputNumber min={min} max={max} value={inputValue} onChange={onChanges} step={step} />\r\n      </Col>\r\n    </Row>\r\n  ) : icon ? (\r\n    <IconWrapper>\r\n      <FrownOutlined style={{ color: preColor }} />\r\n      <SliderStyle min={mini} max={maxi} onChange={handleChange} value={value} />\r\n      <FrownOutlined style={{ color: nextColor }} />\r\n    </IconWrapper>\r\n  ) : (\r\n        <SliderStyle\r\n          marks={marks}\r\n          defaultValue={defaultValue || defaultValues}\r\n          range={range}\r\n          step={step}\r\n          vertical={vertical}\r\n          onAfterChange={onAfterChanges}\r\n          onChange={onChange}\r\n          max={max}\r\n          min={min}\r\n        />\r\n      );\r\n};\r\n\r\nSlider.propTypes = {\r\n  defaultValue: PropTypes.number,\r\n  defaultValues: PropTypes.array,\r\n  range: PropTypes.bool,\r\n  step: PropTypes.number,\r\n  input: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  marks: PropTypes.object,\r\n  vertical: PropTypes.bool,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  onAfterChange: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport { Slider };\r\n"]},"metadata":{},"sourceType":"module"}