{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nvar _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/performance/SessionsByDevice.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SessionChartWrapper, SessionState } from '../../style';\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\nimport { ChartjsDonutChart } from '../../../../components/charts/chartjs';\nimport { deviceFilterData, deviceGetData } from '../../../../redux/chartContent/actionCreator';\n\nconst SessionsByDevice = () => {\n  const dispatch = useDispatch();\n  const {\n    deviceState,\n    dvIsLoading\n  } = useSelector(state => {\n    return {\n      deviceState: state.chartContent.deviceData,\n      dvIsLoading: state.chartContent.dvLoading\n    };\n  });\n  const [state, setState] = useState({\n    device: 'year'\n  });\n  useEffect(() => {\n    if (deviceGetData) {\n      dispatch(deviceGetData());\n    }\n  }, [dispatch]);\n\n  const handleActiveChangeDevice = value => {\n    setState({ ...state,\n      device: value\n    });\n    dispatch(deviceFilterData(value));\n  };\n\n  return /*#__PURE__*/React.createElement(SessionChartWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, deviceState !== null && /*#__PURE__*/React.createElement(Cards, {\n    isbutton: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'week' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('week'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, \"Week\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'month' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('month'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.device === 'year' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeDevice('year'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"Year\")))),\n    title: \"Sessions By Device\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, dvIsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sd-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-chart-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartjsDonutChart, {\n    labels: ['Desktop', 'Mobiles', 'Tablets'],\n    datasets: [{\n      data: deviceState,\n      backgroundColor: ['#20C997', '#5F63F2', '#FA8B0C'],\n      total: '9,283'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(SessionState, {\n    className: \"session-wrap d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label-dot dot-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), \"Desktop\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, deviceState[0]), /*#__PURE__*/React.createElement(\"sub\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \"45%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label-dot dot-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), \"Mobile\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, deviceState[1]), /*#__PURE__*/React.createElement(\"sub\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"30%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"session-single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label-dot dot-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), \"Tablets\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, deviceState[1]), /*#__PURE__*/React.createElement(\"sub\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, \"25%\"))))));\n};\n\n__signature__(SessionsByDevice, \"useDispatch{dispatch}\\nuseSelector{{ deviceState, dvIsLoading }}\\nuseState{[state, setState]({\\r\\n    device: 'year',\\r\\n  })}\\nuseEffect{}\", () => [useDispatch, useSelector]);\n\nconst _default = SessionsByDevice;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SessionsByDevice, \"SessionsByDevice\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/performance/SessionsByDevice.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/performance/SessionsByDevice.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/performance/SessionsByDevice.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","SessionChartWrapper","SessionState","Cards","ChartjsDonutChart","deviceFilterData","deviceGetData","SessionsByDevice","dispatch","deviceState","dvIsLoading","state","chartContent","deviceData","dvLoading","setState","device","handleActiveChangeDevice","value","data","backgroundColor","total"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Spin } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SessionChartWrapper, SessionState } from '../../style';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\nimport { ChartjsDonutChart } from '../../../../components/charts/chartjs';\r\n\r\nimport { deviceFilterData, deviceGetData } from '../../../../redux/chartContent/actionCreator';\r\n\r\nconst SessionsByDevice = () => {\r\n  const dispatch = useDispatch();\r\n  const { deviceState, dvIsLoading } = useSelector(state => {\r\n    return {\r\n      deviceState: state.chartContent.deviceData,\r\n      dvIsLoading: state.chartContent.dvLoading,\r\n    };\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    device: 'year',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (deviceGetData) {\r\n      dispatch(deviceGetData());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleActiveChangeDevice = value => {\r\n    setState({\r\n      ...state,\r\n      device: value,\r\n    });\r\n    dispatch(deviceFilterData(value));\r\n  };\r\n\r\n  return (\r\n    <SessionChartWrapper>\r\n      {deviceState !== null && (\r\n        <Cards\r\n          isbutton={\r\n            <div className=\"card-nav\">\r\n              <ul>\r\n                <li className={state.device === 'week' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('week')} to=\"#\">\r\n                    Week\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'month' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('month')} to=\"#\">\r\n                    Month\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'year' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('year')} to=\"#\">\r\n                    Year\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          }\r\n          title=\"Sessions By Device\"\r\n          size=\"large\"\r\n        >\r\n          {dvIsLoading ? (\r\n            <div className=\"sd-spin\">\r\n              <Spin />\r\n            </div>\r\n          ) : (\r\n            <div className=\"session-chart-inner\">\r\n              <ChartjsDonutChart\r\n                labels={['Desktop', 'Mobiles', 'Tablets']}\r\n                datasets={[\r\n                  {\r\n                    data: deviceState,\r\n                    backgroundColor: ['#20C997', '#5F63F2', '#FA8B0C'],\r\n                    total: '9,283',\r\n                  },\r\n                ]}\r\n              />\r\n\r\n              <SessionState className=\"session-wrap d-flex justify-content-center\">\r\n                <div className=\"session-single\">\r\n                  <div className=\"chart-label\">\r\n                    <span className=\"label-dot dot-success\" />\r\n                    Desktop\r\n                  </div>\r\n                  <span>{deviceState[0]}</span>\r\n                  <sub>45%</sub>\r\n                </div>\r\n                <div className=\"session-single\">\r\n                  <div className=\"chart-label\">\r\n                    <span className=\"label-dot dot-info\" />\r\n                    Mobile\r\n                  </div>\r\n                  <span>{deviceState[1]}</span>\r\n                  <sub>30%</sub>\r\n                </div>\r\n                <div className=\"session-single\">\r\n                  <div className=\"chart-label\">\r\n                    <span className=\"label-dot dot-warning\" />\r\n                    Tablets\r\n                  </div>\r\n                  <span>{deviceState[1]}</span>\r\n                  <sub>25%</sub>\r\n                </div>\r\n              </SessionState>\r\n            </div>\r\n          )}\r\n        </Cards>\r\n      )}\r\n    </SessionChartWrapper>\r\n  );\r\n};\r\n\r\nexport default SessionsByDevice;\r\n"]},"metadata":{},"sourceType":"module"}