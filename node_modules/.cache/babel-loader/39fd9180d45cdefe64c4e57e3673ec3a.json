{"ast":null,"code":"import\"antd/es/spin/style\";import _Spin from\"antd/es/spin\";import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{Link,NavLink}from'react-router-dom';import FeatherIcon from'feather-icons-react';import{RevenueWrapper}from'../../style';import{ChartjsAreaChart}from'../../../../components/charts/chartjs';import{customTooltips,chartLinearGradient}from'../../../../components/utilities/utilities';import{performanceFilterData,performanceGetData}from'../../../../redux/chartContent/actionCreator';import{Cards}from'../../../../components/cards/frame/cards-frame';var moreContent=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"printer\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Printer\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"book-open\"}),/*#__PURE__*/React.createElement(\"span\",null,\"PDF\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"file-text\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Google Sheets\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"x\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Excel (XLSX)\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"file\"}),/*#__PURE__*/React.createElement(\"span\",null,\"CSV\")));var TotalRevenue=function TotalRevenue(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return{performanceState:state.chartContent.performanceData,preIsLoading:state.chartContent.perLoading};}),performanceState=_useSelector.performanceState,preIsLoading=_useSelector.preIsLoading;var _useState=useState({revenue:'year'}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){if(performanceGetData){dispatch(performanceGetData());}},[dispatch]);var handleActiveChangeRevenue=function handleActiveChangeRevenue(value){setState(_objectSpread(_objectSpread({},state),{},{revenue:value}));return dispatch(performanceFilterData(value));};var performanceDatasets=performanceState!==null&&[{data:performanceState.users[1],borderColor:'#5F63F2',borderWidth:4,fill:true,backgroundColor:function backgroundColor(){return chartLinearGradient(document.getElementById('performance'),300,{start:'#5F63F230',end:'#ffffff05'});},label:'Current period',pointStyle:'circle',pointRadius:'0',hoverRadius:'9',pointBorderColor:'#fff',pointBackgroundColor:'#5F63F2',hoverBorderWidth:5,amount:'$7,596',amountClass:'current-amount'},{data:performanceState.users[2],borderColor:'#C6D0DC',borderWidth:2,fill:false,backgroundColor:'#00173750',label:'Previous period',borderDash:[3,3],pointRadius:'0',hoverRadius:'0',amount:'$3,258',amountClass:'prev-amount'}];return/*#__PURE__*/React.createElement(RevenueWrapper,null,performanceState!==null&&/*#__PURE__*/React.createElement(Cards,{isbutton:/*#__PURE__*/React.createElement(\"div\",{className:\"card-nav\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:state.revenue==='week'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeRevenue('week');},to:\"#\"},\"Week\")),/*#__PURE__*/React.createElement(\"li\",{className:state.revenue==='month'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeRevenue('month');},to:\"#\"},\"Month\")),/*#__PURE__*/React.createElement(\"li\",{className:state.revenue==='year'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeRevenue('year');},to:\"#\"},\"Year\")))),more:moreContent,title:\"Total Revenue\",size:\"large\"},preIsLoading?/*#__PURE__*/React.createElement(\"div\",{className:\"sd-spin\"},/*#__PURE__*/React.createElement(_Spin,null)):/*#__PURE__*/React.createElement(\"div\",{className:\"performance-lineChart\"},/*#__PURE__*/React.createElement(\"ul\",null,performanceDatasets&&performanceDatasets.map(function(item,key){return/*#__PURE__*/React.createElement(\"li\",{key:key+1,className:\"custom-label\"},/*#__PURE__*/React.createElement(\"strong\",{className:item.amountClass},item.amount),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:item.borderColor}}),item.label));})),/*#__PURE__*/React.createElement(ChartjsAreaChart,{id:\"performance\",labels:performanceState.labels,datasets:performanceDatasets,options:{maintainAspectRatio:true,elements:{z:9999},legend:{display:false,position:'bottom',align:'start',labels:{boxWidth:6,display:false,usePointStyle:true}},hover:{mode:'index',intersect:false},tooltips:{mode:'label',intersect:false,backgroundColor:'#ffffff',position:'average',enabled:false,custom:customTooltips,callbacks:{title:function title(){return\"Total Revenue\";},label:function label(t,d){var yLabel=t.yLabel,datasetIndex=t.datasetIndex;return\"<span class=\\\"chart-data\\\">\".concat(yLabel,\"k</span> <span class=\\\"data-label\\\">\").concat(d.datasets[datasetIndex].label,\"</span>\");}}},scales:{yAxes:[{gridLines:{color:'#e5e9f2',borderDash:[3,3],zeroLineColor:'#e5e9f2',zeroLineWidth:1,zeroLineBorderDash:[3,3]},ticks:{beginAtZero:true,fontSize:13,fontColor:'#182b49',suggestedMin:50,suggestedMax:80,stepSize:20,callback:function callback(label){return\"\".concat(label,\"k\");}}}],xAxes:[{gridLines:{display:true,zeroLineWidth:2,zeroLineColor:'transparent',color:'transparent',z:1,tickMarkLength:0},ticks:{padding:10}}]}},height:window.innerWidth<=575?200:120}))));};export default TotalRevenue;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/ecommerce/TotalRevenue.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Link","NavLink","FeatherIcon","RevenueWrapper","ChartjsAreaChart","customTooltips","chartLinearGradient","performanceFilterData","performanceGetData","Cards","moreContent","TotalRevenue","dispatch","state","performanceState","chartContent","performanceData","preIsLoading","perLoading","revenue","setState","handleActiveChangeRevenue","value","performanceDatasets","data","users","borderColor","borderWidth","fill","backgroundColor","document","getElementById","start","end","label","pointStyle","pointRadius","hoverRadius","pointBorderColor","pointBackgroundColor","hoverBorderWidth","amount","amountClass","borderDash","map","item","key","labels","maintainAspectRatio","elements","z","legend","display","position","align","boxWidth","usePointStyle","hover","mode","intersect","tooltips","enabled","custom","callbacks","title","t","d","yLabel","datasetIndex","datasets","scales","yAxes","gridLines","color","zeroLineColor","zeroLineWidth","zeroLineBorderDash","ticks","beginAtZero","fontSize","fontColor","suggestedMin","suggestedMax","stepSize","callback","xAxes","tickMarkLength","padding","window","innerWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Spin } from 'antd';\r\nimport { RevenueWrapper } from '../../style';\r\nimport { ChartjsAreaChart } from '../../../../components/charts/chartjs';\r\nimport { customTooltips, chartLinearGradient } from '../../../../components/utilities/utilities';\r\nimport { performanceFilterData, performanceGetData } from '../../../../redux/chartContent/actionCreator';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\n\r\nconst moreContent = (\r\n  <>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"printer\" />\r\n      <span>Printer</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"book-open\" />\r\n      <span>PDF</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"file-text\" />\r\n      <span>Google Sheets</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"x\" />\r\n      <span>Excel (XLSX)</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"file\" />\r\n      <span>CSV</span>\r\n    </NavLink>\r\n  </>\r\n);\r\nconst TotalRevenue = () => {\r\n  const dispatch = useDispatch();\r\n  const { performanceState, preIsLoading } = useSelector(state => {\r\n    return {\r\n      performanceState: state.chartContent.performanceData,\r\n      preIsLoading: state.chartContent.perLoading,\r\n    };\r\n  });\r\n  const [state, setState] = useState({\r\n    revenue: 'year',\r\n  });\r\n  useEffect(() => {\r\n    if (performanceGetData) {\r\n      dispatch(performanceGetData());\r\n    }\r\n  }, [dispatch]);\r\n  const handleActiveChangeRevenue = value => {\r\n    setState({\r\n      ...state,\r\n      revenue: value,\r\n    });\r\n    return dispatch(performanceFilterData(value));\r\n  };\r\n\r\n  const performanceDatasets = performanceState !== null && [\r\n    {\r\n      data: performanceState.users[1],\r\n      borderColor: '#5F63F2',\r\n      borderWidth: 4,\r\n      fill: true,\r\n      backgroundColor: () =>\r\n        chartLinearGradient(document.getElementById('performance'), 300, {\r\n          start: '#5F63F230',\r\n          end: '#ffffff05',\r\n        }),\r\n      label: 'Current period',\r\n      pointStyle: 'circle',\r\n      pointRadius: '0',\r\n      hoverRadius: '9',\r\n      pointBorderColor: '#fff',\r\n      pointBackgroundColor: '#5F63F2',\r\n      hoverBorderWidth: 5,\r\n      amount: '$7,596',\r\n      amountClass: 'current-amount',\r\n    },\r\n    {\r\n      data: performanceState.users[2],\r\n      borderColor: '#C6D0DC',\r\n      borderWidth: 2,\r\n      fill: false,\r\n      backgroundColor: '#00173750',\r\n      label: 'Previous period',\r\n      borderDash: [3, 3],\r\n      pointRadius: '0',\r\n      hoverRadius: '0',\r\n      amount: '$3,258',\r\n      amountClass: 'prev-amount',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <RevenueWrapper>\r\n      {performanceState !== null && (\r\n        <Cards\r\n          isbutton={\r\n            <div className=\"card-nav\">\r\n              <ul>\r\n                <li className={state.revenue === 'week' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeRevenue('week')} to=\"#\">\r\n                    Week\r\n                  </Link>\r\n                </li>\r\n                <li className={state.revenue === 'month' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeRevenue('month')} to=\"#\">\r\n                    Month\r\n                  </Link>\r\n                </li>\r\n                <li className={state.revenue === 'year' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeRevenue('year')} to=\"#\">\r\n                    Year\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          }\r\n          more={moreContent}\r\n          title=\"Total Revenue\"\r\n          size=\"large\"\r\n        >\r\n          {preIsLoading ? (\r\n            <div className=\"sd-spin\">\r\n              <Spin />\r\n            </div>\r\n          ) : (\r\n            <div className=\"performance-lineChart\">\r\n              <ul>\r\n                {performanceDatasets &&\r\n                  performanceDatasets.map((item, key) => {\r\n                    return (\r\n                      <li key={key + 1} className=\"custom-label\">\r\n                        <strong className={item.amountClass}>{item.amount}</strong>\r\n                        <div>\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: item.borderColor,\r\n                            }}\r\n                          />\r\n                          {item.label}\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n\r\n              <ChartjsAreaChart\r\n                id=\"performance\"\r\n                labels={performanceState.labels}\r\n                datasets={performanceDatasets}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  elements: {\r\n                    z: 9999,\r\n                  },\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'bottom',\r\n                    align: 'start',\r\n                    labels: {\r\n                      boxWidth: 6,\r\n                      display: false,\r\n                      usePointStyle: true,\r\n                    },\r\n                  },\r\n                  hover: {\r\n                    mode: 'index',\r\n                    intersect: false,\r\n                  },\r\n                  tooltips: {\r\n                    mode: 'label',\r\n                    intersect: false,\r\n                    backgroundColor: '#ffffff',\r\n                    position: 'average',\r\n                    enabled: false,\r\n                    custom: customTooltips,\r\n                    callbacks: {\r\n                      title() {\r\n                        return `Total Revenue`;\r\n                      },\r\n                      label(t, d) {\r\n                        const { yLabel, datasetIndex } = t;\r\n                        return `<span class=\"chart-data\">${yLabel}k</span> <span class=\"data-label\">${d.datasets[datasetIndex].label}</span>`;\r\n                      },\r\n                    },\r\n                  },\r\n                  scales: {\r\n                    yAxes: [\r\n                      {\r\n                        gridLines: {\r\n                          color: '#e5e9f2',\r\n                          borderDash: [3, 3],\r\n                          zeroLineColor: '#e5e9f2',\r\n                          zeroLineWidth: 1,\r\n                          zeroLineBorderDash: [3, 3],\r\n                        },\r\n                        ticks: {\r\n                          beginAtZero: true,\r\n                          fontSize: 13,\r\n                          fontColor: '#182b49',\r\n                          suggestedMin: 50,\r\n                          suggestedMax: 80,\r\n                          stepSize: 20,\r\n                          callback(label) {\r\n                            return `${label}k`;\r\n                          },\r\n                        },\r\n                      },\r\n                    ],\r\n                    xAxes: [\r\n                      {\r\n                        gridLines: {\r\n                          display: true,\r\n                          zeroLineWidth: 2,\r\n                          zeroLineColor: 'transparent',\r\n                          color: 'transparent',\r\n                          z: 1,\r\n                          tickMarkLength: 0,\r\n                        },\r\n                        ticks: {\r\n                          padding: 10,\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                }}\r\n                height={window.innerWidth <= 575 ? 200 : 120}\r\n              />\r\n            </div>\r\n          )}\r\n        </Cards>\r\n      )}\r\n    </RevenueWrapper>\r\n  );\r\n};\r\n\r\nexport default TotalRevenue;\r\n"]},"metadata":{},"sourceType":"module"}