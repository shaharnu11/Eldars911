{"ast":null,"code":"import\"antd/es/spin/style\";import _Spin from\"antd/es/spin\";import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{Link}from'react-router-dom';import{RevenueChartWrapper}from'../../style';import{ChartjsDonutChart2}from'../../../../components/charts/chartjs';import{deviceGetData,deviceFilterData}from'../../../../redux/chartContent/actionCreator';import{Cards}from'../../../../components/cards/frame/cards-frame';var RevenueByDevice=function RevenueByDevice(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return{deviceState:state.chartContent.deviceData,dvIsLoading:state.chartContent.dvLoading};}),deviceState=_useSelector.deviceState,dvIsLoading=_useSelector.dvIsLoading;var _useState=useState({device:'year'}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){if(deviceGetData){dispatch(deviceGetData());}},[dispatch]);var handleActiveChangeDevice=function handleActiveChangeDevice(value){setState(_objectSpread(_objectSpread({},state),{},{device:value}));dispatch(deviceFilterData(value));};return/*#__PURE__*/React.createElement(RevenueChartWrapper,null,deviceState!==null&&/*#__PURE__*/React.createElement(Cards,{isbutton:/*#__PURE__*/React.createElement(\"div\",{className:\"card-nav\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:state.device==='today'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeDevice('today');},to:\"#\"},\"Today\")),/*#__PURE__*/React.createElement(\"li\",{className:state.device==='week'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeDevice('week');},to:\"#\"},\"Week\")),/*#__PURE__*/React.createElement(\"li\",{className:state.device==='month'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeDevice('month');},to:\"#\"},\"Month\")),/*#__PURE__*/React.createElement(\"li\",{className:state.device==='year'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeDevice('year');},to:\"#\"},\"Year\")))),title:\"Revenue By Device\",size:\"large\"},dvIsLoading?/*#__PURE__*/React.createElement(\"div\",{className:\"sd-spin\"},/*#__PURE__*/React.createElement(_Spin,null)):/*#__PURE__*/React.createElement(\"div\",{className:\"revenue-doughnut\"},/*#__PURE__*/React.createElement(ChartjsDonutChart2,{labels:['Desktop','Mobile','Tablets'],datasets:[{data:deviceState,backgroundColor:['#20C997','#5F63F2','#FA8B0C']}]}))));};export default RevenueByDevice;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/ecommerce/RevenueByDevice.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Link","RevenueChartWrapper","ChartjsDonutChart2","deviceGetData","deviceFilterData","Cards","RevenueByDevice","dispatch","state","deviceState","chartContent","deviceData","dvIsLoading","dvLoading","device","setState","handleActiveChangeDevice","value","data","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport { RevenueChartWrapper } from '../../style';\r\nimport { ChartjsDonutChart2 } from '../../../../components/charts/chartjs';\r\nimport { deviceGetData, deviceFilterData } from '../../../../redux/chartContent/actionCreator';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\n\r\nconst RevenueByDevice = () => {\r\n  const dispatch = useDispatch();\r\n  const { deviceState, dvIsLoading } = useSelector(state => {\r\n    return {\r\n      deviceState: state.chartContent.deviceData,\r\n      dvIsLoading: state.chartContent.dvLoading,\r\n    };\r\n  });\r\n  const [state, setState] = useState({\r\n    device: 'year',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (deviceGetData) {\r\n      dispatch(deviceGetData());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleActiveChangeDevice = value => {\r\n    setState({\r\n      ...state,\r\n      device: value,\r\n    });\r\n    dispatch(deviceFilterData(value));\r\n  };\r\n\r\n  return (\r\n    <RevenueChartWrapper>\r\n      {deviceState !== null && (\r\n        <Cards\r\n          isbutton={\r\n            <div className=\"card-nav\">\r\n              <ul>\r\n                <li className={state.device === 'today' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('today')} to=\"#\">\r\n                    Today\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'week' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('week')} to=\"#\">\r\n                    Week\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'month' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('month')} to=\"#\">\r\n                    Month\r\n                  </Link>\r\n                </li>\r\n                <li className={state.device === 'year' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeDevice('year')} to=\"#\">\r\n                    Year\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          }\r\n          title=\"Revenue By Device\"\r\n          size=\"large\"\r\n        >\r\n          {dvIsLoading ? (\r\n            <div className=\"sd-spin\">\r\n              <Spin />\r\n            </div>\r\n          ) : (\r\n            <div className=\"revenue-doughnut\">\r\n              <ChartjsDonutChart2\r\n                labels={['Desktop', 'Mobile', 'Tablets']}\r\n                datasets={[\r\n                  {\r\n                    data: deviceState,\r\n                    backgroundColor: ['#20C997', '#5F63F2', '#FA8B0C'],\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          )}\r\n        </Cards>\r\n      )}\r\n    </RevenueChartWrapper>\r\n  );\r\n};\r\n\r\nexport default RevenueByDevice;\r\n"]},"metadata":{},"sourceType":"module"}