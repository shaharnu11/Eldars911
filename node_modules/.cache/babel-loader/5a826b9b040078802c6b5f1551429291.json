{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport axios from 'axios';\nimport { getItem } from '../../utility/localStorageControl';\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\nconst authHeader = () => ({\n  Authorization: `Bearer ${getItem('access_token')}`\n});\n\nconst client = axios.create({\n  baseURL: API_ENDPOINT,\n  headers: {\n    Authorization: `Bearer ${getItem('access_token')}`,\n    'Content-Type': 'application/json'\n  }\n});\n\nclass DataService {\n  static get(path = '') {\n    return client({\n      method: 'GET',\n      url: path,\n      headers: { ...authHeader()\n      }\n    });\n  }\n\n  static post(path = '', data = {}, optionalHeader = {}) {\n    return client({\n      method: 'POST',\n      url: path,\n      data,\n      headers: { ...authHeader(),\n        ...optionalHeader\n      }\n    });\n  }\n\n  static patch(path = '', data = {}) {\n    return client({\n      method: 'PATCH',\n      url: path,\n      data: JSON.stringify(data),\n      headers: { ...authHeader()\n      }\n    });\n  }\n\n  static put(path = '', data = {}) {\n    return client({\n      method: 'PUT',\n      url: path,\n      data: JSON.stringify(data),\n      headers: { ...authHeader()\n      }\n    });\n  }\n\n}\n/**\r\n * axios interceptors runs before and after a request, letting the developer modify req,req more\r\n * For more details on axios interceptor see https://github.com/axios/axios#interceptors\r\n */\n\n\nclient.interceptors.request.use(config => {\n  // do something before executing the request\n  // For example tag along the bearer access token to request header or set a cookie\n  const requestConfig = config;\n  const {\n    headers\n  } = config;\n  requestConfig.headers = { ...headers,\n    Authorization: `Bearer ${getItem('access_token')}`\n  };\n  return requestConfig;\n});\nclient.interceptors.response.use(response => response, error => {\n  /**\r\n   * Do something in case the response returns an error code [3**, 4**, 5**] etc\r\n   * For example, on token expiration retrieve a new access token, retry a failed request etc\r\n   */\n  const {\n    response\n  } = error;\n  const originalRequest = error.config;\n\n  if (response) {\n    if (response.status === 500) {// do something here\n    } else {\n      return originalRequest;\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport { DataService };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(API_ENDPOINT, \"API_ENDPOINT\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/config/dataService/dataService.js\");\n  reactHotLoader.register(authHeader, \"authHeader\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/config/dataService/dataService.js\");\n  reactHotLoader.register(client, \"client\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/config/dataService/dataService.js\");\n  reactHotLoader.register(DataService, \"DataService\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/config/dataService/dataService.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/config/dataService/dataService.js"],"names":["axios","getItem","API_ENDPOINT","process","env","REACT_APP_API_ENDPOINT","authHeader","Authorization","client","create","baseURL","headers","DataService","get","path","method","url","post","data","optionalHeader","patch","JSON","stringify","put","interceptors","request","use","config","requestConfig","response","error","originalRequest","status","Promise","reject"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAjC;;AAEA,MAAMC,UAAU,GAAG,OAAO;AACxBC,EAAAA,aAAa,EAAG,UAASN,OAAO,CAAC,cAAD,CAAiB;AADzB,CAAP,CAAnB;;AAIA,MAAMO,MAAM,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAER,YADiB;AAE1BS,EAAAA,OAAO,EAAE;AACPJ,IAAAA,aAAa,EAAG,UAASN,OAAO,CAAC,cAAD,CAAiB,EAD1C;AAEP,oBAAgB;AAFT;AAFiB,CAAb,CAAf;;AAQA,MAAMW,WAAN,CAAkB;AAChB,SAAOC,GAAP,CAAWC,IAAI,GAAG,EAAlB,EAAsB;AACpB,WAAON,MAAM,CAAC;AACZO,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAEF,IAFO;AAGZH,MAAAA,OAAO,EAAE,EAAE,GAAGL,UAAU;AAAf;AAHG,KAAD,CAAb;AAKD;;AAED,SAAOW,IAAP,CAAYH,IAAI,GAAG,EAAnB,EAAuBI,IAAI,GAAG,EAA9B,EAAkCC,cAAc,GAAG,EAAnD,EAAuD;AACrD,WAAOX,MAAM,CAAC;AACZO,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,GAAG,EAAEF,IAFO;AAGZI,MAAAA,IAHY;AAIZP,MAAAA,OAAO,EAAE,EAAE,GAAGL,UAAU,EAAf;AAAmB,WAAGa;AAAtB;AAJG,KAAD,CAAb;AAMD;;AAED,SAAOC,KAAP,CAAaN,IAAI,GAAG,EAApB,EAAwBI,IAAI,GAAG,EAA/B,EAAmC;AACjC,WAAOV,MAAM,CAAC;AACZO,MAAAA,MAAM,EAAE,OADI;AAEZC,MAAAA,GAAG,EAAEF,IAFO;AAGZI,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAHM;AAIZP,MAAAA,OAAO,EAAE,EAAE,GAAGL,UAAU;AAAf;AAJG,KAAD,CAAb;AAMD;;AAED,SAAOiB,GAAP,CAAWT,IAAI,GAAG,EAAlB,EAAsBI,IAAI,GAAG,EAA7B,EAAiC;AAC/B,WAAOV,MAAM,CAAC;AACZO,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAEF,IAFO;AAGZI,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAHM;AAIZP,MAAAA,OAAO,EAAE,EAAE,GAAGL,UAAU;AAAf;AAJG,KAAD,CAAb;AAMD;;AAlCe;AAqClB;AACA;AACA;AACA;;;AACAE,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,IAAI;AACxC;AACA;AACA,QAAMC,aAAa,GAAGD,MAAtB;AACA,QAAM;AAAEhB,IAAAA;AAAF,MAAcgB,MAApB;AACAC,EAAAA,aAAa,CAACjB,OAAd,GAAwB,EAAE,GAAGA,OAAL;AAAcJ,IAAAA,aAAa,EAAG,UAASN,OAAO,CAAC,cAAD,CAAiB;AAA/D,GAAxB;AAEA,SAAO2B,aAAP;AACD,CARD;AAUApB,MAAM,CAACgB,YAAP,CAAoBK,QAApB,CAA6BH,GAA7B,CACEG,QAAQ,IAAIA,QADd,EAEEC,KAAK,IAAI;AACP;AACJ;AACA;AACA;AACI,QAAM;AAAED,IAAAA;AAAF,MAAeC,KAArB;AACA,QAAMC,eAAe,GAAGD,KAAK,CAACH,MAA9B;;AACA,MAAIE,QAAJ,EAAc;AACZ,QAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B,CAC3B;AACD,KAFD,MAEO;AACL,aAAOD,eAAP;AACD;AACF;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAjBH;AAmBA,SAASlB,WAAT;;;;;;;;;;0BApFMV,Y;0BAEAI,U;0BAIAE,M;0BAQAI,W","sourcesContent":["import axios from 'axios';\r\nimport { getItem } from '../../utility/localStorageControl';\r\n\r\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\r\n\r\nconst authHeader = () => ({\r\n  Authorization: `Bearer ${getItem('access_token')}`,\r\n});\r\n\r\nconst client = axios.create({\r\n  baseURL: API_ENDPOINT,\r\n  headers: {\r\n    Authorization: `Bearer ${getItem('access_token')}`,\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nclass DataService {\r\n  static get(path = '') {\r\n    return client({\r\n      method: 'GET',\r\n      url: path,\r\n      headers: { ...authHeader() },\r\n    });\r\n  }\r\n\r\n  static post(path = '', data = {}, optionalHeader = {}) {\r\n    return client({\r\n      method: 'POST',\r\n      url: path,\r\n      data,\r\n      headers: { ...authHeader(), ...optionalHeader },\r\n    });\r\n  }\r\n\r\n  static patch(path = '', data = {}) {\r\n    return client({\r\n      method: 'PATCH',\r\n      url: path,\r\n      data: JSON.stringify(data),\r\n      headers: { ...authHeader() },\r\n    });\r\n  }\r\n\r\n  static put(path = '', data = {}) {\r\n    return client({\r\n      method: 'PUT',\r\n      url: path,\r\n      data: JSON.stringify(data),\r\n      headers: { ...authHeader() },\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * axios interceptors runs before and after a request, letting the developer modify req,req more\r\n * For more details on axios interceptor see https://github.com/axios/axios#interceptors\r\n */\r\nclient.interceptors.request.use(config => {\r\n  // do something before executing the request\r\n  // For example tag along the bearer access token to request header or set a cookie\r\n  const requestConfig = config;\r\n  const { headers } = config;\r\n  requestConfig.headers = { ...headers, Authorization: `Bearer ${getItem('access_token')}` };\r\n\r\n  return requestConfig;\r\n});\r\n\r\nclient.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    /**\r\n     * Do something in case the response returns an error code [3**, 4**, 5**] etc\r\n     * For example, on token expiration retrieve a new access token, retry a failed request etc\r\n     */\r\n    const { response } = error;\r\n    const originalRequest = error.config;\r\n    if (response) {\r\n      if (response.status === 500) {\r\n        // do something here\r\n      } else {\r\n        return originalRequest;\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  },\r\n);\r\nexport { DataService };\r\n"]},"metadata":{},"sourceType":"module"}