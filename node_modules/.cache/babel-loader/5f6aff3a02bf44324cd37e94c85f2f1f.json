{"ast":null,"code":"import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Map,Marker,GoogleApiWrapper,InfoWindow}from'google-maps-react';import{GmapWraper}from'./map-style';var apiKey=process.env.REACT_APP_GOOGLE_MAP_KEY;var GoogleMaps=GoogleApiWrapper({apiKey:apiKey})(function(property){var latitude=property.latitude,longitude=property.longitude,google=property.google,width=property.width,height=property.height,zoom=property.zoom,mapStyles=property.mapStyles,place=property.place,styles=property.styles,infoWindow=property.infoWindow;var _useState=useState({showingInfoWindow:false,activeMarker:{},selectedPlace:{}}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var onMarkerClick=function onMarkerClick(props,marker){return setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});};var onMapClicked=function onMapClicked(){if(state.showingInfoWindow){setState({showingInfoWindow:false,activeMarker:null});}};var onInfoWindowClose=function onInfoWindowClose(){setState({showingInfoWindow:false});};return/*#__PURE__*/React.createElement(GmapWraper,{width:width,height:height},/*#__PURE__*/React.createElement(Map,{onClick:onMapClicked,styles:mapStyles,google:google,style:styles,center:{lat:latitude,lng:longitude},zoom:zoom,height:\"400px\"},place!==undefined?place.map(function(item){return/*#__PURE__*/React.createElement(Marker,{key:item.id,onClick:onMarkerClick,position:{lat:item.latitude,lng:item.longitude},icon:require(\"../../static/img/map/mpc.png\")});}):/*#__PURE__*/React.createElement(Marker,{onClick:onMarkerClick,position:{lat:latitude,lng:longitude},icon:require(\"../../static/img/map/mpc.png\")}),/*#__PURE__*/React.createElement(InfoWindow,{onClose:onInfoWindowClose,marker:state.activeMarker,visible:state.showingInfoWindow},infoWindow)));});GoogleMaps.defaultProps={latitude:50.797897,longitude:-1.077641,width:'100%',height:'600px',zoom:13,infoWindow:/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Hello world\")),styles:{width:'100%',height:'100%',top:0,left:0}};export{GoogleMaps};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/google-maps.js"],"names":["React","useState","Map","Marker","GoogleApiWrapper","InfoWindow","GmapWraper","apiKey","process","env","REACT_APP_GOOGLE_MAP_KEY","GoogleMaps","property","latitude","longitude","google","width","height","zoom","mapStyles","place","styles","infoWindow","showingInfoWindow","activeMarker","selectedPlace","state","setState","onMarkerClick","props","marker","onMapClicked","onInfoWindowClose","lat","lng","undefined","map","item","id","require","defaultProps","top","left"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\r\nimport PropTypes from 'prop-types';\r\nimport { GmapWraper } from './map-style';\r\n\r\nconst apiKey = process.env.REACT_APP_GOOGLE_MAP_KEY;\r\nconst GoogleMaps = GoogleApiWrapper({\r\n  apiKey,\r\n})(property => {\r\n  const { latitude, longitude, google, width, height, zoom, mapStyles, place, styles, infoWindow } = property;\r\n  const [state, setState] = useState({\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n  });\r\n\r\n  const onMarkerClick = (props, marker) =>\r\n    setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n\r\n  const onMapClicked = () => {\r\n    if (state.showingInfoWindow) {\r\n      setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onInfoWindowClose = () => {\r\n    setState({\r\n      showingInfoWindow: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map\r\n        onClick={onMapClicked}\r\n        styles={mapStyles}\r\n        google={google}\r\n        style={styles}\r\n        center={{ lat: latitude, lng: longitude }}\r\n        zoom={zoom}\r\n        height=\"400px\"\r\n      >\r\n        {place !== undefined ? (\r\n          place.map(item => {\r\n            return (\r\n              <Marker\r\n                key={item.id}\r\n                onClick={onMarkerClick}\r\n                position={{ lat: item.latitude, lng: item.longitude }}\r\n                icon={require(`../../static/img/map/mpc.png`)}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Marker\r\n            onClick={onMarkerClick}\r\n            position={{ lat: latitude, lng: longitude }}\r\n            icon={require(`../../static/img/map/mpc.png`)}\r\n          />\r\n        )}\r\n        <InfoWindow onClose={onInfoWindowClose} marker={state.activeMarker} visible={state.showingInfoWindow}>\r\n          {infoWindow}\r\n        </InfoWindow>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n});\r\n\r\nGoogleMaps.defaultProps = {\r\n  latitude: 50.797897,\r\n  longitude: -1.077641,\r\n  width: '100%',\r\n  height: '600px',\r\n  zoom: 13,\r\n  infoWindow: (\r\n    <div>\r\n      <h1>Hello world</h1>\r\n    </div>\r\n  ),\r\n\r\n  styles: {\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n};\r\n\r\nGoogleMaps.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  google: PropTypes.string,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  place: PropTypes.arrayOf(PropTypes.object),\r\n  infoWindow: PropTypes.node,\r\n};\r\n\r\nexport { GoogleMaps };\r\n"]},"metadata":{},"sourceType":"module"}