{"ast":null,"code":"var _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport PropTypes from 'prop-types';\nimport 'leaflet/dist/leaflet.css'; // eslint-disable-next-line import/no-unresolved\n\nimport 'leaflet/dist/leaflet.css?url=false';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport L from 'leaflet';\nimport { GmapWraper } from './map-style'; // eslint-disable-next-line no-underscore-dangle\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst LeafletMapBasic = props => {\n  const {\n    latitude,\n    longitude,\n    width,\n    height,\n    zoom\n  } = props;\n  const position = [latitude, longitude];\n  return /*#__PURE__*/React.createElement(GmapWraper, {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"A pretty CSS3 popup.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), \"Easily customizable.\"))));\n};\n\nLeafletMapBasic.propTypes = {\n  latitude: PropTypes.number,\n  longitude: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  zoom: PropTypes.number\n};\n\nconst LeafletMapMultipleIcon = props => {\n  const {\n    latitude,\n    longitude,\n    width,\n    height,\n    zoom,\n    data\n  } = props;\n  const position = [latitude, longitude];\n  return /*#__PURE__*/React.createElement(GmapWraper, {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), data.map(item => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: item.id,\n      position: item.position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"A pretty CSS3 popup.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), \"Easily customizable.\"));\n  })));\n};\n\nLeafletMapMultipleIcon.propTypes = {\n  latitude: PropTypes.number,\n  longitude: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  zoom: PropTypes.number,\n  data: PropTypes.arrayOf(PropTypes.object)\n};\n\nconst LeafletMapCustomIcon = props => {\n  const {\n    latitude,\n    longitude,\n    width,\n    height,\n    zoom,\n    faIcon\n  } = props;\n  const fontAwesomeIcon = L.divIcon({\n    html: `<i style=\"color: #2880CA\" class=\"${faIcon}\"></i>`,\n    iconSize: [20, 20],\n    className: 'myDivIcon'\n  });\n  const position = [latitude, longitude];\n  return /*#__PURE__*/React.createElement(GmapWraper, {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: position,\n    icon: fontAwesomeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"A pretty CSS3 popup.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), \"Easily customizable.\"))));\n};\n\nLeafletMapCustomIcon.propTypes = {\n  latitude: PropTypes.number,\n  longitude: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  zoom: PropTypes.number,\n  faIcon: PropTypes.string\n};\n\nconst LeafletMarkerCluster = props => {\n  const {\n    latitude,\n    longitude,\n    width,\n    height,\n    zoom,\n    data\n  } = props;\n  const position = [latitude, longitude];\n  return /*#__PURE__*/React.createElement(GmapWraper, {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    zoom: zoom,\n    className: \"markercluster-map\",\n    maxZoom: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkerClusterGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, data.map(item => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: item.id,\n      position: item.position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"A pretty CSS3 popup.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }), \"Easily customizable.\"));\n  }))));\n};\n\nLeafletMarkerCluster.propTypes = {\n  latitude: PropTypes.number,\n  longitude: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  zoom: PropTypes.number,\n  data: PropTypes.arrayOf(PropTypes.object)\n};\nexport { LeafletMapBasic, LeafletMapMultipleIcon, LeafletMapCustomIcon, LeafletMarkerCluster };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(LeafletMapBasic, \"LeafletMapBasic\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js\");\n  reactHotLoader.register(LeafletMapMultipleIcon, \"LeafletMapMultipleIcon\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js\");\n  reactHotLoader.register(LeafletMapCustomIcon, \"LeafletMapCustomIcon\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js\");\n  reactHotLoader.register(LeafletMarkerCluster, \"LeafletMarkerCluster\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js"],"names":["React","Map","Marker","Popup","TileLayer","PropTypes","MarkerClusterGroup","L","GmapWraper","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LeafletMapBasic","props","latitude","longitude","width","height","zoom","position","propTypes","number","string","LeafletMapMultipleIcon","data","map","item","id","arrayOf","object","LeafletMapCustomIcon","faIcon","fontAwesomeIcon","divIcon","html","iconSize","className","LeafletMarkerCluster"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\r\nimport PropTypes from 'prop-types';\r\nimport 'leaflet/dist/leaflet.css';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport 'leaflet/dist/leaflet.css?url=false';\r\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\r\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\r\nimport 'react-leaflet-markercluster/dist/styles.min.css';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport L from 'leaflet';\r\nimport { GmapWraper } from './map-style';\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst LeafletMapBasic = props => {\r\n  const { latitude, longitude, width, height, zoom } = props;\r\n\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup.\r\n            <br />\r\n            Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\nLeafletMapBasic.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n};\r\n\r\nconst LeafletMapMultipleIcon = props => {\r\n  const { latitude, longitude, width, height, zoom, data } = props;\r\n\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {data.map(item => {\r\n          return (\r\n            <Marker key={item.id} position={item.position}>\r\n              <Popup>\r\n                A pretty CSS3 popup.\r\n                <br />\r\n                Easily customizable.\r\n              </Popup>\r\n            </Marker>\r\n          );\r\n        })}\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\n\r\nLeafletMapMultipleIcon.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst LeafletMapCustomIcon = props => {\r\n  const { latitude, longitude, width, height, zoom, faIcon } = props;\r\n  const fontAwesomeIcon = L.divIcon({\r\n    html: `<i style=\"color: #2880CA\" class=\"${faIcon}\"></i>`,\r\n    iconSize: [20, 20],\r\n    className: 'myDivIcon',\r\n  });\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <Marker position={position} icon={fontAwesomeIcon}>\r\n          <Popup>\r\n            A pretty CSS3 popup.\r\n            <br />\r\n            Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\nLeafletMapCustomIcon.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  faIcon: PropTypes.string,\r\n};\r\n\r\nconst LeafletMarkerCluster = props => {\r\n  const { latitude, longitude, width, height, zoom, data } = props;\r\n\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom} className=\"markercluster-map\" maxZoom={18}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <MarkerClusterGroup>\r\n          {data.map(item => {\r\n            return (\r\n              <Marker key={item.id} position={item.position}>\r\n                <Popup>\r\n                  A pretty CSS3 popup.\r\n                  <br />\r\n                  Easily customizable.\r\n                </Popup>\r\n              </Marker>\r\n            );\r\n          })}\r\n        </MarkerClusterGroup>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\n\r\nLeafletMarkerCluster.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport { LeafletMapBasic, LeafletMapMultipleIcon, LeafletMapCustomIcon, LeafletMarkerCluster };\r\n"]},"metadata":{},"sourceType":"module"}