{"ast":null,"code":"import \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/comment/style\";\nimport _Comment from \"antd/es/comment\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nvar _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/profile/myProfile/overview/timeline/Posts.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport FeatherIcon from 'feather-icons-react';\nimport { Link } from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\nimport Picker from 'emoji-picker-react';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SimpleReactLightbox, { SRLWrapper } from 'simple-react-lightbox';\nimport { AllPosts, BackShadowEmoji, Title } from './style';\nimport { Cards } from '../../../../../components/cards/frame/cards-frame';\nimport { Button } from '../../../../../components/buttons/buttons';\nimport { likeUpdate, commentUpdate, postDelete } from '../../../../../redux/profile/actionCreator';\n\nconst ExampleComment = ({\n  children,\n  replay\n}) => /*#__PURE__*/React.createElement(_Comment, {\n  actions: [/*#__PURE__*/React.createElement(\"span\", {\n    className: \"com-like\",\n    key: \"comment-nested-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, \"Like \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"com-reply\",\n    key: \"comment-nested-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 85\n    }\n  }, \"Reply \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"com-time\",\n    key: \"comment-nested-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 157\n    }\n  }, moment(parseInt(replay.time, 10)).fromNow())],\n  author: /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, replay.name),\n  avatar: /*#__PURE__*/React.createElement(_Avatar, {\n    src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n    alt: \"Han Solo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }),\n  content: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }\n  }, replay.text),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, children);\n\nExampleComment.propTypes = {\n  children: PropTypes.node,\n  replay: PropTypes.object\n};\n\nconst Posts = ({\n  postId,\n  from,\n  time,\n  img,\n  like,\n  comment,\n  content,\n  author\n}) => {\n  const dispatch = useDispatch();\n  const {\n    posts\n  } = useSelector(state => {\n    return {\n      posts: state.Profile.posts\n    };\n  });\n  const [state, setState] = useState({\n    inputValue: '',\n    fileList: [],\n    fileList2: []\n  });\n  const [pickerShow, setPickerShow] = useState(false);\n  const [textValue, setTextValue] = useState('');\n\n  const onEmojiClick = (event, emojiObject) => {\n    setTextValue(textValue + emojiObject.emoji);\n  };\n\n  const onPickerShow = () => {\n    setPickerShow(!pickerShow);\n  };\n\n  const onTextChange = e => {\n    setTextValue(e.target.value);\n  };\n\n  const props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n    listType: 'picture-card',\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        // console.log(info.file, info.fileList);\n        setState({ ...state,\n          fileList: info.fileList\n        });\n      }\n\n      if (info.file.status === 'done') {\n        _message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        _message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n  };\n  const attachment = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        // console.log(info.file, info.fileList);\n        setState({ ...state,\n          fileList2: info.fileList\n        });\n      }\n\n      if (info.file.status === 'done') {\n        _message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        _message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n  };\n\n  const onLikeUpdate = id => {\n    return dispatch(likeUpdate(posts, id));\n  };\n\n  const onCommentUpdate = id => {\n    dispatch(commentUpdate(posts, id, textValue));\n    setTextValue('');\n  };\n\n  const onPostDelete = id => {\n    dispatch(postDelete(posts, id));\n  };\n\n  return /*#__PURE__*/React.createElement(SimpleReactLightbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AllPosts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    title: /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../../../../../${author}`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, from, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 24\n      }\n    }, moment(parseInt(time, 10)).fromNow()))),\n    more: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => onPostDelete(postId),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Delete\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, img.length ? /*#__PURE__*/React.createElement(SRLWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    breakpointCols: img.length <= 2 ? img.length : 2,\n    className: \"my-masonry-grid\",\n    columnClassName: \"my-masonry-grid_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, img.map((src, key) => {\n    return key <= 1 && /*#__PURE__*/React.createElement(\"a\", {\n      key: key + 1,\n      href: require(`../../../../../${src}`),\n      \"data-attribute\": \"SRL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      key: key + 1,\n      style: {\n        width: '100%'\n      },\n      src: require(`../../../../../${src}`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }));\n  })), img.length > 2 && /*#__PURE__*/React.createElement(Masonry, {\n    breakpointCols: img.length <= 2 ? img.length : 3,\n    className: \"my-masonry-grid\",\n    columnClassName: \"my-masonry-grid_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, img.map((src, key) => {\n    return key > 1 && /*#__PURE__*/React.createElement(\"a\", {\n      key: key + 1,\n      href: require(`../../../../../${src}`),\n      \"data-attribute\": \"SRL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      key: key + 1,\n      style: {\n        width: '100%'\n      },\n      src: require(`../../../../../${src}`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 31\n      }\n    }));\n  }))) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, content)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => onLikeUpdate(postId),\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"thumbs-up\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  })), like), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"message-square\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  })), comment.length), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"share-2\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }), \"Share\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../../../../static/img/chat-author/t2.jpg'),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(_Input.TextArea, {\n    onChange: onTextChange,\n    value: textValue,\n    placeholder: \"Write comment....\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbox-reply-action d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"smile-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, pickerShow && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BackShadowEmoji, {\n    onClick: () => setPickerShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Picker, {\n    onEmojiClick: onEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    onClick: onPickerShow,\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"smile\",\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"image\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, Object.assign({}, attachment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"paperclip\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => textValue === '' ? alert('Please input your comment...') : onCommentUpdate(postId),\n    type: \"primary\",\n    className: \"btn-send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"send\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  })))), comment.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentReplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExampleComment, {\n    replay: {\n      time: comment[0].time,\n      name: comment[0].from,\n      text: comment[0].text\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, comment.length > 1 ? comment.map((item, key) => {\n    return key >= 1 && /*#__PURE__*/React.createElement(ExampleComment, {\n      replay: {\n        time: item.time,\n        name: item.name,\n        text: item.text\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    });\n  }) : null)) : null))));\n};\n\n__signature__(Posts, \"useDispatch{dispatch}\\nuseSelector{{ posts }}\\nuseState{[state, setState]({\\r\\n    inputValue: '',\\r\\n    fileList: [],\\r\\n    fileList2: [],\\r\\n  })}\\nuseState{[pickerShow, setPickerShow](false)}\\nuseState{[textValue, setTextValue]('')}\", () => [useDispatch, useSelector]);\n\nPosts.propTypes = {\n  postId: PropTypes.number,\n  from: PropTypes.string,\n  time: PropTypes.string,\n  img: PropTypes.array,\n  like: PropTypes.number,\n  comment: PropTypes.array,\n  content: PropTypes.string,\n  author: PropTypes.string\n};\nconst _default = Posts;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ExampleComment, \"ExampleComment\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/profile/myProfile/overview/timeline/Posts.js\");\n  reactHotLoader.register(Posts, \"Posts\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/profile/myProfile/overview/timeline/Posts.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/profile/myProfile/overview/timeline/Posts.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/profile/myProfile/overview/timeline/Posts.js"],"names":["React","useState","FeatherIcon","Link","Masonry","Picker","moment","useSelector","useDispatch","PropTypes","SimpleReactLightbox","SRLWrapper","AllPosts","BackShadowEmoji","Title","Cards","Button","likeUpdate","commentUpdate","postDelete","ExampleComment","children","replay","parseInt","time","fromNow","name","text","propTypes","node","object","Posts","postId","from","img","like","comment","content","author","dispatch","posts","state","Profile","setState","inputValue","fileList","fileList2","pickerShow","setPickerShow","textValue","setTextValue","onEmojiClick","event","emojiObject","emoji","onPickerShow","onTextChange","e","target","value","props","action","headers","authorization","listType","onChange","info","file","status","success","error","attachment","onLikeUpdate","id","onCommentUpdate","onPostDelete","require","length","map","src","key","width","alert","item","number","string","array"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,IAA8BC,UAA9B,QAAgD,uBAAhD;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,KAApC,QAAiD,SAAjD;AACA,SAASC,KAAT,QAAsB,mDAAtB;AACA,SAASC,MAAT,QAAuB,2CAAvB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,4CAAtD;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,kBACrB;AACE,EAAA,OAAO,EAAE,cAAC;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,GAAG,EAAC,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,eAAuE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,GAAG,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvE,eAA+I;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,GAAG,EAAC,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0DhB,MAAM,CAACiB,QAAQ,CAACD,MAAM,CAACE,IAAR,EAAc,EAAd,CAAT,CAAN,CAAkCC,OAAlC,EAA1D,CAA/I,CADX;AAEE,EAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,MAAM,CAACI,IAAd,CAFV;AAGE,EAAA,MAAM,eAAE;AAAQ,IAAA,GAAG,EAAC,kEAAZ;AAA+E,IAAA,GAAG,EAAC,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIE,EAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,MAAM,CAACK,IAAX,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGN,QANH,CADF;;AAWAD,cAAc,CAACQ,SAAf,GAA2B;AACzBP,EAAAA,QAAQ,EAAEZ,SAAS,CAACoB,IADK;AAEzBP,EAAAA,MAAM,EAAEb,SAAS,CAACqB;AAFO,CAA3B;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBT,EAAAA,IAAhB;AAAsBU,EAAAA,GAAtB;AAA2BC,EAAAA,IAA3B;AAAiCC,EAAAA,OAAjC;AAA0CC,EAAAA,OAA1C;AAAmDC,EAAAA;AAAnD,CAAD,KAAiE;AAC7E,QAAMC,QAAQ,GAAG/B,WAAW,EAA5B;AACA,QAAM;AAAEgC,IAAAA;AAAF,MAAYjC,WAAW,CAACkC,KAAK,IAAI;AACrC,WAAO;AACLD,MAAAA,KAAK,EAAEC,KAAK,CAACC,OAAN,CAAcF;AADhB,KAAP;AAGD,GAJ4B,CAA7B;AAMA,QAAM,CAACC,KAAD,EAAQE,QAAR,IAAoB1C,QAAQ,CAAC;AACjC2C,IAAAA,UAAU,EAAE,EADqB;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,SAAS,EAAE;AAHsB,GAAD,CAAlC;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B/C,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACgD,SAAD,EAAYC,YAAZ,IAA4BjD,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMkD,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC3CH,IAAAA,YAAY,CAACD,SAAS,GAAGI,WAAW,CAACC,KAAzB,CAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBP,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACxBP,IAAAA,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG;AACZlC,IAAAA,IAAI,EAAE,MADM;AAEZmC,IAAAA,MAAM,EAAE,kDAFI;AAGZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR,KAHG;AAMZC,IAAAA,QAAQ,EAAE,cANE;;AAOZC,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,UAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC;AACpC;AACAzB,QAAAA,QAAQ,CAAC,EACP,GAAGF,KADI;AAEPI,UAAAA,QAAQ,EAAEqB,IAAI,CAACrB;AAFR,SAAD,CAAR;AAID;;AACD,UAAIqB,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/B,iBAAQC,OAAR,CAAiB,GAAEH,IAAI,CAACC,IAAL,CAAUzC,IAAK,6BAAlC;AACD,OAFD,MAEO,IAAIwC,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvC,iBAAQE,KAAR,CAAe,GAAEJ,IAAI,CAACC,IAAL,CAAUzC,IAAK,sBAAhC;AACD;AACF;;AApBW,GAAd;AAuBA,QAAM6C,UAAU,GAAG;AACjB7C,IAAAA,IAAI,EAAE,MADW;AAEjBmC,IAAAA,MAAM,EAAE,kDAFS;AAGjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR,KAHQ;;AAMjBE,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,UAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC;AACpC;AACAzB,QAAAA,QAAQ,CAAC,EACP,GAAGF,KADI;AAEPK,UAAAA,SAAS,EAAEoB,IAAI,CAACrB;AAFT,SAAD,CAAR;AAID;;AACD,UAAIqB,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/B,iBAAQC,OAAR,CAAiB,GAAEH,IAAI,CAACC,IAAL,CAAUzC,IAAK,6BAAlC;AACD,OAFD,MAEO,IAAIwC,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvC,iBAAQE,KAAR,CAAe,GAAEJ,IAAI,CAACC,IAAL,CAAUzC,IAAK,sBAAhC;AACD;AACF;;AAnBgB,GAAnB;;AAsBA,QAAM8C,YAAY,GAAGC,EAAE,IAAI;AACzB,WAAOlC,QAAQ,CAACtB,UAAU,CAACuB,KAAD,EAAQiC,EAAR,CAAX,CAAf;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAGD,EAAE,IAAI;AAC5BlC,IAAAA,QAAQ,CAACrB,aAAa,CAACsB,KAAD,EAAQiC,EAAR,EAAYxB,SAAZ,CAAd,CAAR;AACAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAHD;;AAKA,QAAMyB,YAAY,GAAGF,EAAE,IAAI;AACzBlC,IAAAA,QAAQ,CAACpB,UAAU,CAACqB,KAAD,EAAQiC,EAAR,CAAX,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,eACH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEG,OAAO,CAAE,kBAAiBtC,MAAO,EAA1B,CAAjB;AAA+C,MAAA,GAAG,EAAC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,IADH,oBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO3B,MAAM,CAACiB,QAAQ,CAACC,IAAD,EAAO,EAAP,CAAT,CAAN,CAA2BC,OAA3B,EAAP,CADT,CAFF,CAFJ;AASE,IAAA,IAAI,eACF,uDACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAMkD,YAAY,CAAC3C,MAAD,CAAjC;AAA2C,MAAA,EAAE,EAAC,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAiBE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,GAAG,CAAC2C,MAAJ,gBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,cAAc,EAAE3C,GAAG,CAAC2C,MAAJ,IAAc,CAAd,GAAkB3C,GAAG,CAAC2C,MAAtB,GAA+B,CADjD;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,eAAe,EAAC,wBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG3C,GAAG,CAAC4C,GAAJ,CAAQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrB,WACEA,GAAG,IAAI,CAAP,iBACE;AAAG,MAAA,GAAG,EAAEA,GAAG,GAAG,CAAd;AAAiB,MAAA,IAAI,EAAEJ,OAAO,CAAE,kBAAiBG,GAAI,EAAvB,CAA9B;AAAyD,wBAAe,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEC,GAAG,GAAG,CADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,GAAG,EAAEL,OAAO,CAAE,kBAAiBG,GAAI,EAAvB,CAHd;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ;AAYD,GAbA,CALH,CADF,EAqBG7C,GAAG,CAAC2C,MAAJ,GAAa,CAAb,iBACC,oBAAC,OAAD;AACE,IAAA,cAAc,EAAE3C,GAAG,CAAC2C,MAAJ,IAAc,CAAd,GAAkB3C,GAAG,CAAC2C,MAAtB,GAA+B,CADjD;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,eAAe,EAAC,wBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG3C,GAAG,CAAC4C,GAAJ,CAAQ,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrB,WACEA,GAAG,GAAG,CAAN,iBACE;AAAG,MAAA,GAAG,EAAEA,GAAG,GAAG,CAAd;AAAiB,MAAA,IAAI,EAAEJ,OAAO,CAAE,kBAAiBG,GAAI,EAAvB,CAA9B;AAAyD,wBAAe,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEC,GAAG,GAAG,CADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,GAAG,EAAEL,OAAO,CAAE,kBAAiBG,GAAI,EAAvB,CAHd;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ;AAYD,GAbA,CALH,CAtBJ,CADD,GA6CG,IA9CN,CADF,eAiDE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI1C,OAAJ,CADF,CAjDF,eAoDE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAMmC,YAAY,CAACxC,MAAD,CAAjC;AAA2C,IAAA,EAAE,EAAC,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGG,IAJH,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,gBAAlB;AAAmC,IAAA,IAAI,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGC,OAAO,CAACyC,MAJX,CAPF,eAcE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,UAdF,CApDF,eAwEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAED,OAAO,CAAC,8CAAD,CAAjB;AAAmE,IAAA,GAAG,EAAC,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,2BAAO,QAAP;AAAgB,IAAA,QAAQ,EAAEpB,YAA1B;AAAwC,IAAA,KAAK,EAAEP,SAA/C;AAA0D,IAAA,WAAW,EAAC,mBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,iBACT,uDACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,eAOE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEI,YAAf;AAA6B,IAAA,EAAE,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,eAaE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,+CAAYK,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAbF,eAkBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,+CAAYW,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlBF,CAHF,CADF,eA6BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAOtB,SAAS,KAAK,EAAd,GAAmBiC,KAAK,CAAC,8BAAD,CAAxB,GAA2DR,eAAe,CAAC1C,MAAD,CAD5F;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,SAAS,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA7BF,CADF,CAxEF,EA+GGI,OAAO,CAACyC,MAAR,gBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,MAAM,EAAE;AACNrD,MAAAA,IAAI,EAAEY,OAAO,CAAC,CAAD,CAAP,CAAWZ,IADX;AAENE,MAAAA,IAAI,EAAEU,OAAO,CAAC,CAAD,CAAP,CAAWH,IAFX;AAGNN,MAAAA,IAAI,EAAES,OAAO,CAAC,CAAD,CAAP,CAAWT;AAHX,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGS,OAAO,CAACyC,MAAR,GAAiB,CAAjB,GACGzC,OAAO,CAAC0C,GAAR,CAAY,CAACK,IAAD,EAAOH,GAAP,KAAe;AACzB,WACEA,GAAG,IAAI,CAAP,iBACE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE;AACNxD,QAAAA,IAAI,EAAE2D,IAAI,CAAC3D,IADL;AAENE,QAAAA,IAAI,EAAEyD,IAAI,CAACzD,IAFL;AAGNC,QAAAA,IAAI,EAAEwD,IAAI,CAACxD;AAHL,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAWD,GAZD,CADH,GAcG,IArBN,CADF,CADD,GA0BG,IAzIN,CAjBF,CADF,CADF,CADF;AAmKD,CA1PD;;cAAMI,K,0PACavB,W,EACCD,W;;AA0PpBwB,KAAK,CAACH,SAAN,GAAkB;AAChBI,EAAAA,MAAM,EAAEvB,SAAS,CAAC2E,MADF;AAEhBnD,EAAAA,IAAI,EAAExB,SAAS,CAAC4E,MAFA;AAGhB7D,EAAAA,IAAI,EAAEf,SAAS,CAAC4E,MAHA;AAIhBnD,EAAAA,GAAG,EAAEzB,SAAS,CAAC6E,KAJC;AAKhBnD,EAAAA,IAAI,EAAE1B,SAAS,CAAC2E,MALA;AAMhBhD,EAAAA,OAAO,EAAE3B,SAAS,CAAC6E,KANH;AAOhBjD,EAAAA,OAAO,EAAE5B,SAAS,CAAC4E,MAPH;AAQhB/C,EAAAA,MAAM,EAAE7B,SAAS,CAAC4E;AARF,CAAlB;iBAWetD,K;AAAf;;;;;;;;;;0BAvRMX,c;0BAgBAW,K","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useState } from 'react';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Masonry from 'react-masonry-css';\r\nimport { Input, Upload, message, Comment, Avatar } from 'antd';\r\nimport Picker from 'emoji-picker-react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport SimpleReactLightbox, { SRLWrapper } from 'simple-react-lightbox';\r\nimport { AllPosts, BackShadowEmoji, Title } from './style';\r\nimport { Cards } from '../../../../../components/cards/frame/cards-frame';\r\nimport { Button } from '../../../../../components/buttons/buttons';\r\nimport { likeUpdate, commentUpdate, postDelete } from '../../../../../redux/profile/actionCreator';\r\n\r\nconst ExampleComment = ({ children, replay }) => (\r\n  <Comment\r\n    actions={[<span className=\"com-like\" key=\"comment-nested-reply-to\">Like </span>,<span className=\"com-reply\" key=\"comment-nested-reply-to\">Reply </span>,<span className=\"com-time\" key=\"comment-nested-reply-to\">{moment(parseInt(replay.time, 10)).fromNow()}</span>]}\r\n    author={<span>{replay.name}</span>}\r\n    avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" alt=\"Han Solo\" />}\r\n    content={<p>{replay.text}</p>}\r\n  >\r\n    {children}\r\n  </Comment>\r\n);\r\n\r\nExampleComment.propTypes = {\r\n  children: PropTypes.node,\r\n  replay: PropTypes.object,\r\n};\r\n\r\nconst Posts = ({ postId, from, time, img, like, comment, content, author }) => {\r\n  const dispatch = useDispatch();\r\n  const { posts } = useSelector(state => {\r\n    return {\r\n      posts: state.Profile.posts,\r\n    };\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    inputValue: '',\r\n    fileList: [],\r\n    fileList2: [],\r\n  });\r\n\r\n  const [pickerShow, setPickerShow] = useState(false);\r\n  const [textValue, setTextValue] = useState('');\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setTextValue(textValue + emojiObject.emoji);\r\n  };\r\n\r\n  const onPickerShow = () => {\r\n    setPickerShow(!pickerShow);\r\n  };\r\n\r\n  const onTextChange = e => {\r\n    setTextValue(e.target.value);\r\n  };\r\n\r\n  const props = {\r\n    name: 'file',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    listType: 'picture-card',\r\n    onChange(info) {\r\n      if (info.file.status !== 'uploading') {\r\n        // console.log(info.file, info.fileList);\r\n        setState({\r\n          ...state,\r\n          fileList: info.fileList,\r\n        });\r\n      }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const attachment = {\r\n    name: 'file',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== 'uploading') {\r\n        // console.log(info.file, info.fileList);\r\n        setState({\r\n          ...state,\r\n          fileList2: info.fileList,\r\n        });\r\n      }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const onLikeUpdate = id => {\r\n    return dispatch(likeUpdate(posts, id));\r\n  };\r\n\r\n  const onCommentUpdate = id => {\r\n    dispatch(commentUpdate(posts, id, textValue));\r\n    setTextValue('');\r\n  };\r\n\r\n  const onPostDelete = id => {\r\n    dispatch(postDelete(posts, id));\r\n  };\r\n\r\n  return (\r\n    <SimpleReactLightbox>\r\n      <AllPosts>\r\n        <Cards\r\n          title={\r\n            <Title>\r\n              <img src={require(`../../../../../${author}`)} alt=\"\" />\r\n              <p>\r\n                {from} <span>{moment(parseInt(time, 10)).fromNow()}</span>\r\n              </p>\r\n            </Title>\r\n          }\r\n          more={\r\n            <>\r\n              <Link onClick={() => onPostDelete(postId)} to=\"#\">\r\n                Delete\r\n              </Link>\r\n            </>\r\n          }\r\n        >\r\n          <div className=\"post-content\">\r\n            <div className=\"gallery\">\r\n              {img.length ? (\r\n                <SRLWrapper>\r\n                  <Masonry\r\n                    breakpointCols={img.length <= 2 ? img.length : 2}\r\n                    className=\"my-masonry-grid\"\r\n                    columnClassName=\"my-masonry-grid_column\"\r\n                  >\r\n                    {img.map((src, key) => {\r\n                      return (\r\n                        key <= 1 && (\r\n                          <a key={key + 1} href={require(`../../../../../${src}`)} data-attribute=\"SRL\">\r\n                            <img\r\n                              key={key + 1}\r\n                              style={{ width: '100%' }}\r\n                              src={require(`../../../../../${src}`)}\r\n                              alt=\"\"\r\n                            />\r\n                          </a>\r\n                        )\r\n                      );\r\n                    })}\r\n                  </Masonry>\r\n                  {img.length > 2 && (\r\n                    <Masonry\r\n                      breakpointCols={img.length <= 2 ? img.length : 3}\r\n                      className=\"my-masonry-grid\"\r\n                      columnClassName=\"my-masonry-grid_column\"\r\n                    >\r\n                      {img.map((src, key) => {\r\n                        return (\r\n                          key > 1 && (\r\n                            <a key={key + 1} href={require(`../../../../../${src}`)} data-attribute=\"SRL\">\r\n                              <img\r\n                                key={key + 1}\r\n                                style={{ width: '100%' }}\r\n                                src={require(`../../../../../${src}`)}\r\n                                alt=\"\"\r\n                              />\r\n                            </a>\r\n                          )\r\n                        );\r\n                      })}\r\n                    </Masonry>\r\n                  )}\r\n                </SRLWrapper>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"post-text\">\r\n              <p>{content}</p>\r\n            </div>\r\n            <div className=\"post-actions\">\r\n              <span>\r\n                <Link onClick={() => onLikeUpdate(postId)} to=\"#\">\r\n                  <FeatherIcon icon=\"thumbs-up\" size={14} />\r\n                </Link>\r\n                {like}\r\n              </span>\r\n              <span>\r\n                <Link to=\"#\">\r\n                  <FeatherIcon icon=\"message-square\" size={14} />\r\n                </Link>\r\n                {comment.length}\r\n              </span>\r\n\r\n              <Link to=\"#\">\r\n                <FeatherIcon icon=\"share-2\" size={14} />\r\n                Share\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"post-comments\">\r\n              <div className=\"commentArea\">\r\n                <div className=\"comment-form\">\r\n                  <img src={require('../../../../../static/img/chat-author/t2.jpg')} alt=\"\" />\r\n                  <Input.TextArea onChange={onTextChange} value={textValue} placeholder=\"Write comment....\" />\r\n                  <div className=\"chatbox-reply-action d-flex\">\r\n                    <span className=\"smile-icon\">\r\n                      {pickerShow && (\r\n                        <>\r\n                          <BackShadowEmoji onClick={() => setPickerShow(false)} />\r\n                          <Picker onEmojiClick={onEmojiClick} />\r\n                        </>\r\n                      )}\r\n                      <Link onClick={onPickerShow} to=\"#\">\r\n                        <FeatherIcon icon=\"smile\" size={24} />\r\n                      </Link>\r\n                    </span>\r\n\r\n                    <Link to=\"#\">\r\n                      <Upload {...props}>\r\n                        <FeatherIcon icon=\"image\" size={18} />\r\n                      </Upload>\r\n                    </Link>\r\n                    <Link to=\"#\">\r\n                      <Upload {...attachment}>\r\n                        <FeatherIcon icon=\"paperclip\" size={18} />\r\n                      </Upload>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  onClick={() => (textValue === '' ? alert('Please input your comment...') : onCommentUpdate(postId))}\r\n                  type=\"primary\"\r\n                  className=\"btn-send\"\r\n                >\r\n                  <FeatherIcon icon=\"send\" size={18} />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            {comment.length ? (\r\n              <div className=\"commentReplay\">\r\n                <ExampleComment\r\n                  replay={{\r\n                    time: comment[0].time,\r\n                    name: comment[0].from,\r\n                    text: comment[0].text,\r\n                  }}\r\n                >\r\n                  {comment.length > 1\r\n                    ? comment.map((item, key) => {\r\n                        return (\r\n                          key >= 1 && (\r\n                            <ExampleComment\r\n                              replay={{\r\n                                time: item.time,\r\n                                name: item.name,\r\n                                text: item.text,\r\n                              }}\r\n                            />\r\n                          )\r\n                        );\r\n                      })\r\n                    : null}\r\n                </ExampleComment>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Cards>\r\n      </AllPosts>\r\n    </SimpleReactLightbox>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  postId: PropTypes.number,\r\n  from: PropTypes.string,\r\n  time: PropTypes.string,\r\n  img: PropTypes.array,\r\n  like: PropTypes.number,\r\n  comment: PropTypes.array,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}