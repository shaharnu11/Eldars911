{"ast":null,"code":"import \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/business/AccountGroup.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport FeatherIcon from 'feather-icons-react';\nimport { NavLink } from 'react-router-dom';\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\nimport { ChartjsLineChart } from '../../../../components/charts/chartjs';\n\nconst AccountGroup = () => {\n  const moreContent = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    size: 16,\n    icon: \"printer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Printer\")), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    size: 16,\n    icon: \"book-open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"PDF\")), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    size: 16,\n    icon: \"file-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Google Sheets\")), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    size: 16,\n    icon: \"x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Excel (XLSX)\")), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    size: 16,\n    icon: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"CSV\")));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Col, {\n    lg: 12,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"account-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    title: \"Account Receivable\",\n    more: moreContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChartjsLineChart, {\n    labels: ['Current', '1-30', '30-60', '60-90', '91+'],\n    datasets: [{\n      data: [105, 145, 95, 149, 90],\n      borderColor: '#FA8B0C',\n      borderWidth: 3,\n      fill: false,\n      pointBackgroundColor: '#FA8B0C',\n      pointBorderColor: '#fff',\n      pointHoverBorderColor: '#fff',\n      pointBorderWidth: 2,\n      pointHoverBorderWidth: 3,\n      pointHoverRadius: 5,\n      z: 5\n    }],\n    height: window.innerWidth <= 575 ? 230 : 100,\n    options: {\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 5,\n          z: 5\n        }\n      },\n      tooltips: {\n        mode: 'label',\n        intersect: false,\n        backgroundColor: '#ffffff',\n        position: 'average',\n        titleFontColor: '#5A5F7D',\n        titleFontSize: 13,\n        titleSpacing: 15,\n        bodyFontColor: '#868EAE',\n        bodyFontSize: 12,\n        borderColor: '#F1F2F6',\n        borderWidth: 2,\n        bodySpacing: 15,\n        xPadding: 15,\n        yPadding: 15,\n        z: 999999,\n\n        custom(tooltip) {\n          if (!tooltip) return; // disable displaying the color box;\n\n          tooltip.displayColors = false;\n        },\n\n        callbacks: {\n          title() {\n            return `Account Receivable`;\n          },\n\n          label(t, d) {\n            const {\n              yLabel,\n              xLabel\n            } = t;\n            return `${xLabel}: $${yLabel}k`;\n          },\n\n          labelColor(tooltipItem, chart) {\n            return {\n              backgroundColor: '#000',\n              borderColor: 'transparent'\n            };\n          }\n\n        }\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            color: '#e5e9f2',\n            borderDash: [3, 3],\n            zeroLineColor: '#e5e9f2',\n            zeroLineWidth: 1,\n            zeroLineBorderDash: [3, 3]\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 13,\n            fontColor: '#182b49',\n            max: 200,\n            stepSize: 50,\n            padding: 10,\n\n            callback(label) {\n              return `${label}k`;\n            }\n\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            display: true,\n            zeroLineWidth: 2,\n            zeroLineColor: 'transparent',\n            color: 'transparent',\n            z: 1\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(_Col, {\n    lg: 12,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"account-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    title: \"Account Payable\",\n    more: moreContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChartjsLineChart, {\n    labels: ['Current', '1-30', '30-60', '60-90', '91+'],\n    datasets: [{\n      data: [80, 160, 105, 140, 107],\n      borderColor: '#2C99FF',\n      borderWidth: 3,\n      fill: false,\n      pointBackgroundColor: '#2C99FF',\n      pointBorderColor: '#fff',\n      pointHoverBorderColor: '#fff',\n      pointBorderWidth: 2,\n      pointHoverBorderWidth: 3,\n      pointHoverRadius: 5,\n      z: 5\n    }],\n    height: window.innerWidth <= 575 ? 230 : 100,\n    options: {\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 5,\n          z: 5\n        }\n      },\n      tooltips: {\n        mode: 'label',\n        intersect: false,\n        backgroundColor: '#ffffff',\n        position: 'average',\n        titleFontColor: '#5A5F7D',\n        titleFontSize: 13,\n        titleSpacing: 15,\n        bodyFontColor: '#868EAE',\n        bodyFontSize: 12,\n        borderColor: '#F1F2F6',\n        borderWidth: 2,\n        bodySpacing: 15,\n        xPadding: 15,\n        yPadding: 15,\n        z: 999999,\n\n        // enabled: false,\n        // custom: customTooltips,\n        custom(tooltip) {\n          if (!tooltip) return;\n          tooltip.displayColors = false;\n        },\n\n        callbacks: {\n          title() {\n            return `Account Payable`;\n          },\n\n          label(t, d) {\n            const {\n              yLabel,\n              xLabel\n            } = t;\n            return `${xLabel}: $${yLabel}k`;\n          },\n\n          labelColor(tooltipItem, chart) {\n            return {\n              backgroundColor: '#000',\n              borderColor: 'transparent'\n            };\n          }\n\n        }\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            color: '#e5e9f2',\n            borderDash: [3, 3],\n            zeroLineColor: '#e5e9f2',\n            zeroLineWidth: 1,\n            zeroLineBorderDash: [3, 3]\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 13,\n            fontColor: '#182b49',\n            max: 200,\n            stepSize: 50,\n            padding: 10,\n\n            callback(label) {\n              return `${label}k`;\n            }\n\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            display: true,\n            zeroLineWidth: 2,\n            zeroLineColor: 'transparent',\n            color: 'transparent',\n            z: 1\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst _default = AccountGroup;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(AccountGroup, \"AccountGroup\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/business/AccountGroup.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/business/AccountGroup.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/business/AccountGroup.js"],"names":["React","FeatherIcon","NavLink","Cards","ChartjsLineChart","AccountGroup","moreContent","data","borderColor","borderWidth","fill","pointBackgroundColor","pointBorderColor","pointHoverBorderColor","pointBorderWidth","pointHoverBorderWidth","pointHoverRadius","z","window","innerWidth","legend","display","elements","point","radius","tooltips","mode","intersect","backgroundColor","position","titleFontColor","titleFontSize","titleSpacing","bodyFontColor","bodyFontSize","bodySpacing","xPadding","yPadding","custom","tooltip","displayColors","callbacks","title","label","t","d","yLabel","xLabel","labelColor","tooltipItem","chart","scales","yAxes","gridLines","color","borderDash","zeroLineColor","zeroLineWidth","zeroLineBorderDash","ticks","beginAtZero","fontSize","fontColor","max","stepSize","padding","callback","xAxes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col } from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\nimport { ChartjsLineChart } from '../../../../components/charts/chartjs';\r\n\r\nconst AccountGroup = () => {\r\n  const moreContent = (\r\n    <>\r\n      <NavLink to=\"#\">\r\n        <FeatherIcon size={16} icon=\"printer\" />\r\n        <span>Printer</span>\r\n      </NavLink>\r\n      <NavLink to=\"#\">\r\n        <FeatherIcon size={16} icon=\"book-open\" />\r\n        <span>PDF</span>\r\n      </NavLink>\r\n      <NavLink to=\"#\">\r\n        <FeatherIcon size={16} icon=\"file-text\" />\r\n        <span>Google Sheets</span>\r\n      </NavLink>\r\n      <NavLink to=\"#\">\r\n        <FeatherIcon size={16} icon=\"x\" />\r\n        <span>Excel (XLSX)</span>\r\n      </NavLink>\r\n      <NavLink to=\"#\">\r\n        <FeatherIcon size={16} icon=\"file\" />\r\n        <span>CSV</span>\r\n      </NavLink>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <div className=\"account-card\">\r\n          <Cards title=\"Account Receivable\" more={moreContent}>\r\n            <ChartjsLineChart\r\n              labels={['Current', '1-30', '30-60', '60-90', '91+']}\r\n              datasets={[\r\n                {\r\n                  data: [105, 145, 95, 149, 90],\r\n                  borderColor: '#FA8B0C',\r\n                  borderWidth: 3,\r\n                  fill: false,\r\n                  pointBackgroundColor: '#FA8B0C',\r\n                  pointBorderColor: '#fff',\r\n                  pointHoverBorderColor: '#fff',\r\n                  pointBorderWidth: 2,\r\n                  pointHoverBorderWidth: 3,\r\n                  pointHoverRadius: 5,\r\n                  z: 5,\r\n                },\r\n              ]}\r\n              height={window.innerWidth <= 575 ? 230 : 100}\r\n              options={{\r\n                legend: {\r\n                  display: false,\r\n                },\r\n                elements: {\r\n                  point: {\r\n                    radius: 5,\r\n                    z: 5,\r\n                  },\r\n                },\r\n\r\n                tooltips: {\r\n                  mode: 'label',\r\n                  intersect: false,\r\n                  backgroundColor: '#ffffff',\r\n                  position: 'average',\r\n                  titleFontColor: '#5A5F7D',\r\n                  titleFontSize: 13,\r\n                  titleSpacing: 15,\r\n                  bodyFontColor: '#868EAE',\r\n                  bodyFontSize: 12,\r\n                  borderColor: '#F1F2F6',\r\n                  borderWidth: 2,\r\n                  bodySpacing: 15,\r\n                  xPadding: 15,\r\n                  yPadding: 15,\r\n                  z: 999999,\r\n                  custom(tooltip) {\r\n                    if (!tooltip) return;\r\n                    // disable displaying the color box;\r\n                    tooltip.displayColors = false;\r\n                  },\r\n                  callbacks: {\r\n                    title() {\r\n                      return `Account Receivable`;\r\n                    },\r\n                    label(t, d) {\r\n                      const { yLabel, xLabel } = t;\r\n                      return `${xLabel}: $${yLabel}k`;\r\n                    },\r\n                    labelColor(tooltipItem, chart) {\r\n                      return {\r\n                        backgroundColor: '#000',\r\n                        borderColor: 'transparent',\r\n                      };\r\n                    },\r\n                  },\r\n                },\r\n\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      gridLines: {\r\n                        color: '#e5e9f2',\r\n                        borderDash: [3, 3],\r\n                        zeroLineColor: '#e5e9f2',\r\n                        zeroLineWidth: 1,\r\n                        zeroLineBorderDash: [3, 3],\r\n                      },\r\n                      ticks: {\r\n                        beginAtZero: true,\r\n                        fontSize: 13,\r\n                        fontColor: '#182b49',\r\n                        max: 200,\r\n                        stepSize: 50,\r\n                        padding: 10,\r\n                        callback(label) {\r\n                          return `${label}k`;\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                  xAxes: [\r\n                    {\r\n                      gridLines: {\r\n                        display: true,\r\n                        zeroLineWidth: 2,\r\n                        zeroLineColor: 'transparent',\r\n                        color: 'transparent',\r\n                        z: 1,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </Cards>\r\n        </div>\r\n      </Col>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <div className=\"account-card\">\r\n          <Cards title=\"Account Payable\" more={moreContent}>\r\n            <ChartjsLineChart\r\n              labels={['Current', '1-30', '30-60', '60-90', '91+']}\r\n              datasets={[\r\n                {\r\n                  data: [80, 160, 105, 140, 107],\r\n                  borderColor: '#2C99FF',\r\n                  borderWidth: 3,\r\n                  fill: false,\r\n                  pointBackgroundColor: '#2C99FF',\r\n                  pointBorderColor: '#fff',\r\n                  pointHoverBorderColor: '#fff',\r\n                  pointBorderWidth: 2,\r\n                  pointHoverBorderWidth: 3,\r\n                  pointHoverRadius: 5,\r\n                  z: 5,\r\n                },\r\n              ]}\r\n              height={window.innerWidth <= 575 ? 230 : 100}\r\n              options={{\r\n                legend: {\r\n                  display: false,\r\n                },\r\n                elements: {\r\n                  point: {\r\n                    radius: 5,\r\n                    z: 5,\r\n                  },\r\n                },\r\n\r\n                tooltips: {\r\n                  mode: 'label',\r\n                  intersect: false,\r\n                  backgroundColor: '#ffffff',\r\n                  position: 'average',\r\n                  titleFontColor: '#5A5F7D',\r\n                  titleFontSize: 13,\r\n                  titleSpacing: 15,\r\n                  bodyFontColor: '#868EAE',\r\n                  bodyFontSize: 12,\r\n                  borderColor: '#F1F2F6',\r\n                  borderWidth: 2,\r\n                  bodySpacing: 15,\r\n                  xPadding: 15,\r\n                  yPadding: 15,\r\n                  z: 999999,\r\n                  // enabled: false,\r\n                  // custom: customTooltips,\r\n                  custom(tooltip) {\r\n                    if (!tooltip) return;\r\n                    tooltip.displayColors = false;\r\n                  },\r\n                  callbacks: {\r\n                    title() {\r\n                      return `Account Payable`;\r\n                    },\r\n                    label(t, d) {\r\n                      const { yLabel, xLabel } = t;\r\n                      return `${xLabel}: $${yLabel}k`;\r\n                    },\r\n                    labelColor(tooltipItem, chart) {\r\n                      return {\r\n                        backgroundColor: '#000',\r\n                        borderColor: 'transparent',\r\n                      };\r\n                    },\r\n                  },\r\n                },\r\n\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      gridLines: {\r\n                        color: '#e5e9f2',\r\n                        borderDash: [3, 3],\r\n                        zeroLineColor: '#e5e9f2',\r\n                        zeroLineWidth: 1,\r\n                        zeroLineBorderDash: [3, 3],\r\n                      },\r\n                      ticks: {\r\n                        beginAtZero: true,\r\n                        fontSize: 13,\r\n                        fontColor: '#182b49',\r\n                        max: 200,\r\n                        stepSize: 50,\r\n                        padding: 10,\r\n                        callback(label) {\r\n                          return `${label}k`;\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                  xAxes: [\r\n                    {\r\n                      gridLines: {\r\n                        display: true,\r\n                        zeroLineWidth: 2,\r\n                        zeroLineColor: 'transparent',\r\n                        color: 'transparent',\r\n                        z: 1,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </Cards>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountGroup;\r\n"]},"metadata":{},"sourceType":"module"}