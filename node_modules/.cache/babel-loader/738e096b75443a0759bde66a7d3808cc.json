{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import actions from'./actions';import initialState from'../../demoData/message-list.json';var readMessageBegin=actions.readMessageBegin,readMessageSuccess=actions.readMessageSuccess,readMessageErr=actions.readMessageErr;var readMessageList=function readMessageList(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch(readMessageBegin());dispatch(readMessageSuccess(initialState));}catch(err){dispatch(readMessageErr(err));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export{readMessageList};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/message/actionCreator.js"],"names":["actions","initialState","readMessageBegin","readMessageSuccess","readMessageErr","readMessageList","dispatch","err"],"mappings":"yVAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,C,GAEQC,CAAAA,gB,CAAyDF,O,CAAzDE,gB,CAAkBC,kB,CAAuCH,O,CAAvCG,kB,CAAoBC,c,CAAmBJ,O,CAAnBI,c,CAE9C,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,+FAAO,iBAAMC,QAAN,kHACL,GAAI,CACFA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR,CACAI,QAAQ,CAACH,kBAAkB,CAACF,YAAD,CAAnB,CAAR,CACD,CAAC,MAAOM,GAAP,CAAY,CACZD,QAAQ,CAACF,cAAc,CAACG,GAAD,CAAf,CAAR,CACD,CANI,sDAAP,+DAQD,CATD,CAWA,OAASF,eAAT","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/message-list.json';\r\n\r\nconst { readMessageBegin, readMessageSuccess, readMessageErr } = actions;\r\n\r\nconst readMessageList = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(readMessageBegin());\r\n      dispatch(readMessageSuccess(initialState));\r\n    } catch (err) {\r\n      dispatch(readMessageErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { readMessageList };\r\n"]},"metadata":{},"sourceType":"module"}