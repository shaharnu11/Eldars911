{"ast":null,"code":"import\"antd/es/row/style\";import _Row from\"antd/es/row\";import\"antd/es/col/style\";import _Col from\"antd/es/col\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import _objectWithoutProperties from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{NavLink,Link}from'react-router-dom';import FeatherIcon from'feather-icons-react';import{Scrollbars}from'react-custom-scrollbars';import{useDispatch,useSelector}from'react-redux';import{VectorMap}from'react-jvectormap';import{RegionList,RegionMap}from'../../style';import{Cards}from'../../../../components/cards/frame/cards-frame';import{regionFilterData,regionGetData}from'../../../../redux/chartContent/actionCreator';var moreContent=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"printer\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Printer\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"book-open\"}),/*#__PURE__*/React.createElement(\"span\",null,\"PDF\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"file-text\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Google Sheets\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"x\"}),/*#__PURE__*/React.createElement(\"span\",null,\"Excel (XLSX)\")),/*#__PURE__*/React.createElement(NavLink,{to:\"#\"},/*#__PURE__*/React.createElement(FeatherIcon,{size:16,icon:\"file\"}),/*#__PURE__*/React.createElement(\"span\",null,\"CSV\")));var regionColumns=[{title:'Top Region',dataIndex:'region',key:'region'},{title:'Sessions',dataIndex:'sessions',key:'sessions'}];var SessionsbyRegion=function SessionsbyRegion(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return{regionState:state.chartContent.regionData,lpIsLoading:state.chartContent.lpLoading};}),regionState=_useSelector.regionState;var _useState=useState({region:'year'}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){if(regionGetData){dispatch(regionGetData());}},[dispatch]);var regionData=[];if(regionState!==null)regionState.map(function(item,key){return regionData.push({key:key+1,region:item[0],sessions:item[1]});});var handleActiveChangeRegion=function handleActiveChangeRegion(value){setState(_objectSpread(_objectSpread({},state),{},{region:value}));dispatch(regionFilterData(value));};var renderThumb=function renderThumb(_ref){var style=_ref.style,props=_objectWithoutProperties(_ref,[\"style\"]);var thumbStyle={borderRadius:6,backgroundColor:'#F1F2F6',height:'220px'};return/*#__PURE__*/React.createElement(\"div\",{style:_objectSpread(_objectSpread({},style),thumbStyle),props:props});};return/*#__PURE__*/React.createElement(Cards,{isbutton:/*#__PURE__*/React.createElement(\"div\",{className:\"card-nav\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:state.region==='week'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeRegion('week');},to:\"#\"},\"Week\")),/*#__PURE__*/React.createElement(\"li\",{className:state.region==='month'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeRegion('month');},to:\"#\"},\"Month\")),/*#__PURE__*/React.createElement(\"li\",{className:state.region==='year'?'active':'deactivate'},/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return handleActiveChangeRegion('year');},to:\"#\"},\"Year\")))),title:\"Sessions by Region\",size:\"large\",more:moreContent},/*#__PURE__*/React.createElement(_Row,null,/*#__PURE__*/React.createElement(_Col,{xxl:10,md:11,xs:24},/*#__PURE__*/React.createElement(RegionList,null,/*#__PURE__*/React.createElement(Scrollbars,{autoHeight:true,autoHeightMin:280,autoHide:true,renderThumbVertical:renderThumb},/*#__PURE__*/React.createElement(_Table,{columns:regionColumns,dataSource:regionData,pagination:false})))),/*#__PURE__*/React.createElement(_Col,{xxl:14,md:13,xs:24},/*#__PURE__*/React.createElement(RegionMap,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(VectorMap,{map:\"world_mill\",backgroundColor:\"transparent\",regionStyle:{initial:{fill:'#DBE1E8','fill-opacity':1,stroke:'none','stroke-width':0,'stroke-opacity':1},hover:{'fill-opacity':1,cursor:'pointer',fill:'#5F63F2'},selected:{fill:'yellow'},selectedHover:{}},containerStyle:{width:'100%',height:'100%'},containerClassName:\"map\"}))))));};export default SessionsbyRegion;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/performance/SessionsbyRegion.js"],"names":["React","useState","useEffect","NavLink","Link","FeatherIcon","Scrollbars","useDispatch","useSelector","VectorMap","RegionList","RegionMap","Cards","regionFilterData","regionGetData","moreContent","regionColumns","title","dataIndex","key","SessionsbyRegion","dispatch","state","regionState","chartContent","regionData","lpIsLoading","lpLoading","region","setState","map","item","push","sessions","handleActiveChangeRegion","value","renderThumb","style","props","thumbStyle","borderRadius","backgroundColor","height","initial","fill","stroke","hover","cursor","selected","selectedHover","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Table } from 'antd';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { VectorMap } from 'react-jvectormap';\r\nimport { RegionList, RegionMap } from '../../style';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\nimport { regionFilterData, regionGetData } from '../../../../redux/chartContent/actionCreator';\r\n\r\nconst moreContent = (\r\n  <>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"printer\" />\r\n      <span>Printer</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"book-open\" />\r\n      <span>PDF</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"file-text\" />\r\n      <span>Google Sheets</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"x\" />\r\n      <span>Excel (XLSX)</span>\r\n    </NavLink>\r\n    <NavLink to=\"#\">\r\n      <FeatherIcon size={16} icon=\"file\" />\r\n      <span>CSV</span>\r\n    </NavLink>\r\n  </>\r\n);\r\n\r\nconst regionColumns = [\r\n  {\r\n    title: 'Top Region',\r\n    dataIndex: 'region',\r\n    key: 'region',\r\n  },\r\n  {\r\n    title: 'Sessions',\r\n    dataIndex: 'sessions',\r\n    key: 'sessions',\r\n  },\r\n];\r\n\r\nconst SessionsbyRegion = () => {\r\n  const dispatch = useDispatch();\r\n  const { regionState } = useSelector(state => {\r\n    return {\r\n      regionState: state.chartContent.regionData,\r\n      lpIsLoading: state.chartContent.lpLoading,\r\n    };\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    region: 'year',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (regionGetData) {\r\n      dispatch(regionGetData());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const regionData = [];\r\n\r\n  if (regionState !== null)\r\n    regionState.map((item, key) => {\r\n      return regionData.push({\r\n        key: key + 1,\r\n        region: item[0],\r\n        sessions: item[1],\r\n      });\r\n    });\r\n\r\n  const handleActiveChangeRegion = value => {\r\n    setState({\r\n      ...state,\r\n      region: value,\r\n    });\r\n    dispatch(regionFilterData(value));\r\n  };\r\n\r\n  const renderThumb = ({ style, ...props }) => {\r\n    const thumbStyle = {\r\n      borderRadius: 6,\r\n      backgroundColor: '#F1F2F6',\r\n      height: '220px',\r\n    };\r\n    return <div style={{ ...style, ...thumbStyle }} props={props} />;\r\n  };\r\n\r\n  renderThumb.propTypes = {\r\n    style: PropTypes.shape(PropTypes.object).isRequired,\r\n  };\r\n\r\n  return (\r\n    <Cards\r\n      isbutton={\r\n        <div className=\"card-nav\">\r\n          <ul>\r\n            <li className={state.region === 'week' ? 'active' : 'deactivate'}>\r\n              <Link onClick={() => handleActiveChangeRegion('week')} to=\"#\">\r\n                Week\r\n              </Link>\r\n            </li>\r\n            <li className={state.region === 'month' ? 'active' : 'deactivate'}>\r\n              <Link onClick={() => handleActiveChangeRegion('month')} to=\"#\">\r\n                Month\r\n              </Link>\r\n            </li>\r\n            <li className={state.region === 'year' ? 'active' : 'deactivate'}>\r\n              <Link onClick={() => handleActiveChangeRegion('year')} to=\"#\">\r\n                Year\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      }\r\n      title=\"Sessions by Region\"\r\n      size=\"large\"\r\n      more={moreContent}\r\n    >\r\n      <Row>\r\n        <Col xxl={10} md={11} xs={24}>\r\n          <RegionList>\r\n            <Scrollbars autoHeight autoHeightMin={280} autoHide renderThumbVertical={renderThumb}>\r\n              <Table columns={regionColumns} dataSource={regionData} pagination={false} />\r\n            </Scrollbars>\r\n          </RegionList>\r\n        </Col>\r\n        <Col xxl={14} md={13} xs={24}>\r\n          <RegionMap>\r\n            <div>\r\n              <VectorMap\r\n                map=\"world_mill\"\r\n                backgroundColor=\"transparent\"\r\n                regionStyle={{\r\n                  initial: {\r\n                    fill: '#DBE1E8',\r\n                    'fill-opacity': 1,\r\n                    stroke: 'none',\r\n                    'stroke-width': 0,\r\n                    'stroke-opacity': 1,\r\n                  },\r\n                  hover: {\r\n                    'fill-opacity': 1,\r\n                    cursor: 'pointer',\r\n                    fill: '#5F63F2',\r\n                  },\r\n                  selected: {\r\n                    fill: 'yellow',\r\n                  },\r\n                  selectedHover: {},\r\n                }}\r\n                containerStyle={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                }}\r\n                containerClassName=\"map\"\r\n              />\r\n            </div>\r\n          </RegionMap>\r\n        </Col>\r\n      </Row>\r\n    </Cards>\r\n  );\r\n};\r\n\r\nexport default SessionsbyRegion;\r\n"]},"metadata":{},"sourceType":"module"}