{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import actions from'./actions';import initialState from'../../demoData/projectData.json';var singleProjectBegin=actions.singleProjectBegin,singleProjectSuccess=actions.singleProjectSuccess,singleProjectErr=actions.singleProjectErr,filterProjectBegin=actions.filterProjectBegin,filterProjectSuccess=actions.filterProjectSuccess,filterProjectErr=actions.filterProjectErr,sortingProjectBegin=actions.sortingProjectBegin,sortingProjectSuccess=actions.sortingProjectSuccess,sortingProjectErr=actions.sortingProjectErr;var filterSinglePage=function filterSinglePage(paramsId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch(singleProjectBegin());data=initialState.filter(function(project){return project.id===parseInt(paramsId,10);});dispatch(singleProjectSuccess(data));}catch(err){dispatch(singleProjectErr(err));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var filterProjectByStatus=function filterProjectByStatus(status){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{dispatch(filterProjectBegin());data=initialState.filter(function(project){if(status!=='all'){return project.status===status;}return initialState;});dispatch(filterProjectSuccess(data));}catch(err){dispatch(filterProjectErr(err.toString()));}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var sortingProjectByCategory=function sortingProjectByCategory(sortBy){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:try{dispatch(sortingProjectBegin());data=initialState.sort(function(a,b){return b[sortBy]-a[sortBy];});setTimeout(function(){dispatch(sortingProjectSuccess(data));},500);}catch(err){dispatch(sortingProjectErr(err));}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export{filterSinglePage,filterProjectByStatus,sortingProjectByCategory};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/project/actionCreator.js"],"names":["actions","initialState","singleProjectBegin","singleProjectSuccess","singleProjectErr","filterProjectBegin","filterProjectSuccess","filterProjectErr","sortingProjectBegin","sortingProjectSuccess","sortingProjectErr","filterSinglePage","paramsId","dispatch","data","filter","project","id","parseInt","err","filterProjectByStatus","status","toString","sortingProjectByCategory","sortBy","sort","a","b","setTimeout"],"mappings":"yVAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iCAAzB,C,GAGEC,CAAAA,kB,CAWEF,O,CAXFE,kB,CACAC,oB,CAUEH,O,CAVFG,oB,CACAC,gB,CASEJ,O,CATFI,gB,CAEAC,kB,CAOEL,O,CAPFK,kB,CACAC,oB,CAMEN,O,CANFM,oB,CACAC,gB,CAKEP,O,CALFO,gB,CAEAC,mB,CAGER,O,CAHFQ,mB,CACAC,qB,CAEET,O,CAFFS,qB,CACAC,iB,CACEV,O,CADFU,iB,CAGF,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,QAAQ,CAAI,CACnC,+FAAO,iBAAMC,QAAN,2HACL,GAAI,CACFA,QAAQ,CAACX,kBAAkB,EAAnB,CAAR,CACMY,IAFJ,CAEWb,YAAY,CAACc,MAAb,CAAoB,SAAAC,OAAO,CAAI,CAC1C,MAAOA,CAAAA,OAAO,CAACC,EAAR,GAAeC,QAAQ,CAACN,QAAD,CAAW,EAAX,CAA9B,CACD,CAFY,CAFX,CAKFC,QAAQ,CAACV,oBAAoB,CAACW,IAAD,CAArB,CAAR,CACD,CAAC,MAAOK,GAAP,CAAY,CACZN,QAAQ,CAACT,gBAAgB,CAACe,GAAD,CAAjB,CAAR,CACD,CATI,sDAAP,+DAWD,CAZD,CAcA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAC,MAAM,CAAI,CACtC,gGAAO,kBAAMR,QAAN,+HACL,GAAI,CACFA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR,CACMS,IAFJ,CAEWb,YAAY,CAACc,MAAb,CAAoB,SAAAC,OAAO,CAAI,CAC1C,GAAIK,MAAM,GAAK,KAAf,CAAsB,CACpB,MAAOL,CAAAA,OAAO,CAACK,MAAR,GAAmBA,MAA1B,CACD,CACD,MAAOpB,CAAAA,YAAP,CACD,CALY,CAFX,CAQFY,QAAQ,CAACP,oBAAoB,CAACQ,IAAD,CAArB,CAAR,CACD,CAAC,MAAOK,GAAP,CAAY,CACZN,QAAQ,CAACN,gBAAgB,CAACY,GAAG,CAACG,QAAJ,EAAD,CAAjB,CAAR,CACD,CAZI,wDAAP,iEAcD,CAfD,CAiBA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAAC,MAAM,CAAI,CACzC,gGAAO,kBAAMX,QAAN,+HACL,GAAI,CACFA,QAAQ,CAACL,mBAAmB,EAApB,CAAR,CACMM,IAFJ,CAEWb,YAAY,CAACwB,IAAb,CAAkB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACvC,MAAOA,CAAAA,CAAC,CAACH,MAAD,CAAD,CAAYE,CAAC,CAACF,MAAD,CAApB,CACD,CAFY,CAFX,CAMFI,UAAU,CAAC,UAAM,CACff,QAAQ,CAACJ,qBAAqB,CAACK,IAAD,CAAtB,CAAR,CACD,CAFS,CAEP,GAFO,CAAV,CAGD,CAAC,MAAOK,GAAP,CAAY,CACZN,QAAQ,CAACH,iBAAiB,CAACS,GAAD,CAAlB,CAAR,CACD,CAZI,wDAAP,iEAcD,CAfD,CAiBA,OAASR,gBAAT,CAA2BS,qBAA3B,CAAkDG,wBAAlD","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/projectData.json';\r\n\r\nconst {\r\n  singleProjectBegin,\r\n  singleProjectSuccess,\r\n  singleProjectErr,\r\n\r\n  filterProjectBegin,\r\n  filterProjectSuccess,\r\n  filterProjectErr,\r\n\r\n  sortingProjectBegin,\r\n  sortingProjectSuccess,\r\n  sortingProjectErr,\r\n} = actions;\r\n\r\nconst filterSinglePage = paramsId => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(singleProjectBegin());\r\n      const data = initialState.filter(project => {\r\n        return project.id === parseInt(paramsId, 10);\r\n      });\r\n      dispatch(singleProjectSuccess(data));\r\n    } catch (err) {\r\n      dispatch(singleProjectErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst filterProjectByStatus = status => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(filterProjectBegin());\r\n      const data = initialState.filter(project => {\r\n        if (status !== 'all') {\r\n          return project.status === status;\r\n        }\r\n        return initialState;\r\n      });\r\n      dispatch(filterProjectSuccess(data));\r\n    } catch (err) {\r\n      dispatch(filterProjectErr(err.toString()));\r\n    }\r\n  };\r\n};\r\n\r\nconst sortingProjectByCategory = sortBy => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(sortingProjectBegin());\r\n      const data = initialState.sort((a, b) => {\r\n        return b[sortBy] - a[sortBy];\r\n      });\r\n\r\n      setTimeout(() => {\r\n        dispatch(sortingProjectSuccess(data));\r\n      }, 500);\r\n    } catch (err) {\r\n      dispatch(sortingProjectErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { filterSinglePage, filterProjectByStatus, sortingProjectByCategory };\r\n"]},"metadata":{},"sourceType":"module"}