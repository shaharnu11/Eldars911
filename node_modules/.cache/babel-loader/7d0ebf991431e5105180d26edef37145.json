{"ast":null,"code":"import _toConsumableArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import actions from'./actions';import initialState from'../../demoData/friends.json';var profileFriendsBegin=actions.profileFriendsBegin,profileFriendsSuccess=actions.profileFriendsSuccess,profileFriendsErr=actions.profileFriendsErr,postDataBegin=actions.postDataBegin,postDataSuccess=actions.postDataSuccess,postDataErr=actions.postDataErr;var profileFriendsChangeStatus=function profileFriendsChangeStatus(key){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch(profileFriendsBegin());initialState.map(function(friend){if(friend.key===key){return friend.status?friend.status=false:friend.status=true;}return dispatch(profileFriendsSuccess(initialState));});}catch(err){dispatch(profileFriendsErr(err));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var submitPost=function submitPost(data){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{dispatch(postDataBegin());dispatch(postDataSuccess(data));}catch(err){dispatch(postDataErr(err));}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var likeUpdate=function likeUpdate(data,key){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:try{dispatch(postDataBegin());data.map(function(post){if(post.postId===key){return post.like+=1;}return dispatch(postDataSuccess(data));});}catch(err){dispatch(postDataErr(err));}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};var commentUpdate=function commentUpdate(data,key,comment){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:try{dispatch(postDataBegin());data.map(function(post){if(post.postId===key){return post.comment=[].concat(_toConsumableArray(post.comment),[{time:new Date().getTime(),from:'David Warner',text:comment}]);}return dispatch(postDataSuccess(data));});}catch(err){dispatch(postDataErr(err));}case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};var postDelete=function postDelete(data,key){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var posts;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;dispatch(postDataBegin());posts=data.filter(function(post){return post.postId!==key;});return _context5.abrupt(\"return\",dispatch(postDataSuccess(posts)));case 6:_context5.prev=6;_context5.t0=_context5[\"catch\"](0);dispatch(postDataErr(_context5.t0));case 9:case\"end\":return _context5.stop();}}},_callee5,null,[[0,6]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export{profileFriendsChangeStatus,submitPost,likeUpdate,commentUpdate,postDelete};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js"],"names":["actions","initialState","profileFriendsBegin","profileFriendsSuccess","profileFriendsErr","postDataBegin","postDataSuccess","postDataErr","profileFriendsChangeStatus","key","dispatch","map","friend","status","err","submitPost","data","likeUpdate","post","postId","like","commentUpdate","comment","time","Date","getTime","from","text","postDelete","posts","filter"],"mappings":"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","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/friends.json';\r\n\r\nconst {\r\n  profileFriendsBegin,\r\n  profileFriendsSuccess,\r\n  profileFriendsErr,\r\n  postDataBegin,\r\n  postDataSuccess,\r\n  postDataErr,\r\n} = actions;\r\n\r\nconst profileFriendsChangeStatus = key => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(profileFriendsBegin());\r\n      initialState.map(friend => {\r\n        if (friend.key === key) {\r\n          return friend.status ? (friend.status = false) : (friend.status = true);\r\n        }\r\n        return dispatch(profileFriendsSuccess(initialState));\r\n      });\r\n    } catch (err) {\r\n      dispatch(profileFriendsErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst submitPost = data => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      dispatch(postDataSuccess(data));\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst likeUpdate = (data, key) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      data.map(post => {\r\n        if (post.postId === key) {\r\n          return (post.like += 1);\r\n        }\r\n        return dispatch(postDataSuccess(data));\r\n      });\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst commentUpdate = (data, key, comment) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      data.map(post => {\r\n        if (post.postId === key) {\r\n          return (post.comment = [\r\n            ...post.comment,\r\n            {\r\n              time: new Date().getTime(),\r\n              from: 'David Warner',\r\n              text: comment,\r\n            },\r\n          ]);\r\n        }\r\n        return dispatch(postDataSuccess(data));\r\n      });\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst postDelete = (data, key) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      const posts = data.filter(post => {\r\n        return post.postId !== key;\r\n      });\r\n      return dispatch(postDataSuccess(posts));\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { profileFriendsChangeStatus, submitPost, likeUpdate, commentUpdate, postDelete };\r\n"]},"metadata":{},"sourceType":"module"}