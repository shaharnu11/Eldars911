{"ast":null,"code":"import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';import{getItem}from'../../utility/localStorageControl';var API_ENDPOINT=process.env.REACT_APP_API_ENDPOINT;var authHeader=function authHeader(){return{Authorization:\"Bearer \".concat(getItem('access_token'))};};var client=axios.create({baseURL:API_ENDPOINT,headers:{Authorization:\"Bearer \".concat(getItem('access_token')),'Content-Type':'application/json'}});var DataService=/*#__PURE__*/function(){function DataService(){_classCallCheck(this,DataService);}_createClass(DataService,null,[{key:\"get\",value:function get(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return client({method:'GET',url:path,headers:_objectSpread({},authHeader())});}},{key:\"post\",value:function post(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var optionalHeader=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return client({method:'POST',url:path,data:data,headers:_objectSpread(_objectSpread({},authHeader()),optionalHeader)});}},{key:\"patch\",value:function patch(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return client({method:'PATCH',url:path,data:JSON.stringify(data),headers:_objectSpread({},authHeader())});}},{key:\"put\",value:function put(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return client({method:'PUT',url:path,data:JSON.stringify(data),headers:_objectSpread({},authHeader())});}}]);return DataService;}();/**\r\n * axios interceptors runs before and after a request, letting the developer modify req,req more\r\n * For more details on axios interceptor see https://github.com/axios/axios#interceptors\r\n */client.interceptors.request.use(function(config){// do something before executing the request\n// For example tag along the bearer access token to request header or set a cookie\nvar requestConfig=config;var headers=config.headers;requestConfig.headers=_objectSpread(_objectSpread({},headers),{},{Authorization:\"Bearer \".concat(getItem('access_token'))});return requestConfig;});client.interceptors.response.use(function(response){return response;},function(error){/**\r\n     * Do something in case the response returns an error code [3**, 4**, 5**] etc\r\n     * For example, on token expiration retrieve a new access token, retry a failed request etc\r\n     */var response=error.response;var originalRequest=error.config;if(response){if(response.status===500){// do something here\n}else{return originalRequest;}}return Promise.reject(error);});export{DataService};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/config/dataService/dataService.js"],"names":["axios","getItem","API_ENDPOINT","process","env","REACT_APP_API_ENDPOINT","authHeader","Authorization","client","create","baseURL","headers","DataService","path","method","url","data","optionalHeader","JSON","stringify","interceptors","request","use","config","requestConfig","response","error","originalRequest","status","Promise","reject"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { getItem } from '../../utility/localStorageControl';\r\n\r\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\r\n\r\nconst authHeader = () => ({\r\n  Authorization: `Bearer ${getItem('access_token')}`,\r\n});\r\n\r\nconst client = axios.create({\r\n  baseURL: API_ENDPOINT,\r\n  headers: {\r\n    Authorization: `Bearer ${getItem('access_token')}`,\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nclass DataService {\r\n  static get(path = '') {\r\n    return client({\r\n      method: 'GET',\r\n      url: path,\r\n      headers: { ...authHeader() },\r\n    });\r\n  }\r\n\r\n  static post(path = '', data = {}, optionalHeader = {}) {\r\n    return client({\r\n      method: 'POST',\r\n      url: path,\r\n      data,\r\n      headers: { ...authHeader(), ...optionalHeader },\r\n    });\r\n  }\r\n\r\n  static patch(path = '', data = {}) {\r\n    return client({\r\n      method: 'PATCH',\r\n      url: path,\r\n      data: JSON.stringify(data),\r\n      headers: { ...authHeader() },\r\n    });\r\n  }\r\n\r\n  static put(path = '', data = {}) {\r\n    return client({\r\n      method: 'PUT',\r\n      url: path,\r\n      data: JSON.stringify(data),\r\n      headers: { ...authHeader() },\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * axios interceptors runs before and after a request, letting the developer modify req,req more\r\n * For more details on axios interceptor see https://github.com/axios/axios#interceptors\r\n */\r\nclient.interceptors.request.use(config => {\r\n  // do something before executing the request\r\n  // For example tag along the bearer access token to request header or set a cookie\r\n  const requestConfig = config;\r\n  const { headers } = config;\r\n  requestConfig.headers = { ...headers, Authorization: `Bearer ${getItem('access_token')}` };\r\n\r\n  return requestConfig;\r\n});\r\n\r\nclient.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    /**\r\n     * Do something in case the response returns an error code [3**, 4**, 5**] etc\r\n     * For example, on token expiration retrieve a new access token, retry a failed request etc\r\n     */\r\n    const { response } = error;\r\n    const originalRequest = error.config;\r\n    if (response) {\r\n      if (response.status === 500) {\r\n        // do something here\r\n      } else {\r\n        return originalRequest;\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  },\r\n);\r\nexport { DataService };\r\n"]},"metadata":{},"sourceType":"module"}