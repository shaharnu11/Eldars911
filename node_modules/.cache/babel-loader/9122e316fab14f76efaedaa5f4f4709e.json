{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import actions from'./actions';import initialState from'../../demoData/orders.json';var filterOrderBegin=actions.filterOrderBegin,filterOrderSuccess=actions.filterOrderSuccess,filterOrderErr=actions.filterOrderErr;var orderFilter=function orderFilter(column,value){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch(filterOrderBegin());data=initialState.filter(function(item){if(value!==''){return item[column]===value;}return item;});dispatch(filterOrderSuccess(data));}catch(err){dispatch(filterOrderErr(err));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export{orderFilter};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/orders/actionCreator.js"],"names":["actions","initialState","filterOrderBegin","filterOrderSuccess","filterOrderErr","orderFilter","column","value","dispatch","data","filter","item","err"],"mappings":"yVAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,C,GAEQC,CAAAA,gB,CAAyDF,O,CAAzDE,gB,CAAkBC,kB,CAAuCH,O,CAAvCG,kB,CAAoBC,c,CAAmBJ,O,CAAnBI,c,CAE9C,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAASC,KAAT,CAAmB,CACrC,+FAAO,iBAAMC,QAAN,2HACL,GAAI,CACFA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR,CAEMO,IAHJ,CAGWR,YAAY,CAACS,MAAb,CAAoB,SAAAC,IAAI,CAAI,CACvC,GAAIJ,KAAK,GAAK,EAAd,CAAkB,CAChB,MAAOI,CAAAA,IAAI,CAACL,MAAD,CAAJ,GAAiBC,KAAxB,CACD,CACD,MAAOI,CAAAA,IAAP,CACD,CALY,CAHX,CAUFH,QAAQ,CAACL,kBAAkB,CAACM,IAAD,CAAnB,CAAR,CACD,CAAC,MAAOG,GAAP,CAAY,CACZJ,QAAQ,CAACJ,cAAc,CAACQ,GAAD,CAAf,CAAR,CACD,CAdI,sDAAP,+DAgBD,CAjBD,CAmBA,OAASP,WAAT","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/orders.json';\r\n\r\nconst { filterOrderBegin, filterOrderSuccess, filterOrderErr } = actions;\r\n\r\nconst orderFilter = (column, value) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(filterOrderBegin());\r\n\r\n      const data = initialState.filter(item => {\r\n        if (value !== '') {\r\n          return item[column] === value;\r\n        }\r\n        return item;\r\n      });\r\n\r\n      dispatch(filterOrderSuccess(data));\r\n    } catch (err) {\r\n      dispatch(filterOrderErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { orderFilter };\r\n"]},"metadata":{},"sourceType":"module"}