{"ast":null,"code":"var _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Chart } from 'react-google-charts';\nimport PropTypes from 'prop-types';\n\nconst GoogleBasicBarChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      hAxis: {\n        title: 'Total',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleBasicBarChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst GoogleMaterialBarChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    subtitle\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"Bar\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      chart: {\n        title,\n        subtitle\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleMaterialBarChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired\n};\n\nconst GoogleStackedChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      isStacked: true,\n      hAxis: {\n        title: 'Total',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleStackedChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst GoogleCustomColorChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea,\n    colors\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"BarChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      colors,\n      hAxis: {\n        title: 'Total',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleCustomColorChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired,\n  colors: PropTypes.array.isRequired\n};\n\nconst GoogleComboChart = props => {\n  const {\n    width,\n    height,\n    data,\n    title,\n    chartArea,\n    colors\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"ComboChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      colors,\n      seriesType: 'bars',\n      series: {\n        5: {\n          type: 'line'\n        }\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleComboChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired,\n  colors: PropTypes.array.isRequired\n};\n\nconst GoogleLineChart = props => {\n  const {\n    width,\n    height,\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      hAxis: {\n        title: 'Time'\n      },\n      vAxis: {\n        title: 'Popularity'\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '6'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleLineChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nconst GoogleMultiLineChart = props => {\n  const {\n    width,\n    height,\n    data\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      hAxis: {\n        title: 'Time'\n      },\n      vAxis: {\n        title: 'Popularity'\n      },\n      series: {\n        0: {\n          curveType: 'function'\n        },\n        1: {\n          curveType: 'function'\n        }\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '7'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleMultiLineChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\n\nconst GoogleOrgChart = props => {\n  const {\n    width,\n    height,\n    data,\n    chartArea\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"OrgChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      chartArea: {\n        width: chartArea\n      },\n      allowHtml: true\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleOrgChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst GoogleBasicPieChart = props => {\n  const {\n    width,\n    height,\n    data,\n    chartArea,\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      }\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogleBasicPieChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\n\nconst Google3dPieChart = props => {\n  const {\n    width,\n    height,\n    data,\n    chartArea,\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(Chart, {\n    width: width,\n    height: height,\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, \"Loading Chart\"),\n    data: data,\n    options: {\n      title,\n      chartArea: {\n        width: chartArea\n      },\n      is3D: true\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  });\n};\n\nGoogle3dPieChart.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  chartArea: PropTypes.string.isRequired\n};\nexport { Google3dPieChart, GoogleBasicPieChart, GoogleOrgChart, GoogleMultiLineChart, GoogleLineChart, GoogleComboChart, GoogleCustomColorChart, GoogleStackedChart, GoogleMaterialBarChart, GoogleBasicBarChart };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(GoogleBasicBarChart, \"GoogleBasicBarChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleMaterialBarChart, \"GoogleMaterialBarChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleStackedChart, \"GoogleStackedChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleCustomColorChart, \"GoogleCustomColorChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleComboChart, \"GoogleComboChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleLineChart, \"GoogleLineChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleMultiLineChart, \"GoogleMultiLineChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleOrgChart, \"GoogleOrgChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(GoogleBasicPieChart, \"GoogleBasicPieChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n  reactHotLoader.register(Google3dPieChart, \"Google3dPieChart\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js"],"names":["React","Chart","PropTypes","GoogleBasicBarChart","props","width","height","data","title","chartArea","hAxis","minValue","vAxis","propTypes","string","isRequired","arrayOf","object","GoogleMaterialBarChart","subtitle","chart","array","GoogleStackedChart","isStacked","GoogleCustomColorChart","colors","GoogleComboChart","seriesType","series","type","GoogleLineChart","GoogleMultiLineChart","curveType","GoogleOrgChart","allowHtml","GoogleBasicPieChart","Google3dPieChart","is3D"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GoogleBasicBarChart = props => {\r\n  const { width, height, data, title, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '1' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleBasicBarChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleMaterialBarChart = props => {\r\n  const { width, height, data, title, subtitle } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"Bar\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        chart: {\r\n          title,\r\n          subtitle,\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '2' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleMaterialBarChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleStackedChart = props => {\r\n  const { width, height, data, title, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        isStacked: true,\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '3' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleStackedChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleCustomColorChart = props => {\r\n  const { width, height, data, title, chartArea, colors } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        colors,\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '4' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleCustomColorChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleComboChart = props => {\r\n  const { width, height, data, title, chartArea, colors } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"ComboChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        colors,\r\n        seriesType: 'bars',\r\n        series: { 5: { type: 'line' } },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '5' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleComboChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleLineChart = props => {\r\n  const { width, height, data } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        hAxis: {\r\n          title: 'Time',\r\n        },\r\n        vAxis: {\r\n          title: 'Popularity',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '6' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleLineChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleMultiLineChart = props => {\r\n  const { width, height, data } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        hAxis: {\r\n          title: 'Time',\r\n        },\r\n        vAxis: {\r\n          title: 'Popularity',\r\n        },\r\n        series: {\r\n          0: { curveType: 'function' },\r\n          1: { curveType: 'function' },\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '7' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleMultiLineChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleOrgChart = props => {\r\n  const { width, height, data, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"OrgChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        chartArea: { width: chartArea },\r\n        allowHtml: true,\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '8' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleOrgChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleBasicPieChart = props => {\r\n  const { width, height, data, chartArea, title } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '9' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleBasicPieChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Google3dPieChart = props => {\r\n  const { width, height, data, chartArea, title } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        is3D: true,\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '9' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogle3dPieChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nexport {\r\n  Google3dPieChart,\r\n  GoogleBasicPieChart,\r\n  GoogleOrgChart,\r\n  GoogleMultiLineChart,\r\n  GoogleLineChart,\r\n  GoogleComboChart,\r\n  GoogleCustomColorChart,\r\n  GoogleStackedChart,\r\n  GoogleMaterialBarChart,\r\n  GoogleBasicBarChart,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}