{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nvar _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/index/YoutubeSubscribers.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport FeatherIcon from 'feather-icons-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CardBarChart } from '../../style';\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\nimport Heading from '../../../../components/heading/heading';\nimport { ChartjsBarChartTransparent } from '../../../../components/charts/chartjs';\nimport { youtubeSubscribeFilterData, youtubeSubscribeGetData } from '../../../../redux/chartContent/actionCreator';\n\nconst YoutubeSubscribers = () => {\n  const dispatch = useDispatch();\n  const {\n    youtubeSubscribeState,\n    yuIsLoading\n  } = useSelector(state => {\n    return {\n      youtubeSubscribeState: state.chartContent.youtubeSubscribeData,\n      yuIsLoading: state.chartContent.yuLoading\n    };\n  });\n  const [state, setState] = useState({\n    youtubeSubscribeTabActive: 'year'\n  });\n  useEffect(() => {\n    if (youtubeSubscribeGetData) {\n      dispatch(youtubeSubscribeGetData());\n    }\n  }, [dispatch]);\n  const youtubeSubscribeDatasets = youtubeSubscribeState !== null && [{\n    data: youtubeSubscribeState.gained,\n    backgroundColor: '#5F63F280',\n    hoverBackgroundColor: '#5F63F2',\n    label: 'Gained',\n    maxBarThickness: 10,\n    barThickness: 12\n  }, {\n    data: youtubeSubscribeState.lost,\n    backgroundColor: '#FF4D4F80',\n    hoverBackgroundColor: '#FF4D4F',\n    label: 'Lost',\n    maxBarThickness: 10,\n    barThickness: 12\n  }];\n\n  const handleActiveChangeYoutube = value => {\n    setState({ ...state,\n      youtubeSubscribeTabActive: value\n    });\n    dispatch(youtubeSubscribeFilterData(value));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, youtubeSubscribeState !== null && /*#__PURE__*/React.createElement(Cards, {\n    isbutton: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: state.youtubeSubscribeTabActive === 'week' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeYoutube('week'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"Week\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.youtubeSubscribeTabActive === 'month' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeYoutube('month'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: state.youtubeSubscribeTabActive === 'year' ? 'active' : 'deactivate',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => handleActiveChangeYoutube('year'),\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, \"Year\")))),\n    title: \"Youtube Subscribers\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, yuIsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sd-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(CardBarChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-bar-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Subscribers\"), /*#__PURE__*/React.createElement(Heading, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, youtubeSubscribeState.Subscribe, /*#__PURE__*/React.createElement(\"sub\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"arrow-up\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }), youtubeSubscribeState.percent, \"%\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, youtubeSubscribeDatasets && youtubeSubscribeDatasets.map((item, key) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key + 1,\n      className: \"custom-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        backgroundColor: item.hoverBackgroundColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }\n    }), item.label);\n  }))), /*#__PURE__*/React.createElement(ChartjsBarChartTransparent, {\n    labels: youtubeSubscribeState.labels,\n    datasets: youtubeSubscribeDatasets,\n    options: {\n      maintainAspectRatio: true,\n      responsive: true,\n      layout: {\n        padding: {\n          top: 20\n        }\n      },\n      legend: {\n        display: false,\n        position: 'top',\n        align: 'end',\n        labels: {\n          boxWidth: 6,\n          display: true,\n          usePointStyle: true\n        }\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            color: '#e5e9f2',\n            borderDash: [3, 3],\n            zeroLineColor: '#e5e9f2',\n            zeroLineWidth: 1,\n            zeroLineBorderDash: [3, 3]\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 12,\n            fontColor: '#182b49',\n            max: Math.max(...youtubeSubscribeState.gained),\n            stepSize: Math.max(...youtubeSubscribeState.gained) / 5,\n            display: true,\n            min: 0,\n            padding: 10\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            display: true,\n            zeroLineWidth: 2,\n            zeroLineColor: '#fff',\n            color: 'transparent',\n            z: 1\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 12,\n            fontColor: '#182b49',\n            min: 0\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }))));\n};\n\n__signature__(YoutubeSubscribers, \"useDispatch{dispatch}\\nuseSelector{{ youtubeSubscribeState, yuIsLoading }}\\nuseState{[state, setState]({\\r\\n    youtubeSubscribeTabActive: 'year',\\r\\n  })}\\nuseEffect{}\", () => [useDispatch, useSelector]);\n\nconst _default = YoutubeSubscribers;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(YoutubeSubscribers, \"YoutubeSubscribers\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/index/YoutubeSubscribers.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/index/YoutubeSubscribers.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/dashboard/overview/index/YoutubeSubscribers.js"],"names":["React","useState","useEffect","FeatherIcon","Link","useDispatch","useSelector","CardBarChart","Cards","Heading","ChartjsBarChartTransparent","youtubeSubscribeFilterData","youtubeSubscribeGetData","YoutubeSubscribers","dispatch","youtubeSubscribeState","yuIsLoading","state","chartContent","youtubeSubscribeData","yuLoading","setState","youtubeSubscribeTabActive","youtubeSubscribeDatasets","data","gained","backgroundColor","hoverBackgroundColor","label","maxBarThickness","barThickness","lost","handleActiveChangeYoutube","value","display","alignItems","justifyContent","Subscribe","percent","map","item","key","labels","maintainAspectRatio","responsive","layout","padding","top","legend","position","align","boxWidth","usePointStyle","scales","yAxes","gridLines","color","borderDash","zeroLineColor","zeroLineWidth","zeroLineBorderDash","ticks","beginAtZero","fontSize","fontColor","max","Math","stepSize","min","xAxes","z"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Spin } from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CardBarChart } from '../../style';\r\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\r\nimport Heading from '../../../../components/heading/heading';\r\nimport { ChartjsBarChartTransparent } from '../../../../components/charts/chartjs';\r\n\r\nimport { youtubeSubscribeFilterData, youtubeSubscribeGetData } from '../../../../redux/chartContent/actionCreator';\r\n\r\nconst YoutubeSubscribers = () => {\r\n  const dispatch = useDispatch();\r\n  const { youtubeSubscribeState, yuIsLoading } = useSelector(state => {\r\n    return {\r\n      youtubeSubscribeState: state.chartContent.youtubeSubscribeData,\r\n      yuIsLoading: state.chartContent.yuLoading,\r\n    };\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    youtubeSubscribeTabActive: 'year',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (youtubeSubscribeGetData) {\r\n      dispatch(youtubeSubscribeGetData());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const youtubeSubscribeDatasets = youtubeSubscribeState !== null && [\r\n    {\r\n      data: youtubeSubscribeState.gained,\r\n      backgroundColor: '#5F63F280',\r\n      hoverBackgroundColor: '#5F63F2',\r\n      label: 'Gained',\r\n      maxBarThickness: 10,\r\n      barThickness: 12,\r\n    },\r\n    {\r\n      data: youtubeSubscribeState.lost,\r\n      backgroundColor: '#FF4D4F80',\r\n      hoverBackgroundColor: '#FF4D4F',\r\n      label: 'Lost',\r\n      maxBarThickness: 10,\r\n      barThickness: 12,\r\n    },\r\n  ];\r\n\r\n  const handleActiveChangeYoutube = value => {\r\n    setState({\r\n      ...state,\r\n      youtubeSubscribeTabActive: value,\r\n    });\r\n    dispatch(youtubeSubscribeFilterData(value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {youtubeSubscribeState !== null && (\r\n        <Cards\r\n          isbutton={\r\n            <div className=\"card-nav\">\r\n              <ul>\r\n                <li className={state.youtubeSubscribeTabActive === 'week' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeYoutube('week')} to=\"#\">\r\n                    Week\r\n                  </Link>\r\n                </li>\r\n                <li className={state.youtubeSubscribeTabActive === 'month' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeYoutube('month')} to=\"#\">\r\n                    Month\r\n                  </Link>\r\n                </li>\r\n                <li className={state.youtubeSubscribeTabActive === 'year' ? 'active' : 'deactivate'}>\r\n                  <Link onClick={() => handleActiveChangeYoutube('year')} to=\"#\">\r\n                    Year\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          }\r\n          title=\"Youtube Subscribers\"\r\n          size=\"large\"\r\n        >\r\n          {yuIsLoading ? (\r\n            <div className=\"sd-spin\">\r\n              <Spin />\r\n            </div>\r\n          ) : (\r\n            <CardBarChart>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                <div className=\"card-bar-top\">\r\n                  <p>Subscribers</p>\r\n                  <Heading as=\"h3\">\r\n                    {youtubeSubscribeState.Subscribe}\r\n                    <sub>\r\n                      <FeatherIcon icon=\"arrow-up\" size={14} />\r\n                      {youtubeSubscribeState.percent}%\r\n                    </sub>\r\n                  </Heading>\r\n                </div>\r\n                <ul>\r\n                  {youtubeSubscribeDatasets &&\r\n                    youtubeSubscribeDatasets.map((item, key) => {\r\n                      return (\r\n                        <li key={key + 1} className=\"custom-label\">\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: item.hoverBackgroundColor,\r\n                            }}\r\n                          />\r\n                          {item.label}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </div>\r\n\r\n              <ChartjsBarChartTransparent\r\n                labels={youtubeSubscribeState.labels}\r\n                datasets={youtubeSubscribeDatasets}\r\n                options={{\r\n                  maintainAspectRatio: true,\r\n                  responsive: true,\r\n                  layout: {\r\n                    padding: {\r\n                      top: 20,\r\n                    },\r\n                  },\r\n                  legend: {\r\n                    display: false,\r\n                    position: 'top',\r\n                    align: 'end',\r\n                    labels: {\r\n                      boxWidth: 6,\r\n                      display: true,\r\n                      usePointStyle: true,\r\n                    },\r\n                  },\r\n\r\n                  scales: {\r\n                    yAxes: [\r\n                      {\r\n                        gridLines: {\r\n                          color: '#e5e9f2',\r\n                          borderDash: [3, 3],\r\n                          zeroLineColor: '#e5e9f2',\r\n                          zeroLineWidth: 1,\r\n                          zeroLineBorderDash: [3, 3],\r\n                        },\r\n                        ticks: {\r\n                          beginAtZero: true,\r\n                          fontSize: 12,\r\n                          fontColor: '#182b49',\r\n                          max: Math.max(...youtubeSubscribeState.gained),\r\n                          stepSize: Math.max(...youtubeSubscribeState.gained) / 5,\r\n                          display: true,\r\n                          min: 0,\r\n                          padding: 10,\r\n                        },\r\n                      },\r\n                    ],\r\n                    xAxes: [\r\n                      {\r\n                        gridLines: {\r\n                          display: true,\r\n                          zeroLineWidth: 2,\r\n                          zeroLineColor: '#fff',\r\n                          color: 'transparent',\r\n                          z: 1,\r\n                        },\r\n                        ticks: {\r\n                          beginAtZero: true,\r\n                          fontSize: 12,\r\n                          fontColor: '#182b49',\r\n                          min: 0,\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                }}\r\n              />\r\n            </CardBarChart>\r\n          )}\r\n        </Cards>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YoutubeSubscribers;\r\n"]},"metadata":{},"sourceType":"module"}