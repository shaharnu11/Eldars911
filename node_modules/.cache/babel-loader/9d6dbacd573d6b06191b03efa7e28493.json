{"ast":null,"code":"import\"antd/es/avatar/style\";import _Avatar from\"antd/es/avatar\";import _toConsumableArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/list/style\";import _List from\"antd/es/list\";import\"antd/es/comment/style\";import _Comment from\"antd/es/comment\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import React,{useState}from'react';import moment from'moment';import{Button}from'../buttons/buttons';var TextArea=_Input.TextArea;var CommentList=function CommentList(_ref){var comments=_ref.comments;return/*#__PURE__*/React.createElement(_List,{dataSource:comments,header:\"\".concat(comments.length,\" \").concat(comments.length>1?'replies':'reply'),itemLayout:\"horizontal\",renderItem:function renderItem(props){return/*#__PURE__*/React.createElement(_Comment,{props:props});}});};var Editor=function Editor(_ref2){var onChange=_ref2.onChange,onSubmit=_ref2.onSubmit,submitting=_ref2.submitting,value=_ref2.value;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(_Form.Item,null,/*#__PURE__*/React.createElement(TextArea,{rows:4,onChange:onChange,value:value})),/*#__PURE__*/React.createElement(_Form.Item,null,/*#__PURE__*/React.createElement(Button,{htmlType:\"submit\",loading:submitting,onClick:onSubmit,size:\"default\",raised:true,type:\"primary\"},\"Add Comment\")));};var CommentEditor=function CommentEditor(){var _useState=useState({comments:[],submitting:false,value:''}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var handleSubmit=function handleSubmit(){if(!state.value){return;}setState(_objectSpread(_objectSpread({},state),{},{submitting:true}));setTimeout(function(){setState(_objectSpread(_objectSpread({},state),{},{submitting:false,value:'',comments:[{author:'Han Solo',avatar:'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',content:/*#__PURE__*/React.createElement(\"p\",null,state.value),datetime:moment().fromNow()}].concat(_toConsumableArray(state.comments))}));},1000);};var handleChange=function handleChange(e){setState(_objectSpread(_objectSpread({},state),{},{value:e.target.value}));};var comments=state.comments,submitting=state.submitting,value=state.value;return/*#__PURE__*/React.createElement(\"div\",null,comments.length>0&&/*#__PURE__*/React.createElement(CommentList,{comments:comments}),/*#__PURE__*/React.createElement(_Comment,{avatar:/*#__PURE__*/React.createElement(_Avatar,{src:\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",alt:\"Han Solo\"}),content:/*#__PURE__*/React.createElement(Editor,{onChange:handleChange,onSubmit:handleSubmit,submitting:submitting,value:value})}));};export default CommentEditor;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/comments/comments-editor.js"],"names":["React","useState","moment","Button","TextArea","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","CommentEditor","state","setState","handleSubmit","setTimeout","author","avatar","content","datetime","fromNow","handleChange","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Comment, Avatar, Form, List, Input } from 'antd';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../buttons/buttons';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <List\r\n    dataSource={comments}\r\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n    itemLayout=\"horizontal\"\r\n    renderItem={props => <Comment props={props} />}\r\n  />\r\n);\r\n\r\nCommentList.propTypes = {\r\n  comments: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n  <div>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} size=\"default\" raised type=\"primary\">\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </div>\r\n);\r\n\r\nEditor.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  submitting: PropTypes.bool,\r\n  value: PropTypes.string,\r\n};\r\n\r\nconst CommentEditor = () => {\r\n  const [state, setState] = useState({\r\n    comments: [],\r\n    submitting: false,\r\n    value: '',\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    if (!state.value) {\r\n      return;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      submitting: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setState({\r\n        ...state,\r\n        submitting: false,\r\n        value: '',\r\n        comments: [\r\n          {\r\n            author: 'Han Solo',\r\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n            content: <p>{state.value}</p>,\r\n            datetime: moment().fromNow(),\r\n          },\r\n          ...state.comments,\r\n        ],\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setState({\r\n      ...state,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  const { comments, submitting, value } = state;\r\n\r\n  return (\r\n    <div>\r\n      {comments.length > 0 && <CommentList comments={comments} />}\r\n      <Comment\r\n        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" alt=\"Han Solo\" />}\r\n        content={<Editor onChange={handleChange} onSubmit={handleSubmit} submitting={submitting} value={value} />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CommentEditor;\r\n"]},"metadata":{},"sourceType":"module"}