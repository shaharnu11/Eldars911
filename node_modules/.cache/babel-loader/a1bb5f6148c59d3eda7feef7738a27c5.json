{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import actions from'./actions';import initialState from'../../demoData/message-list.json';var readNotificationBegin=actions.readNotificationBegin,readNotificationSuccess=actions.readNotificationSuccess,readNotificationErr=actions.readNotificationErr;var readNotificationList=function readNotificationList(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch(readNotificationBegin());dispatch(readNotificationSuccess(initialState));}catch(err){dispatch(readNotificationErr(err));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export{readNotificationList};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/notification/actionCreator.js"],"names":["actions","initialState","readNotificationBegin","readNotificationSuccess","readNotificationErr","readNotificationList","dispatch","err"],"mappings":"yVAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,C,GAEQC,CAAAA,qB,CAAwEF,O,CAAxEE,qB,CAAuBC,uB,CAAiDH,O,CAAjDG,uB,CAAyBC,mB,CAAwBJ,O,CAAxBI,mB,CAExD,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,+FAAO,iBAAMC,QAAN,kHACL,GAAI,CACFA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR,CACAI,QAAQ,CAACH,uBAAuB,CAACF,YAAD,CAAxB,CAAR,CACD,CAAC,MAAOM,GAAP,CAAY,CACZD,QAAQ,CAACF,mBAAmB,CAACG,GAAD,CAApB,CAAR,CACD,CANI,sDAAP,+DAQD,CATD,CAWA,OAASF,oBAAT","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/message-list.json';\r\n\r\nconst { readNotificationBegin, readNotificationSuccess, readNotificationErr } = actions;\r\n\r\nconst readNotificationList = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(readNotificationBegin());\r\n      dispatch(readNotificationSuccess(initialState));\r\n    } catch (err) {\r\n      dispatch(readNotificationErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { readNotificationList };\r\n"]},"metadata":{},"sourceType":"module"}