{"ast":null,"code":"import _slicedToArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/forbid-prop-types */import React,{useState,useEffect}from'react';import{CheckboxStyle}from'./style';var CheckboxGroup=CheckboxStyle.Group;var Checkbox=function Checkbox(props){var item=props.item,defaultSelect=props.defaultSelect,multiple=props.multiple,onChange=props.onChange,onChangeTriger=props.onChangeTriger,defaultChecked=props.defaultChecked,disabled=props.disabled,children=props.children;var plainOptions=item;var _useState=useState({checkedList:defaultSelect,indeterminate:true,checkAll:false}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var onMultiChange=function onMultiChange(checkedList){setState({checkedList:checkedList,indeterminate:!!checkedList.length&&checkedList.length<plainOptions.length,checkAll:checkedList.length===plainOptions.length});};useEffect(function(){if(onChangeTriger){onChangeTriger(state.checkedList);}// eslint-disable-next-line\n},[state]);var onCheckAllChange=function onCheckAllChange(e){setState({checkedList:e.target.checked?plainOptions:[],indeterminate:false,checkAll:e.target.checked});};var onChecked=function onChecked(e){return onChange(e.target.checked,e.target.value);};return!multiple?/*#__PURE__*/React.createElement(CheckboxStyle,{onChange:onChecked,defaultChecked:defaultChecked,disabled:disabled},children):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{borderBottom:'1px solid #E9E9E9'}},/*#__PURE__*/React.createElement(CheckboxStyle,{indeterminate:state.indeterminate,onChange:onCheckAllChange,checked:state.checkAll},\"Check all\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(CheckboxGroup,{options:plainOptions,value:state.checkedList,onChange:onMultiChange}));};export{Checkbox,CheckboxGroup};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/checkbox/checkbox.js"],"names":["React","useState","useEffect","CheckboxStyle","CheckboxGroup","Group","Checkbox","props","item","defaultSelect","multiple","onChange","onChangeTriger","defaultChecked","disabled","children","plainOptions","checkedList","indeterminate","checkAll","state","setState","onMultiChange","length","onCheckAllChange","e","target","checked","onChecked","value","borderBottom"],"mappings":"8KAAA,4CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,aAAT,KAA8B,SAA9B,CAEA,GAAMC,CAAAA,aAAa,CAAGD,aAAa,CAACE,KAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,IAChBC,CAAAA,IADgB,CACgFD,KADhF,CAChBC,IADgB,CACVC,aADU,CACgFF,KADhF,CACVE,aADU,CACKC,QADL,CACgFH,KADhF,CACKG,QADL,CACeC,QADf,CACgFJ,KADhF,CACeI,QADf,CACyBC,cADzB,CACgFL,KADhF,CACyBK,cADzB,CACyCC,cADzC,CACgFN,KADhF,CACyCM,cADzC,CACyDC,QADzD,CACgFP,KADhF,CACyDO,QADzD,CACmEC,QADnE,CACgFR,KADhF,CACmEQ,QADnE,CAExB,GAAMC,CAAAA,YAAY,CAAGR,IAArB,CAFwB,cAIEP,QAAQ,CAAC,CACjCgB,WAAW,CAAER,aADoB,CAEjCS,aAAa,CAAE,IAFkB,CAGjCC,QAAQ,CAAE,KAHuB,CAAD,CAJV,wCAIjBC,KAJiB,eAIVC,QAJU,eAUxB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAL,WAAW,CAAI,CACnCI,QAAQ,CAAC,CACPJ,WAAW,CAAXA,WADO,CAEPC,aAAa,CAAE,CAAC,CAACD,WAAW,CAACM,MAAd,EAAwBN,WAAW,CAACM,MAAZ,CAAqBP,YAAY,CAACO,MAFlE,CAGPJ,QAAQ,CAAEF,WAAW,CAACM,MAAZ,GAAuBP,YAAY,CAACO,MAHvC,CAAD,CAAR,CAKD,CAND,CAQArB,SAAS,CAAC,UAAM,CACd,GAAIU,cAAJ,CAAoB,CAClBA,cAAc,CAACQ,KAAK,CAACH,WAAP,CAAd,CACD,CACD;AACD,CALQ,CAKN,CAACG,KAAD,CALM,CAAT,CAOA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,CAAC,CAAI,CAC5BJ,QAAQ,CAAC,CACPJ,WAAW,CAAEQ,CAAC,CAACC,MAAF,CAASC,OAAT,CAAmBX,YAAnB,CAAkC,EADxC,CAEPE,aAAa,CAAE,KAFR,CAGPC,QAAQ,CAAEM,CAAC,CAACC,MAAF,CAASC,OAHZ,CAAD,CAAR,CAKD,CAND,CAQA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAH,CAAC,CAAI,CACrB,MAAOd,CAAAA,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASC,OAAV,CAAmBF,CAAC,CAACC,MAAF,CAASG,KAA5B,CAAf,CACD,CAFD,CAIA,MAAO,CAACnB,QAAD,cACL,oBAAC,aAAD,EAAe,QAAQ,CAAEkB,SAAzB,CAAoC,cAAc,CAAEf,cAApD,CAAoE,QAAQ,CAAEC,QAA9E,EACGC,QADH,CADK,cAKL,4CACE,2BAAK,KAAK,CAAE,CAAEe,YAAY,CAAE,mBAAhB,CAAZ,eACE,oBAAC,aAAD,EAAe,aAAa,CAAEV,KAAK,CAACF,aAApC,CAAmD,QAAQ,CAAEM,gBAA7D,CAA+E,OAAO,CAAEJ,KAAK,CAACD,QAA9F,cADF,CADF,cAME,8BANF,cAOE,oBAAC,aAAD,EAAe,OAAO,CAAEH,YAAxB,CAAsC,KAAK,CAAEI,KAAK,CAACH,WAAnD,CAAgE,QAAQ,CAAEK,aAA1E,EAPF,CALF,CAeD,CApDD,CAiEA,OAAShB,QAAT,CAAmBF,aAAnB","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CheckboxStyle } from './style';\r\n\r\nconst CheckboxGroup = CheckboxStyle.Group;\r\n\r\nconst Checkbox = props => {\r\n  const { item, defaultSelect, multiple, onChange, onChangeTriger, defaultChecked, disabled, children } = props;\r\n  const plainOptions = item;\r\n\r\n  const [state, setState] = useState({\r\n    checkedList: defaultSelect,\r\n    indeterminate: true,\r\n    checkAll: false,\r\n  });\r\n\r\n  const onMultiChange = checkedList => {\r\n    setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\r\n      checkAll: checkedList.length === plainOptions.length,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onChangeTriger) {\r\n      onChangeTriger(state.checkedList);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [state]);\r\n\r\n  const onCheckAllChange = e => {\r\n    setState({\r\n      checkedList: e.target.checked ? plainOptions : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const onChecked = e => {\r\n    return onChange(e.target.checked, e.target.value);\r\n  };\r\n\r\n  return !multiple ? (\r\n    <CheckboxStyle onChange={onChecked} defaultChecked={defaultChecked} disabled={disabled}>\r\n      {children}\r\n    </CheckboxStyle>\r\n  ) : (\r\n    <div>\r\n      <div style={{ borderBottom: '1px solid #E9E9E9' }}>\r\n        <CheckboxStyle indeterminate={state.indeterminate} onChange={onCheckAllChange} checked={state.checkAll}>\r\n          Check all\r\n        </CheckboxStyle>\r\n      </div>\r\n      <br />\r\n      <CheckboxGroup options={plainOptions} value={state.checkedList} onChange={onMultiChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  item: PropTypes.arrayOf(PropTypes.string),\r\n  defaultSelect: PropTypes.array,\r\n  multiple: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  onChangeTriger: PropTypes.func,\r\n  defaultChecked: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\r\n};\r\n\r\nexport { Checkbox, CheckboxGroup };\r\n"]},"metadata":{},"sourceType":"module"}