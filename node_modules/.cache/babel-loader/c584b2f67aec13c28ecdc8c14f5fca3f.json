{"ast":null,"code":"/* eslint-disable react/forbid-prop-types */import React from'react';import{Chart}from'react-google-charts';var GoogleBasicBarChart=function GoogleBasicBarChart(props){var width=props.width,height=props.height,data=props.data,title=props.title,chartArea=props.chartArea;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"BarChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{title:title,chartArea:{width:chartArea},hAxis:{title:'Total',minValue:0},vAxis:{title:'City'}}// For tests\n,rootProps:{'data-testid':'1'}});};var GoogleMaterialBarChart=function GoogleMaterialBarChart(props){var width=props.width,height=props.height,data=props.data,title=props.title,subtitle=props.subtitle;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"Bar\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{chart:{title:title,subtitle:subtitle}}// For tests\n,rootProps:{'data-testid':'2'}});};var GoogleStackedChart=function GoogleStackedChart(props){var width=props.width,height=props.height,data=props.data,title=props.title,chartArea=props.chartArea;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"BarChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{title:title,chartArea:{width:chartArea},isStacked:true,hAxis:{title:'Total',minValue:0},vAxis:{title:'City'}}// For tests\n,rootProps:{'data-testid':'3'}});};var GoogleCustomColorChart=function GoogleCustomColorChart(props){var width=props.width,height=props.height,data=props.data,title=props.title,chartArea=props.chartArea,colors=props.colors;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"BarChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{title:title,chartArea:{width:chartArea},colors:colors,hAxis:{title:'Total',minValue:0},vAxis:{title:'City'}}// For tests\n,rootProps:{'data-testid':'4'}});};var GoogleComboChart=function GoogleComboChart(props){var width=props.width,height=props.height,data=props.data,title=props.title,chartArea=props.chartArea,colors=props.colors;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"ComboChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{title:title,chartArea:{width:chartArea},colors:colors,seriesType:'bars',series:{5:{type:'line'}}}// For tests\n,rootProps:{'data-testid':'5'}});};var GoogleLineChart=function GoogleLineChart(props){var width=props.width,height=props.height,data=props.data;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"LineChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{hAxis:{title:'Time'},vAxis:{title:'Popularity'}}// For tests\n,rootProps:{'data-testid':'6'}});};var GoogleMultiLineChart=function GoogleMultiLineChart(props){var width=props.width,height=props.height,data=props.data;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"LineChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{hAxis:{title:'Time'},vAxis:{title:'Popularity'},series:{0:{curveType:'function'},1:{curveType:'function'}}}// For tests\n,rootProps:{'data-testid':'7'}});};var GoogleOrgChart=function GoogleOrgChart(props){var width=props.width,height=props.height,data=props.data,chartArea=props.chartArea;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"OrgChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{chartArea:{width:chartArea},allowHtml:true}// For tests\n,rootProps:{'data-testid':'8'}});};var GoogleBasicPieChart=function GoogleBasicPieChart(props){var width=props.width,height=props.height,data=props.data,chartArea=props.chartArea,title=props.title;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{title:title,chartArea:{width:chartArea}}// For tests\n,rootProps:{'data-testid':'9'}});};var Google3dPieChart=function Google3dPieChart(props){var width=props.width,height=props.height,data=props.data,chartArea=props.chartArea,title=props.title;return/*#__PURE__*/React.createElement(Chart,{width:width,height:height,chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:data,options:{title:title,chartArea:{width:chartArea},is3D:true}// For tests\n,rootProps:{'data-testid':'9'}});};export{Google3dPieChart,GoogleBasicPieChart,GoogleOrgChart,GoogleMultiLineChart,GoogleLineChart,GoogleComboChart,GoogleCustomColorChart,GoogleStackedChart,GoogleMaterialBarChart,GoogleBasicBarChart};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/charts/google-chart.js"],"names":["React","Chart","GoogleBasicBarChart","props","width","height","data","title","chartArea","hAxis","minValue","vAxis","GoogleMaterialBarChart","subtitle","chart","GoogleStackedChart","isStacked","GoogleCustomColorChart","colors","GoogleComboChart","seriesType","series","type","GoogleLineChart","GoogleMultiLineChart","curveType","GoogleOrgChart","allowHtml","GoogleBasicPieChart","Google3dPieChart","is3D"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GoogleBasicBarChart = props => {\r\n  const { width, height, data, title, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '1' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleBasicBarChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleMaterialBarChart = props => {\r\n  const { width, height, data, title, subtitle } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"Bar\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        chart: {\r\n          title,\r\n          subtitle,\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '2' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleMaterialBarChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleStackedChart = props => {\r\n  const { width, height, data, title, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        isStacked: true,\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '3' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleStackedChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleCustomColorChart = props => {\r\n  const { width, height, data, title, chartArea, colors } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"BarChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        colors,\r\n        hAxis: {\r\n          title: 'Total',\r\n          minValue: 0,\r\n        },\r\n        vAxis: {\r\n          title: 'City',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '4' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleCustomColorChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleComboChart = props => {\r\n  const { width, height, data, title, chartArea, colors } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"ComboChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        colors,\r\n        seriesType: 'bars',\r\n        series: { 5: { type: 'line' } },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '5' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleComboChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleLineChart = props => {\r\n  const { width, height, data } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        hAxis: {\r\n          title: 'Time',\r\n        },\r\n        vAxis: {\r\n          title: 'Popularity',\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '6' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleLineChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleMultiLineChart = props => {\r\n  const { width, height, data } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"LineChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        hAxis: {\r\n          title: 'Time',\r\n        },\r\n        vAxis: {\r\n          title: 'Popularity',\r\n        },\r\n        series: {\r\n          0: { curveType: 'function' },\r\n          1: { curveType: 'function' },\r\n        },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '7' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleMultiLineChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nconst GoogleOrgChart = props => {\r\n  const { width, height, data, chartArea } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"OrgChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        chartArea: { width: chartArea },\r\n        allowHtml: true,\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '8' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleOrgChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst GoogleBasicPieChart = props => {\r\n  const { width, height, data, chartArea, title } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '9' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogleBasicPieChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Google3dPieChart = props => {\r\n  const { width, height, data, chartArea, title } = props;\r\n  return (\r\n    <Chart\r\n      width={width}\r\n      height={height}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={data}\r\n      options={{\r\n        title,\r\n        chartArea: { width: chartArea },\r\n        is3D: true,\r\n      }}\r\n      // For tests\r\n      rootProps={{ 'data-testid': '9' }}\r\n    />\r\n  );\r\n};\r\n\r\nGoogle3dPieChart.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  chartArea: PropTypes.string.isRequired,\r\n};\r\n\r\nexport {\r\n  Google3dPieChart,\r\n  GoogleBasicPieChart,\r\n  GoogleOrgChart,\r\n  GoogleMultiLineChart,\r\n  GoogleLineChart,\r\n  GoogleComboChart,\r\n  GoogleCustomColorChart,\r\n  GoogleStackedChart,\r\n  GoogleMaterialBarChart,\r\n  GoogleBasicBarChart,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}