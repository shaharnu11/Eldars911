{"ast":null,"code":"import\"antd/es/badge/style\";import _Badge from\"antd/es/badge\";import React from'react';import{useSelector,useDispatch}from'react-redux';import{NavLink}from'react-router-dom';import moment from'moment';import FeatherIcon from'feather-icons-react';import{BlockSpan,ChatWrapper}from'../style';import{textRefactor}from'../../../components/utilities/utilities';import{filterSinglepageGroup}from'../../../redux/chat/actionCreator';import{Button}from'../../../components/buttons/buttons';var GroupChat=function GroupChat(_ref){var match=_ref.match;var chatData=useSelector(function(state){return state.groupChat.data;});var dispatch=useDispatch();var dataFiltering=function dataFiltering(id){dispatch(filterSinglepageGroup(id));};return/*#__PURE__*/React.createElement(ChatWrapper,null,/*#__PURE__*/React.createElement(\"div\",{className:\"create-action\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-add\",size:\"default\",type:\"default\",shape:\"circle\",block:true},/*#__PURE__*/React.createElement(FeatherIcon,{icon:\"edit\",size:14}),\"Create New Group\")),/*#__PURE__*/React.createElement(\"ul\",null,chatData&&chatData.sort(function(a,b){return b.time-a.time;}).map(function(user,key){var groupName=user.groupName,content=user.content,id=user.id,img=user.img;var time=content[content.length-1].time;var same=moment(time).format('MM-DD-YYYY')===moment().format('MM-DD-YYYY');return/*#__PURE__*/React.createElement(\"li\",{key:id,className:\"chat-link-signle\"},/*#__PURE__*/React.createElement(NavLink,{onClick:function onClick(){return dataFiltering(id);},to:\"\".concat(match.path,\"/\").concat(id)},/*#__PURE__*/React.createElement(\"div\",{className:\"author-figure\"},/*#__PURE__*/React.createElement(\"img\",{src:require(\"../../../static/img/chat-author/\".concat(img)),alt:\"\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"author-info\"},/*#__PURE__*/React.createElement(BlockSpan,{className:\"author-name\"},groupName),/*#__PURE__*/React.createElement(BlockSpan,{className:\"author-chatText\"},textRefactor(content[content.length-1].content,5))),/*#__PURE__*/React.createElement(\"div\",{className:\"author-chatMeta\"},/*#__PURE__*/React.createElement(BlockSpan,null,same?moment(id).format('hh:mm A'):moment(id).format('dddd')),key<=1&&/*#__PURE__*/React.createElement(_Badge,{className:\"badge-success\",count:3}))));})));};export default GroupChat;","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/chat/overview/GroupChat.js"],"names":["React","useSelector","useDispatch","NavLink","moment","FeatherIcon","BlockSpan","ChatWrapper","textRefactor","filterSinglepageGroup","Button","GroupChat","match","chatData","state","groupChat","data","dispatch","dataFiltering","id","sort","a","b","time","map","user","key","groupName","content","img","length","same","format","path","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge } from 'antd';\r\nimport { BlockSpan, ChatWrapper } from '../style';\r\nimport { textRefactor } from '../../../components/utilities/utilities';\r\nimport { filterSinglepageGroup } from '../../../redux/chat/actionCreator';\r\nimport { Button } from '../../../components/buttons/buttons';\r\n\r\nconst GroupChat = ({ match }) => {\r\n  const chatData = useSelector(state => state.groupChat.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const dataFiltering = id => {\r\n    dispatch(filterSinglepageGroup(id));\r\n  };\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <div className=\"create-action\">\r\n        <Button className=\"btn-add\" size=\"default\" type=\"default\" shape=\"circle\" block>\r\n          <FeatherIcon icon=\"edit\" size={14} />\r\n          Create New Group\r\n        </Button>\r\n      </div>\r\n\r\n      <ul>\r\n        {chatData &&\r\n          chatData\r\n            .sort((a, b) => {\r\n              return b.time - a.time;\r\n            })\r\n            .map((user, key) => {\r\n              const { groupName, content, id, img } = user;\r\n              const { time } = content[content.length - 1];\r\n              const same = moment(time).format('MM-DD-YYYY') === moment().format('MM-DD-YYYY');\r\n              return (\r\n                <li key={id} className=\"chat-link-signle\">\r\n                  <NavLink onClick={() => dataFiltering(id)} to={`${match.path}/${id}`}>\r\n                    <div className=\"author-figure\">\r\n                      <img src={require(`../../../static/img/chat-author/${img}`)} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"author-info\">\r\n                      <BlockSpan className=\"author-name\">{groupName}</BlockSpan>\r\n                      <BlockSpan className=\"author-chatText\">\r\n                        {textRefactor(content[content.length - 1].content, 5)}\r\n                      </BlockSpan>\r\n                    </div>\r\n                    <div className=\"author-chatMeta\">\r\n                      <BlockSpan>{same ? moment(id).format('hh:mm A') : moment(id).format('dddd')}</BlockSpan>\r\n                      {key <= 1 && <Badge className=\"badge-success\" count={3} />}\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n      </ul>\r\n    </ChatWrapper>\r\n  );\r\n};\r\nGroupChat.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\nexport default GroupChat;\r\n"]},"metadata":{},"sourceType":"module"}