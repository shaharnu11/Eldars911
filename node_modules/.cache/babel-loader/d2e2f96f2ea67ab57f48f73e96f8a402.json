{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/toDo/ToDo.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FeatherIcon from 'feather-icons-react';\nimport { Link } from 'react-router-dom';\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport PropTypes from 'prop-types';\nimport { Span, TodoStyleWrapper } from './style';\nimport { Main, TableWrapper, BasicFormWrapper } from '../styled';\nimport { Modal } from '../../components/modals/antd-modals';\nimport { Button } from '../../components/buttons/buttons';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { ShareButtonPageHeader } from '../../components/buttons/share-button/share-button';\nimport { ExportButtonPageHeader } from '../../components/buttons/export-button/export-button';\nimport { CalendarButtonPageHeader } from '../../components/buttons/calendar-button/calendar-button';\nimport { ToDoAddData, ToDoDeleteData, onStarUpdate } from '../../redux/todo/actionCreator';\nconst DragHandle = sortableHandle(() => /*#__PURE__*/React.createElement(FeatherIcon, {\n  size: 16,\n  style: {\n    cursor: 'pointer',\n    color: '#999'\n  },\n  icon: \"move\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}));\n\nconst ToDo = () => {\n  const todoData = useSelector(state => state.Todo.data);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    inputData: '',\n    selectedRowKeys: []\n  });\n  const {\n    selectedRowKeys,\n    inputData\n  } = state;\n  const columns = [{\n    title: '',\n    dataIndex: 'item'\n  }, {\n    title: '',\n    dataIndex: 'action',\n    width: 120\n  }];\n\n  const onHandleDelete = key => {\n    const data = todoData.filter(item => item.key !== key);\n    dispatch(ToDoDeleteData(data));\n  };\n\n  const dataSource = [];\n\n  if (todoData !== null) {\n    todoData.map((item, index) => {\n      return dataSource.push({\n        key: index + 1,\n        index,\n        item: /*#__PURE__*/React.createElement(Span, {\n          className: selectedRowKeys.includes(index) ? 'todo-title active' : 'todo-title inactive',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, item.item),\n        action: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"todos-action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DragHandle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Link, {\n          className: item.favorite ? 'star active' : 'star',\n          onClick: () => dispatch(onStarUpdate(todoData, item.key)),\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FeatherIcon, {\n          icon: \"star\",\n          style: {\n            color: item.favorite ? 'gold' : '#888'\n          },\n          size: 16,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Link, {\n          onClick: () => onHandleDelete(item.key),\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FeatherIcon, {\n          icon: \"trash-2\",\n          size: 16,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        })))\n      });\n    });\n  }\n\n  const [form] = _Form.useForm();\n\n  const onSelectChange = selectedRowKey => {\n    setState({ ...state,\n      selectedRowKeys: selectedRowKey\n    });\n  };\n\n  const rowSelection = {\n    onChange: onSelectChange,\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    })\n  };\n  const SortableItem = sortableElement(props => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 49\n    }\n  })));\n  const SortableContainer = sortableContainer(props => /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 56\n    }\n  })));\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    if (oldIndex !== newIndex) {\n      const newData = arrayMove([].concat(todoData), oldIndex, newIndex).filter(el => !!el);\n      return dispatch(ToDoAddData(newData));\n    }\n\n    return true;\n  };\n\n  const DraggableBodyRow = ({\n    className,\n    style,\n    ...restProps\n  }) => {\n    // function findIndex base on Table rowKey props and should always be a right array index\n    const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\n    return /*#__PURE__*/React.createElement(SortableItem, Object.assign({\n      index: index\n    }, restProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  DraggableBodyRow.propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  const DraggableContainer = props => /*#__PURE__*/React.createElement(SortableContainer, Object.assign({\n    useDragHandle: true,\n    helperClass: \"row-dragging\",\n    onSortEnd: onSortEnd\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }));\n\n  const onInputChange = e => {\n    setState({ ...state,\n      inputData: e.target.value\n    });\n  };\n\n  const onSubmitHandler = () => {\n    const arrayData = [];\n    todoData.map(data => {\n      return arrayData.push(data.key);\n    });\n    const max = Math.max(...arrayData);\n\n    if (inputData !== '') {\n      dispatch(ToDoAddData([...todoData, {\n        key: max + 1,\n        item: inputData,\n        time: new Date().getTime(),\n        favorite: false\n      }]));\n      setState({ ...state,\n        inputData: '',\n        visible: false\n      });\n    } else {\n      alert('Please Give a Task Title...');\n    }\n  };\n\n  const showModal = () => {\n    setState({ ...state,\n      visible: true\n    });\n  };\n\n  const onCancel = () => {\n    setState({ ...state,\n      visible: false\n    });\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n    ghost: true,\n    title: \"To Do\",\n    buttons: [/*#__PURE__*/React.createElement(\"div\", {\n      key: \"1\",\n      className: \"page-header-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CalendarButtonPageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ExportButtonPageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ShareButtonPageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FeatherIcon, {\n      icon: \"plus\",\n      size: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }), \"Add New\"))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoStyleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    title: \"Task Lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableWrapper, {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    rowSelection: {\n      type: 'checkbox',\n      ...rowSelection\n    },\n    columns: columns,\n    dataSource: dataSource,\n    pagination: false,\n    rowKey: \"index\",\n    components: {\n      body: {\n        wrapper: DraggableContainer,\n        row: DraggableBodyRow\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-todo-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: showModal,\n    className: \"btn-toDoAdd\",\n    transparented: true,\n    type: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, \"+ Add New Task\")))))), /*#__PURE__*/React.createElement(Modal, {\n    type: state.modalType,\n    title: \"Add New Todo\",\n    visible: state.visible,\n    footer: null,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BasicFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    className: \"adTodo-form\",\n    name: \"todoAdd\",\n    form: form,\n    onFinish: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    value: inputData,\n    onChange: onInputChange,\n    placeholder: \"Input Item Name.......\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: showModal,\n    htmlType: \"submit\",\n    className: \"btn-adTodo\",\n    type: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Add New\")))))));\n};\n\n__signature__(ToDo, \"useSelector{todoData}\\nuseDispatch{dispatch}\\nuseState{[state, setState]({\\r\\n    inputData: '',\\r\\n    selectedRowKeys: [],\\r\\n  })}\\nuseForm{[form]}\", () => [useSelector, useDispatch]);\n\nToDo.propTypes = {// match: PropTypes.shape(PropTypes.object),\n};\nconst _default = ToDo;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DragHandle, \"DragHandle\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/toDo/ToDo.js\");\n  reactHotLoader.register(ToDo, \"ToDo\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/toDo/ToDo.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/toDo/ToDo.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/container/toDo/ToDo.js"],"names":["React","useState","useSelector","useDispatch","FeatherIcon","Link","sortableContainer","sortableElement","sortableHandle","arrayMove","PropTypes","Span","TodoStyleWrapper","Main","TableWrapper","BasicFormWrapper","Modal","Button","Cards","PageHeader","ShareButtonPageHeader","ExportButtonPageHeader","CalendarButtonPageHeader","ToDoAddData","ToDoDeleteData","onStarUpdate","DragHandle","cursor","color","ToDo","todoData","state","Todo","data","dispatch","setState","inputData","selectedRowKeys","columns","title","dataIndex","width","onHandleDelete","key","filter","item","dataSource","map","index","push","includes","action","favorite","form","useForm","onSelectChange","selectedRowKey","rowSelection","onChange","getCheckboxProps","record","disabled","name","SortableItem","props","SortableContainer","onSortEnd","oldIndex","newIndex","newData","concat","el","DraggableBodyRow","className","style","restProps","findIndex","x","propTypes","string","object","DraggableContainer","onInputChange","e","target","value","onSubmitHandler","arrayData","max","Math","time","Date","getTime","visible","alert","showModal","onCancel","handleCancel","type","body","wrapper","row","modalType"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Table, Input, Form } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport PropTypes from 'prop-types';\r\nimport { Span, TodoStyleWrapper } from './style';\r\nimport { Main, TableWrapper, BasicFormWrapper } from '../styled';\r\nimport { Modal } from '../../components/modals/antd-modals';\r\nimport { Button } from '../../components/buttons/buttons';\r\nimport { Cards } from '../../components/cards/frame/cards-frame';\r\nimport { PageHeader } from '../../components/page-headers/page-headers';\r\n\r\nimport { ShareButtonPageHeader } from '../../components/buttons/share-button/share-button';\r\nimport { ExportButtonPageHeader } from '../../components/buttons/export-button/export-button';\r\nimport { CalendarButtonPageHeader } from '../../components/buttons/calendar-button/calendar-button';\r\nimport { ToDoAddData, ToDoDeleteData, onStarUpdate } from '../../redux/todo/actionCreator';\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n  <FeatherIcon size={16} style={{ cursor: 'pointer', color: '#999' }} icon=\"move\" />\r\n));\r\n\r\nconst ToDo = () => {\r\n  const todoData = useSelector(state => state.Todo.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    inputData: '',\r\n    selectedRowKeys: [],\r\n  });\r\n  const { selectedRowKeys, inputData } = state;\r\n\r\n  const columns = [\r\n    {\r\n      title: '',\r\n      dataIndex: 'item',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'action',\r\n      width: 120,\r\n    },\r\n  ];\r\n\r\n  const onHandleDelete = key => {\r\n    const data = todoData.filter(item => item.key !== key);\r\n    dispatch(ToDoDeleteData(data));\r\n  };\r\n\r\n  const dataSource = [];\r\n\r\n  if (todoData !== null) {\r\n    todoData.map((item, index) => {\r\n      return dataSource.push({\r\n        key: index + 1,\r\n        index,\r\n        item: (\r\n          <Span className={selectedRowKeys.includes(index) ? 'todo-title active' : 'todo-title inactive'}>\r\n            {item.item}\r\n          </Span>\r\n        ),\r\n        action: (\r\n          <div className=\"todos-action\">\r\n            <DragHandle />\r\n            <Link\r\n              className={item.favorite ? 'star active' : 'star'}\r\n              onClick={() => dispatch(onStarUpdate(todoData, item.key))}\r\n              to=\"#\"\r\n            >\r\n              <FeatherIcon icon=\"star\" style={{ color: item.favorite ? 'gold' : '#888' }} size={16} />\r\n            </Link>\r\n            <Link onClick={() => onHandleDelete(item.key)} to=\"#\">\r\n              <FeatherIcon icon=\"trash-2\" size={16} />\r\n            </Link>\r\n          </div>\r\n        ),\r\n      });\r\n    });\r\n  }\r\n  const [form] = Form.useForm();\r\n\r\n  const onSelectChange = selectedRowKey => {\r\n    setState({ ...state, selectedRowKeys: selectedRowKey });\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: onSelectChange,\r\n    getCheckboxProps: record => ({\r\n      disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const SortableItem = sortableElement(props => <tr {...props} />);\r\n  const SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    if (oldIndex !== newIndex) {\r\n      const newData = arrayMove([].concat(todoData), oldIndex, newIndex).filter(el => !!el);\r\n      return dispatch(ToDoAddData(newData));\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n    // function findIndex base on Table rowKey props and should always be a right array index\r\n    const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n    return <SortableItem index={index} {...restProps} />;\r\n  };\r\n\r\n  DraggableBodyRow.propTypes = {\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n  };\r\n\r\n  const DraggableContainer = props => (\r\n    <SortableContainer useDragHandle helperClass=\"row-dragging\" onSortEnd={onSortEnd} {...props} />\r\n  );\r\n\r\n  const onInputChange = e => {\r\n    setState({\r\n      ...state,\r\n      inputData: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n    const arrayData = [];\r\n    todoData.map(data => {\r\n      return arrayData.push(data.key);\r\n    });\r\n    const max = Math.max(...arrayData);\r\n    if (inputData !== '') {\r\n      dispatch(\r\n        ToDoAddData([\r\n          ...todoData,\r\n          {\r\n            key: max + 1,\r\n            item: inputData,\r\n            time: new Date().getTime(),\r\n            favorite: false,\r\n          },\r\n        ]),\r\n      );\r\n      setState({\r\n        ...state,\r\n        inputData: '',\r\n        visible: false,\r\n      });\r\n    } else {\r\n      alert('Please Give a Task Title...');\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setState({\r\n      ...state,\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setState({\r\n      ...state,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        ghost\r\n        title=\"To Do\"\r\n        buttons={[\r\n          <div key=\"1\" className=\"page-header-actions\">\r\n            <CalendarButtonPageHeader />\r\n            <ExportButtonPageHeader />\r\n            <ShareButtonPageHeader />\r\n            <Button size=\"small\" type=\"primary\">\r\n              <FeatherIcon icon=\"plus\" size={14} />\r\n              Add New\r\n            </Button>\r\n          </div>,\r\n        ]}\r\n      />\r\n\r\n      <Main>\r\n        <Row gutter={30}>\r\n          <Col md={24}>\r\n            <TodoStyleWrapper>\r\n              <Cards title=\"Task Lists\">\r\n                <TableWrapper className=\"table-responsive\">\r\n                  <Table\r\n                    rowSelection={{\r\n                      type: 'checkbox',\r\n                      ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={false}\r\n                    rowKey=\"index\"\r\n                    components={{\r\n                      body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                      },\r\n                    }}\r\n                  />\r\n                </TableWrapper>\r\n                <div className=\"new-todo-wrap\">\r\n                  <Button onClick={showModal} className=\"btn-toDoAdd\" transparented type=\"primary\" size=\"large\">\r\n                    + Add New Task\r\n                  </Button>\r\n                </div>\r\n              </Cards>\r\n            </TodoStyleWrapper>\r\n          </Col>\r\n          {/* <Col md={12}>\r\n            <Cards title=\"Task Lists\" />\r\n          </Col> */}\r\n        </Row>\r\n        <Modal\r\n          type={state.modalType}\r\n          title=\"Add New Todo\"\r\n          visible={state.visible}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n        >\r\n          <div className=\"todo-modal\">\r\n            <BasicFormWrapper>\r\n              <Form className=\"adTodo-form\" name=\"todoAdd\" form={form} onFinish={onSubmitHandler}>\r\n                <Input value={inputData} onChange={onInputChange} placeholder=\"Input Item Name.......\" />\r\n                <br />\r\n                <br />\r\n\r\n                <Button onClick={showModal} htmlType=\"submit\" className=\"btn-adTodo\" type=\"primary\" size=\"large\">\r\n                  Add New\r\n                </Button>\r\n              </Form>\r\n            </BasicFormWrapper>\r\n          </div>\r\n        </Modal>\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nToDo.propTypes = {\r\n  // match: PropTypes.shape(PropTypes.object),\r\n};\r\nexport default ToDo;\r\n"]},"metadata":{},"sourceType":"module"}