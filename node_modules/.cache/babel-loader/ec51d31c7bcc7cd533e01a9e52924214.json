{"ast":null,"code":"import React from'react';import{Map,Marker,Popup,TileLayer}from'react-leaflet';import'leaflet/dist/leaflet.css';// eslint-disable-next-line import/no-unresolved\nimport'leaflet/dist/leaflet.css?url=false';import'leaflet.markercluster/dist/MarkerCluster.css';import'leaflet.markercluster/dist/MarkerCluster.Default.css';import'react-leaflet-markercluster/dist/styles.min.css';import MarkerClusterGroup from'react-leaflet-markercluster';import L from'leaflet';import{GmapWraper}from'./map-style';// eslint-disable-next-line no-underscore-dangle\ndelete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:require('leaflet/dist/images/marker-icon-2x.png'),iconUrl:require('leaflet/dist/images/marker-icon.png'),shadowUrl:require('leaflet/dist/images/marker-shadow.png')});var LeafletMapBasic=function LeafletMapBasic(props){var latitude=props.latitude,longitude=props.longitude,width=props.width,height=props.height,zoom=props.zoom;var position=[latitude,longitude];return/*#__PURE__*/React.createElement(GmapWraper,{width:width,height:height},/*#__PURE__*/React.createElement(Map,{center:position,zoom:zoom},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/React.createElement(Marker,{position:position},/*#__PURE__*/React.createElement(Popup,null,\"A pretty CSS3 popup.\",/*#__PURE__*/React.createElement(\"br\",null),\"Easily customizable.\"))));};var LeafletMapMultipleIcon=function LeafletMapMultipleIcon(props){var latitude=props.latitude,longitude=props.longitude,width=props.width,height=props.height,zoom=props.zoom,data=props.data;var position=[latitude,longitude];return/*#__PURE__*/React.createElement(GmapWraper,{width:width,height:height},/*#__PURE__*/React.createElement(Map,{center:position,zoom:zoom},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),data.map(function(item){return/*#__PURE__*/React.createElement(Marker,{key:item.id,position:item.position},/*#__PURE__*/React.createElement(Popup,null,\"A pretty CSS3 popup.\",/*#__PURE__*/React.createElement(\"br\",null),\"Easily customizable.\"));})));};var LeafletMapCustomIcon=function LeafletMapCustomIcon(props){var latitude=props.latitude,longitude=props.longitude,width=props.width,height=props.height,zoom=props.zoom,faIcon=props.faIcon;var fontAwesomeIcon=L.divIcon({html:\"<i style=\\\"color: #2880CA\\\" class=\\\"\".concat(faIcon,\"\\\"></i>\"),iconSize:[20,20],className:'myDivIcon'});var position=[latitude,longitude];return/*#__PURE__*/React.createElement(GmapWraper,{width:width,height:height},/*#__PURE__*/React.createElement(Map,{center:position,zoom:zoom},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/React.createElement(Marker,{position:position,icon:fontAwesomeIcon},/*#__PURE__*/React.createElement(Popup,null,\"A pretty CSS3 popup.\",/*#__PURE__*/React.createElement(\"br\",null),\"Easily customizable.\"))));};var LeafletMarkerCluster=function LeafletMarkerCluster(props){var latitude=props.latitude,longitude=props.longitude,width=props.width,height=props.height,zoom=props.zoom,data=props.data;var position=[latitude,longitude];return/*#__PURE__*/React.createElement(GmapWraper,{width:width,height:height},/*#__PURE__*/React.createElement(Map,{center:position,zoom:zoom,className:\"markercluster-map\",maxZoom:18},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),/*#__PURE__*/React.createElement(MarkerClusterGroup,null,data.map(function(item){return/*#__PURE__*/React.createElement(Marker,{key:item.id,position:item.position},/*#__PURE__*/React.createElement(Popup,null,\"A pretty CSS3 popup.\",/*#__PURE__*/React.createElement(\"br\",null),\"Easily customizable.\"));}))));};export{LeafletMapBasic,LeafletMapMultipleIcon,LeafletMapCustomIcon,LeafletMarkerCluster};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/components/maps/leaflet.js"],"names":["React","Map","Marker","Popup","TileLayer","MarkerClusterGroup","L","GmapWraper","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LeafletMapBasic","props","latitude","longitude","width","height","zoom","position","LeafletMapMultipleIcon","data","map","item","id","LeafletMapCustomIcon","faIcon","fontAwesomeIcon","divIcon","html","iconSize","className","LeafletMarkerCluster"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\r\nimport PropTypes from 'prop-types';\r\nimport 'leaflet/dist/leaflet.css';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport 'leaflet/dist/leaflet.css?url=false';\r\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\r\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\r\nimport 'react-leaflet-markercluster/dist/styles.min.css';\r\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\r\nimport L from 'leaflet';\r\nimport { GmapWraper } from './map-style';\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst LeafletMapBasic = props => {\r\n  const { latitude, longitude, width, height, zoom } = props;\r\n\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup.\r\n            <br />\r\n            Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\nLeafletMapBasic.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n};\r\n\r\nconst LeafletMapMultipleIcon = props => {\r\n  const { latitude, longitude, width, height, zoom, data } = props;\r\n\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {data.map(item => {\r\n          return (\r\n            <Marker key={item.id} position={item.position}>\r\n              <Popup>\r\n                A pretty CSS3 popup.\r\n                <br />\r\n                Easily customizable.\r\n              </Popup>\r\n            </Marker>\r\n          );\r\n        })}\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\n\r\nLeafletMapMultipleIcon.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst LeafletMapCustomIcon = props => {\r\n  const { latitude, longitude, width, height, zoom, faIcon } = props;\r\n  const fontAwesomeIcon = L.divIcon({\r\n    html: `<i style=\"color: #2880CA\" class=\"${faIcon}\"></i>`,\r\n    iconSize: [20, 20],\r\n    className: 'myDivIcon',\r\n  });\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <Marker position={position} icon={fontAwesomeIcon}>\r\n          <Popup>\r\n            A pretty CSS3 popup.\r\n            <br />\r\n            Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\nLeafletMapCustomIcon.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  faIcon: PropTypes.string,\r\n};\r\n\r\nconst LeafletMarkerCluster = props => {\r\n  const { latitude, longitude, width, height, zoom, data } = props;\r\n\r\n  const position = [latitude, longitude];\r\n  return (\r\n    <GmapWraper width={width} height={height}>\r\n      <Map center={position} zoom={zoom} className=\"markercluster-map\" maxZoom={18}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        <MarkerClusterGroup>\r\n          {data.map(item => {\r\n            return (\r\n              <Marker key={item.id} position={item.position}>\r\n                <Popup>\r\n                  A pretty CSS3 popup.\r\n                  <br />\r\n                  Easily customizable.\r\n                </Popup>\r\n              </Marker>\r\n            );\r\n          })}\r\n        </MarkerClusterGroup>\r\n      </Map>\r\n    </GmapWraper>\r\n  );\r\n};\r\n\r\nLeafletMarkerCluster.propTypes = {\r\n  latitude: PropTypes.number,\r\n  longitude: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  zoom: PropTypes.number,\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport { LeafletMapBasic, LeafletMapMultipleIcon, LeafletMapCustomIcon, LeafletMarkerCluster };\r\n"]},"metadata":{},"sourceType":"module"}