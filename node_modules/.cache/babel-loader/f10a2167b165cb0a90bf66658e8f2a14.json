{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport actions from './actions';\nimport initialState from '../../demoData/friends.json';\nconst {\n  profileFriendsBegin,\n  profileFriendsSuccess,\n  profileFriendsErr,\n  postDataBegin,\n  postDataSuccess,\n  postDataErr\n} = actions;\n\nconst profileFriendsChangeStatus = key => {\n  return async dispatch => {\n    try {\n      dispatch(profileFriendsBegin());\n      initialState.map(friend => {\n        if (friend.key === key) {\n          return friend.status ? friend.status = false : friend.status = true;\n        }\n\n        return dispatch(profileFriendsSuccess(initialState));\n      });\n    } catch (err) {\n      dispatch(profileFriendsErr(err));\n    }\n  };\n};\n\nconst submitPost = data => {\n  return async dispatch => {\n    try {\n      dispatch(postDataBegin());\n      dispatch(postDataSuccess(data));\n    } catch (err) {\n      dispatch(postDataErr(err));\n    }\n  };\n};\n\nconst likeUpdate = (data, key) => {\n  return async dispatch => {\n    try {\n      dispatch(postDataBegin());\n      data.map(post => {\n        if (post.postId === key) {\n          return post.like += 1;\n        }\n\n        return dispatch(postDataSuccess(data));\n      });\n    } catch (err) {\n      dispatch(postDataErr(err));\n    }\n  };\n};\n\nconst commentUpdate = (data, key, comment) => {\n  return async dispatch => {\n    try {\n      dispatch(postDataBegin());\n      data.map(post => {\n        if (post.postId === key) {\n          return post.comment = [...post.comment, {\n            time: new Date().getTime(),\n            from: 'David Warner',\n            text: comment\n          }];\n        }\n\n        return dispatch(postDataSuccess(data));\n      });\n    } catch (err) {\n      dispatch(postDataErr(err));\n    }\n  };\n};\n\nconst postDelete = (data, key) => {\n  return async dispatch => {\n    try {\n      dispatch(postDataBegin());\n      const posts = data.filter(post => {\n        return post.postId !== key;\n      });\n      return dispatch(postDataSuccess(posts));\n    } catch (err) {\n      dispatch(postDataErr(err));\n    }\n  };\n};\n\nexport { profileFriendsChangeStatus, submitPost, likeUpdate, commentUpdate, postDelete };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(profileFriendsBegin, \"profileFriendsBegin\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(profileFriendsSuccess, \"profileFriendsSuccess\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(profileFriendsErr, \"profileFriendsErr\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(postDataBegin, \"postDataBegin\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(postDataSuccess, \"postDataSuccess\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(postDataErr, \"postDataErr\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(profileFriendsChangeStatus, \"profileFriendsChangeStatus\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(submitPost, \"submitPost\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(likeUpdate, \"likeUpdate\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(commentUpdate, \"commentUpdate\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n  reactHotLoader.register(postDelete, \"postDelete\", \"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/profile/actionCreator.js"],"names":["actions","initialState","profileFriendsBegin","profileFriendsSuccess","profileFriendsErr","postDataBegin","postDataSuccess","postDataErr","profileFriendsChangeStatus","key","dispatch","map","friend","status","err","submitPost","data","likeUpdate","post","postId","like","commentUpdate","comment","time","Date","getTime","from","text","postDelete","posts","filter"],"mappings":"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","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/friends.json';\r\n\r\nconst {\r\n  profileFriendsBegin,\r\n  profileFriendsSuccess,\r\n  profileFriendsErr,\r\n  postDataBegin,\r\n  postDataSuccess,\r\n  postDataErr,\r\n} = actions;\r\n\r\nconst profileFriendsChangeStatus = key => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(profileFriendsBegin());\r\n      initialState.map(friend => {\r\n        if (friend.key === key) {\r\n          return friend.status ? (friend.status = false) : (friend.status = true);\r\n        }\r\n        return dispatch(profileFriendsSuccess(initialState));\r\n      });\r\n    } catch (err) {\r\n      dispatch(profileFriendsErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst submitPost = data => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      dispatch(postDataSuccess(data));\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst likeUpdate = (data, key) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      data.map(post => {\r\n        if (post.postId === key) {\r\n          return (post.like += 1);\r\n        }\r\n        return dispatch(postDataSuccess(data));\r\n      });\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst commentUpdate = (data, key, comment) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      data.map(post => {\r\n        if (post.postId === key) {\r\n          return (post.comment = [\r\n            ...post.comment,\r\n            {\r\n              time: new Date().getTime(),\r\n              from: 'David Warner',\r\n              text: comment,\r\n            },\r\n          ]);\r\n        }\r\n        return dispatch(postDataSuccess(data));\r\n      });\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst postDelete = (data, key) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(postDataBegin());\r\n      const posts = data.filter(post => {\r\n        return post.postId !== key;\r\n      });\r\n      return dispatch(postDataSuccess(posts));\r\n    } catch (err) {\r\n      dispatch(postDataErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { profileFriendsChangeStatus, submitPost, likeUpdate, commentUpdate, postDelete };\r\n"]},"metadata":{},"sourceType":"module"}