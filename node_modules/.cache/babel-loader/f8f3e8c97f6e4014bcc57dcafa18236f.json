{"ast":null,"code":"import _toConsumableArray from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import actions from'./actions';import initialState from'../../demoData/chatData.json';var singleChatBegin=actions.singleChatBegin,singleChatSuccess=actions.singleChatSuccess,singleChatErr=actions.singleChatErr,singleGroupChatBegin=actions.singleGroupChatBegin,singleGroupChatSuccess=actions.singleGroupChatSuccess,singleGroupChatErr=actions.singleGroupChatErr,updateGroupChatBegin=actions.updateGroupChatBegin,updateGroupChatSuccess=actions.updateGroupChatSuccess,updateGroupChatErr=actions.updateGroupChatErr,updatePrivetChatBegin=actions.updatePrivetChatBegin,updatePrivetChatSuccess=actions.updatePrivetChatSuccess,updatePrivetChatErr=actions.updatePrivetChatErr;var filterSinglePage=function filterSinglePage(paramsId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{dispatch(singleChatBegin());data=initialState[0].privetChat.filter(function(user){return user.email===paramsId;});dispatch(singleChatSuccess(data));}catch(err){dispatch(singleChatErr(err));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var updatePrivetChat=function updatePrivetChat(paramsId,pushItem){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{dispatch(updatePrivetChatBegin());data=initialState[0].privetChat.map(function(item){var user=item;if(user.email===paramsId){user.time=pushItem.time;user.content=[].concat(_toConsumableArray(user.content),[pushItem]);}return user;});dispatch(updatePrivetChatSuccess(data));}catch(err){dispatch(updatePrivetChatErr(err));}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var filterSinglepageGroup=function filterSinglepageGroup(paramsId){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:try{dispatch(singleGroupChatBegin());data=initialState[0].groupChat.filter(function(user){return user.id===paramsId;});dispatch(singleGroupChatSuccess(data));}catch(err){dispatch(singleGroupChatErr(err));}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};var updateGroupChat=function updateGroupChat(paramsId,pushItem){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:try{dispatch(updateGroupChatBegin());data=initialState[0].groupChat.map(function(item){var user=item;if(user.id===paramsId){user.time=pushItem.time;user.content=[].concat(_toConsumableArray(user.content),[pushItem]);}return user;});dispatch(updateGroupChatSuccess(data));}catch(err){dispatch(updateGroupChatErr(err));}case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export{filterSinglePage,filterSinglepageGroup,updateGroupChat,updatePrivetChat};","map":{"version":3,"sources":["/Users/shaharnussbaum/Desktop/strikingdash/strikingdash/src/redux/chat/actionCreator.js"],"names":["actions","initialState","singleChatBegin","singleChatSuccess","singleChatErr","singleGroupChatBegin","singleGroupChatSuccess","singleGroupChatErr","updateGroupChatBegin","updateGroupChatSuccess","updateGroupChatErr","updatePrivetChatBegin","updatePrivetChatSuccess","updatePrivetChatErr","filterSinglePage","paramsId","dispatch","data","privetChat","filter","user","email","err","updatePrivetChat","pushItem","map","item","time","content","filterSinglepageGroup","groupChat","id","updateGroupChat"],"mappings":"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","sourcesContent":["import actions from './actions';\r\nimport initialState from '../../demoData/chatData.json';\r\n\r\nconst {\r\n  singleChatBegin,\r\n  singleChatSuccess,\r\n  singleChatErr,\r\n\r\n  singleGroupChatBegin,\r\n  singleGroupChatSuccess,\r\n  singleGroupChatErr,\r\n\r\n  updateGroupChatBegin,\r\n  updateGroupChatSuccess,\r\n  updateGroupChatErr,\r\n\r\n  updatePrivetChatBegin,\r\n  updatePrivetChatSuccess,\r\n  updatePrivetChatErr,\r\n} = actions;\r\n\r\nconst filterSinglePage = paramsId => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(singleChatBegin());\r\n      const data = initialState[0].privetChat.filter(user => {\r\n        return user.email === paramsId;\r\n      });\r\n      dispatch(singleChatSuccess(data));\r\n    } catch (err) {\r\n      dispatch(singleChatErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst updatePrivetChat = (paramsId, pushItem) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(updatePrivetChatBegin());\r\n      const data = initialState[0].privetChat.map(item => {\r\n        const user = item;\r\n        if (user.email === paramsId) {\r\n          user.time = pushItem.time;\r\n          user.content = [...user.content, pushItem];\r\n        }\r\n        return user;\r\n      });\r\n      dispatch(updatePrivetChatSuccess(data));\r\n    } catch (err) {\r\n      dispatch(updatePrivetChatErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst filterSinglepageGroup = paramsId => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(singleGroupChatBegin());\r\n      const data = initialState[0].groupChat.filter(user => {\r\n        return user.id === paramsId;\r\n      });\r\n      dispatch(singleGroupChatSuccess(data));\r\n    } catch (err) {\r\n      dispatch(singleGroupChatErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nconst updateGroupChat = (paramsId, pushItem) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(updateGroupChatBegin());\r\n      const data = initialState[0].groupChat.map(item => {\r\n        const user = item;\r\n        if (user.id === paramsId) {\r\n          user.time = pushItem.time;\r\n          user.content = [...user.content, pushItem];\r\n        }\r\n        return user;\r\n      });\r\n      dispatch(updateGroupChatSuccess(data));\r\n    } catch (err) {\r\n      dispatch(updateGroupChatErr(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport { filterSinglePage, filterSinglepageGroup, updateGroupChat, updatePrivetChat };\r\n"]},"metadata":{},"sourceType":"module"}